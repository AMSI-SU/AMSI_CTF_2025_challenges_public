                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module display_system
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _get_system_name
                                     13 	.globl _gotoxy
                                     14 	.globl _font_load
                                     15 	.globl _font_init
                                     16 	.globl _vsync
                                     17 	.globl _printf
                                     18 ;--------------------------------------------------------
                                     19 ; special function registers
                                     20 ;--------------------------------------------------------
                                     21 ;--------------------------------------------------------
                                     22 ; ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area _DATA
                                     25 ;--------------------------------------------------------
                                     26 ; ram data
                                     27 ;--------------------------------------------------------
                                     28 	.area _INITIALIZED
                                     29 ;--------------------------------------------------------
                                     30 ; absolute external ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area _DABS (ABS)
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area _HOME
                                     37 	.area _GSINIT
                                     38 	.area _GSFINAL
                                     39 	.area _GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area _HOME
                                     44 	.area _HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area _CODE
                                     49 ;src/display_system.c:18: const char* get_system_name(uint8_t system)
                                     50 ;	---------------------------------
                                     51 ; Function get_system_name
                                     52 ; ---------------------------------
    00000000                         53 _get_system_name::
                                     54 ;src/display_system.c:20: switch(system)
    00000000 B7               [ 4]   55 	or	a, a
    00000001 28 05            [12]   56 	jr	Z, 00101$
    00000003 3D               [ 4]   57 	dec	a
    00000004 28 06            [12]   58 	jr	Z, 00102$
    00000006 18 08            [12]   59 	jr	00103$
                                     60 ;src/display_system.c:22: case SYSTEM_60HZ:
    00000008                         61 00101$:
                                     62 ;src/display_system.c:23: return "60 Hz";
    00000008 01r14r00         [12]   63 	ld	bc, #___str_0
    0000000B C9               [16]   64 	ret
                                     65 ;src/display_system.c:24: case SYSTEM_50HZ:
    0000000C                         66 00102$:
                                     67 ;src/display_system.c:35: return "50 Hz";
    0000000C 01r1Ar00         [12]   68 	ld	bc, #___str_1
    0000000F C9               [16]   69 	ret
                                     70 ;src/display_system.c:37: default:
    00000010                         71 00103$:
                                     72 ;src/display_system.c:38: return "Unknown";
    00000010 01r20r00         [12]   73 	ld	bc, #___str_2
                                     74 ;src/display_system.c:39: }
                                     75 ;src/display_system.c:40: }
    00000013 C9               [16]   76 	ret
    00000014                         77 ___str_0:
    00000014 36 30 20 48 7A          78 	.ascii "60 Hz"
    00000019 00                      79 	.db 0x00
    0000001A                         80 ___str_1:
    0000001A 35 30 20 48 7A          81 	.ascii "50 Hz"
    0000001F 00                      82 	.db 0x00
    00000020                         83 ___str_2:
    00000020 55 6E 6B 6E 6F 77 6E    84 	.ascii "Unknown"
    00000027 00                      85 	.db 0x00
                                     86 ;src/display_system.c:42: void main(void)
                                     87 ;	---------------------------------
                                     88 ; Function main
                                     89 ; ---------------------------------
    00000028                         90 _main::
                                     91 ;src/display_system.c:47: font_init();
    00000028 CDr00r00         [24]   92 	call	_font_init
                                     93 ;src/display_system.c:48: ibm_font = font_load(font_ibm);
    0000002B 11r00r00         [12]   94 	ld	de, #_font_ibm
    0000002E D5               [16]   95 	push	de
    0000002F CDr00r00         [24]   96 	call	_font_load
    00000032 E1               [12]   97 	pop	hl
                                     98 ;src/display_system.c:49: DISPLAY_ON;
    00000033 F0r00            [12]   99 	ldh	a, (_LCDC_REG + 0)
    00000035 F6 01            [ 8]  100 	or	a, #0x01
    00000037 E0r00            [12]  101 	ldh	(_LCDC_REG + 0), a
                                    102 ;src/display_system.c:50: gotoxy(4, 4);
    00000039 21 04 04         [12]  103 	ld	hl, #0x404
    0000003C E5               [16]  104 	push	hl
    0000003D CDr00r00         [24]  105 	call	_gotoxy
    00000040 E1               [12]  106 	pop	hl
                                    107 ;src/display_system.c:51: printf("System: %s", get_system_name(system));
    00000041 AF               [ 4]  108 	xor	a, a
    00000042 CDr00r00         [24]  109 	call	_get_system_name
    00000045 C5               [16]  110 	push	bc
    00000046 11r52r00         [12]  111 	ld	de, #___str_3
    00000049 D5               [16]  112 	push	de
    0000004A CDr00r00         [24]  113 	call	_printf
    0000004D E8 04            [16]  114 	add	sp, #4
                                    115 ;src/display_system.c:52: vsync();
                                    116 ;src/display_system.c:53: }
    0000004F C3r00r00         [16]  117 	jp	_vsync
    00000052                        118 ___str_3:
    00000052 53 79 73 74 65 6D 3A   119 	.ascii "System: %s"
             20 25 73
    0000005C 00                     120 	.db 0x00
                                    121 	.area _CODE
                                    122 	.area _INITIALIZER
                                    123 	.area _CABS (ABS)

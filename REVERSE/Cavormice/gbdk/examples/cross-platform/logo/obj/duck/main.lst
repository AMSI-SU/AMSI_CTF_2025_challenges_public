                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _fill_bkg_rect
                                     13 	.globl _set_bkg_tiles
                                     14 	.globl _set_bkg_data
                                     15 	.globl _display_off
                                     16 	.globl _vsync
                                     17 ;--------------------------------------------------------
                                     18 ; special function registers
                                     19 ;--------------------------------------------------------
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area _DATA
                                     24 ;--------------------------------------------------------
                                     25 ; ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area _INITIALIZED
                                     28 ;--------------------------------------------------------
                                     29 ; absolute external ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area _DABS (ABS)
                                     32 ;--------------------------------------------------------
                                     33 ; global & static initialisations
                                     34 ;--------------------------------------------------------
                                     35 	.area _HOME
                                     36 	.area _GSINIT
                                     37 	.area _GSFINAL
                                     38 	.area _GSINIT
                                     39 ;--------------------------------------------------------
                                     40 ; Home
                                     41 ;--------------------------------------------------------
                                     42 	.area _HOME
                                     43 	.area _HOME
                                     44 ;--------------------------------------------------------
                                     45 ; code
                                     46 ;--------------------------------------------------------
                                     47 	.area _CODE
                                     48 ;src/main.c:5: void main(void) {
                                     49 ;	---------------------------------
                                     50 ; Function main
                                     51 ; ---------------------------------
    00000000                         52 _main::
                                     53 ;src/main.c:6: DISPLAY_OFF;
    00000000 CDr00r00         [24]   54 	call	_display_off
                                     55 ;src/main.c:7: fill_bkg_rect(0, 0, DEVICE_SCREEN_WIDTH, DEVICE_SCREEN_HEIGHT, 0);
    00000003 AF               [ 4]   56 	xor	a, a
    00000004 67               [ 4]   57 	ld	h, a
    00000005 2E 12            [ 8]   58 	ld	l, #0x12
    00000007 E5               [16]   59 	push	hl
    00000008 3E 14            [ 8]   60 	ld	a, #0x14
    0000000A F5               [16]   61 	push	af
    0000000B 33               [ 8]   62 	inc	sp
    0000000C AF               [ 4]   63 	xor	a, a
    0000000D 0F               [ 4]   64 	rrca
    0000000E F5               [16]   65 	push	af
    0000000F CDr00r00         [24]   66 	call	_fill_bkg_rect
    00000012 E8 05            [16]   67 	add	sp, #5
                                     68 ;src/main.c:19: set_bkg_native_data(0, GBDK_2020_logo_TILE_COUNT, GBDK_2020_logo_tiles);
                                     69 ;../../../include/gb/gb.h:2156: set_bkg_data(first_tile, nb_tiles, data);
    00000014 11r00r00         [12]   70 	ld	de, #_GBDK_2020_logo_tiles
    00000017 D5               [16]   71 	push	de
    00000018 21 00 27         [12]   72 	ld	hl, #0x2700
    0000001B E5               [16]   73 	push	hl
    0000001C CDr00r00         [24]   74 	call	_set_bkg_data
    0000001F E8 04            [16]   75 	add	sp, #4
                                     76 ;src/main.c:25: GBDK_2020_logo_map_attributes);
    00000021 01r00r00         [12]   77 	ld	bc, #_GBDK_2020_logo_map+0
    00000024 59               [ 4]   78 	ld	e, c
    00000025 50               [ 4]   79 	ld	d, b
                                     80 ;../../../include/gb/gb.h:1226: VBK_REG = VBK_ATTRIBUTES;
    00000026 3E 01            [ 8]   81 	ld	a, #0x01
    00000028 E0r00            [12]   82 	ldh	(_VBK_REG + 0), a
                                     83 ;../../../include/gb/gb.h:1227: set_bkg_tiles(x, y, w, h, tiles);
    0000002A D5               [16]   84 	push	de
    0000002B 21 14 12         [12]   85 	ld	hl, #0x1214
    0000002E E5               [16]   86 	push	hl
    0000002F AF               [ 4]   87 	xor	a, a
    00000030 0F               [ 4]   88 	rrca
    00000031 F5               [16]   89 	push	af
    00000032 CDr00r00         [24]   90 	call	_set_bkg_tiles
    00000035 E8 06            [16]   91 	add	sp, #6
                                     92 ;../../../include/gb/gb.h:1228: VBK_REG = VBK_TILES;
    00000037 AF               [ 4]   93 	xor	a, a
    00000038 E0r00            [12]   94 	ldh	(_VBK_REG + 0), a
                                     95 ;src/main.c:31: GBDK_2020_logo_map);
                                     96 ;src/main.c:27: set_tile_map((DEVICE_SCREEN_WIDTH - (GBDK_2020_logo_WIDTH >> 3)) >> 1,
    0000003A C5               [16]   97 	push	bc
    0000003B 21 14 12         [12]   98 	ld	hl, #0x1214
    0000003E E5               [16]   99 	push	hl
    0000003F AF               [ 4]  100 	xor	a, a
    00000040 0F               [ 4]  101 	rrca
    00000041 F5               [16]  102 	push	af
    00000042 CDr00r00         [24]  103 	call	_set_bkg_tiles
    00000045 E8 06            [16]  104 	add	sp, #6
                                    105 ;src/main.c:33: vsync();
    00000047 CDr00r00         [24]  106 	call	_vsync
                                    107 ;src/main.c:34: SHOW_BKG;
    0000004A F0r00            [12]  108 	ldh	a, (_LCDC_REG + 0)
    0000004C F6 40            [ 8]  109 	or	a, #0x40
    0000004E E0r00            [12]  110 	ldh	(_LCDC_REG + 0), a
                                    111 ;src/main.c:35: DISPLAY_ON;
    00000050 F0r00            [12]  112 	ldh	a, (_LCDC_REG + 0)
    00000052 F6 80            [ 8]  113 	or	a, #0x80
    00000054 E0r00            [12]  114 	ldh	(_LCDC_REG + 0), a
                                    115 ;src/main.c:36: }
    00000056 C9               [16]  116 	ret
                                    117 	.area _CODE
                                    118 	.area _INITIALIZER
                                    119 	.area _CABS (ABS)

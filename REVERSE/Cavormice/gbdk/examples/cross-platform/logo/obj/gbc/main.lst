                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _set_bkg_palette
                                     13 	.globl _fill_bkg_rect
                                     14 	.globl _set_bkg_tiles
                                     15 	.globl _set_bkg_data
                                     16 	.globl _display_off
                                     17 	.globl _vsync
                                     18 ;--------------------------------------------------------
                                     19 ; special function registers
                                     20 ;--------------------------------------------------------
                                     21 ;--------------------------------------------------------
                                     22 ; ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area _DATA
                                     25 ;--------------------------------------------------------
                                     26 ; ram data
                                     27 ;--------------------------------------------------------
                                     28 	.area _INITIALIZED
                                     29 ;--------------------------------------------------------
                                     30 ; absolute external ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area _DABS (ABS)
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area _HOME
                                     37 	.area _GSINIT
                                     38 	.area _GSFINAL
                                     39 	.area _GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area _HOME
                                     44 	.area _HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area _CODE
                                     49 ;src/main.c:5: void main(void) {
                                     50 ;	---------------------------------
                                     51 ; Function main
                                     52 ; ---------------------------------
    00000000                         53 _main::
                                     54 ;src/main.c:6: DISPLAY_OFF;
    00000000 CDr00r00         [24]   55 	call	_display_off
                                     56 ;src/main.c:7: fill_bkg_rect(0, 0, DEVICE_SCREEN_WIDTH, DEVICE_SCREEN_HEIGHT, 0);
    00000003 AF               [ 4]   57 	xor	a, a
    00000004 67               [ 4]   58 	ld	h, a
    00000005 2E 12            [ 8]   59 	ld	l, #0x12
    00000007 E5               [16]   60 	push	hl
    00000008 3E 14            [ 8]   61 	ld	a, #0x14
    0000000A F5               [16]   62 	push	af
    0000000B 33               [ 8]   63 	inc	sp
    0000000C AF               [ 4]   64 	xor	a, a
    0000000D 0F               [ 4]   65 	rrca
    0000000E F5               [16]   66 	push	af
    0000000F CDr00r00         [24]   67 	call	_fill_bkg_rect
    00000012 E8 05            [16]   68 	add	sp, #5
                                     69 ;src/main.c:12: if (_cpu == CGB_TYPE) {
    00000014 FAr00r00         [16]   70 	ld	a, (#__cpu)
    00000017 D6 11            [ 8]   71 	sub	a, #0x11
    00000019 20 0D            [12]   72 	jr	NZ, 00102$
                                     73 ;src/main.c:13: set_bkg_palette(BKGF_CGB_PAL0, GBDK_2020_logo_PALETTE_COUNT, GBDK_2020_logo_palettes);
    0000001B 11r00r00         [12]   74 	ld	de, #_GBDK_2020_logo_palettes
    0000001E D5               [16]   75 	push	de
    0000001F 21 00 04         [12]   76 	ld	hl, #0x400
    00000022 E5               [16]   77 	push	hl
    00000023 CDr00r00         [24]   78 	call	_set_bkg_palette
    00000026 E8 04            [16]   79 	add	sp, #4
    00000028                         80 00102$:
                                     81 ;src/main.c:19: set_bkg_native_data(0, GBDK_2020_logo_TILE_COUNT, GBDK_2020_logo_tiles);
                                     82 ;../../../include/gb/gb.h:2156: set_bkg_data(first_tile, nb_tiles, data);
    00000028 11r00r00         [12]   83 	ld	de, #_GBDK_2020_logo_tiles
    0000002B D5               [16]   84 	push	de
    0000002C 21 00 29         [12]   85 	ld	hl, #0x2900
    0000002F E5               [16]   86 	push	hl
    00000030 CDr00r00         [24]   87 	call	_set_bkg_data
    00000033 E8 04            [16]   88 	add	sp, #4
                                     89 ;src/main.c:25: GBDK_2020_logo_map_attributes);
                                     90 ;../../../include/gb/gb.h:1226: VBK_REG = VBK_ATTRIBUTES;
    00000035 3E 01            [ 8]   91 	ld	a, #0x01
    00000037 E0r00            [12]   92 	ldh	(_VBK_REG + 0), a
                                     93 ;../../../include/gb/gb.h:1227: set_bkg_tiles(x, y, w, h, tiles);
    00000039 11r00r00         [12]   94 	ld	de, #_GBDK_2020_logo_map_attributes
    0000003C D5               [16]   95 	push	de
    0000003D 21 14 12         [12]   96 	ld	hl, #0x1214
    00000040 E5               [16]   97 	push	hl
    00000041 AF               [ 4]   98 	xor	a, a
    00000042 0F               [ 4]   99 	rrca
    00000043 F5               [16]  100 	push	af
    00000044 CDr00r00         [24]  101 	call	_set_bkg_tiles
    00000047 E8 06            [16]  102 	add	sp, #6
                                    103 ;../../../include/gb/gb.h:1228: VBK_REG = VBK_TILES;
    00000049 AF               [ 4]  104 	xor	a, a
    0000004A E0r00            [12]  105 	ldh	(_VBK_REG + 0), a
                                    106 ;src/main.c:31: GBDK_2020_logo_map);
                                    107 ;src/main.c:27: set_tile_map((DEVICE_SCREEN_WIDTH - (GBDK_2020_logo_WIDTH >> 3)) >> 1,
    0000004C 11r00r00         [12]  108 	ld	de, #_GBDK_2020_logo_map
    0000004F D5               [16]  109 	push	de
    00000050 21 14 12         [12]  110 	ld	hl, #0x1214
    00000053 E5               [16]  111 	push	hl
    00000054 AF               [ 4]  112 	xor	a, a
    00000055 0F               [ 4]  113 	rrca
    00000056 F5               [16]  114 	push	af
    00000057 CDr00r00         [24]  115 	call	_set_bkg_tiles
    0000005A E8 06            [16]  116 	add	sp, #6
                                    117 ;src/main.c:33: vsync();
    0000005C CDr00r00         [24]  118 	call	_vsync
                                    119 ;src/main.c:34: SHOW_BKG;
    0000005F F0r00            [12]  120 	ldh	a, (_LCDC_REG + 0)
    00000061 F6 01            [ 8]  121 	or	a, #0x01
    00000063 E0r00            [12]  122 	ldh	(_LCDC_REG + 0), a
                                    123 ;src/main.c:35: DISPLAY_ON;
    00000065 F0r00            [12]  124 	ldh	a, (_LCDC_REG + 0)
    00000067 F6 80            [ 8]  125 	or	a, #0x80
    00000069 E0r00            [12]  126 	ldh	(_LCDC_REG + 0), a
                                    127 ;src/main.c:36: }
    0000006B C9               [16]  128 	ret
                                    129 	.area _CODE
                                    130 	.area _INITIALIZER
                                    131 	.area _CABS (ABS)

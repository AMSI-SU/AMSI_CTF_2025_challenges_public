                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module banks_nonintrinsic
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _set_RAM_bank1
                                     13 	.globl _set_RAM_bank0
                                     14 	.globl _set_ROM_bank2
                                     15 	.globl _set_ROM_bank1
                                     16 	.globl _puts
                                     17 	.globl _printf
                                     18 	.globl _putchar
                                     19 	.globl _add_num__ptr
                                     20 	.globl _hello_rom_1
                                     21 	.globl _hello_rom_2
                                     22 	.globl _add_num_sram_0
                                     23 	.globl _hello_sram_0
                                     24 	.globl _add_num_sram_1b
                                     25 	.globl _add_num_sram_1a
                                     26 	.globl _hello_sram_1
                                     27 	.globl _add_num_wram
                                     28 	.globl _data
                                     29 	.globl __current_ram_bank
                                     30 	.globl ___dummy_variable
                                     31 	.globl _hello_code
                                     32 ;--------------------------------------------------------
                                     33 ; special function registers
                                     34 ;--------------------------------------------------------
                         00000000    35 _GG_STATE	=	0x0000
                         00000001    36 _GG_EXT_7BIT	=	0x0001
                         00000002    37 _GG_EXT_CTL	=	0x0002
                         00000003    38 _GG_SIO_SEND	=	0x0003
                         00000004    39 _GG_SIO_RECV	=	0x0004
                         00000005    40 _GG_SIO_CTL	=	0x0005
                         00000006    41 _GG_SOUND_PAN	=	0x0006
                         0000003E    42 _MEMORY_CTL	=	0x003e
                         0000003F    43 _JOY_CTL	=	0x003f
                         0000007E    44 _VCOUNTER	=	0x007e
                         0000007F    45 _PSG	=	0x007f
                         0000007F    46 _HCOUNTER	=	0x007f
                         000000BE    47 _VDP_DATA	=	0x00be
                         000000BF    48 _VDP_CMD	=	0x00bf
                         000000BF    49 _VDP_STATUS	=	0x00bf
                         000000DC    50 _JOY_PORT1	=	0x00dc
                         000000DD    51 _JOY_PORT2	=	0x00dd
                         000000F0    52 _FMADDRESS	=	0x00f0
                         000000F1    53 _FMDATA	=	0x00f1
                         000000F2    54 _AUDIOCTRL	=	0x00f2
                                     55 ;--------------------------------------------------------
                                     56 ; ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area _DATA
                         0000FFFC    59 _RAM_CONTROL	=	0xfffc
                         0000FFF8    60 _GLASSES_3D	=	0xfff8
                         0000FFFD    61 _MAP_FRAME0	=	0xfffd
                         0000FFFE    62 _MAP_FRAME1	=	0xfffe
                         0000FFFF    63 _MAP_FRAME2	=	0xffff
    00000000                         64 ___dummy_variable::
    00000000                         65 	.ds 1
                                     66 ;--------------------------------------------------------
                                     67 ; ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area _INITIALIZED
    00000000                         70 __current_ram_bank::
    00000000                         71 	.ds 1
    00000001                         72 _data::
    00000001                         73 	.ds 20
    00000015                         74 _add_num_wram::
    00000015                         75 	.ds 2
                                     76 ;--------------------------------------------------------
                                     77 ; DATA_1 ram data
                                     78 ;--------------------------------------------------------
                                     79 	.area _DATA_1
    00000000                         80 _hello_sram_1::
    00000000                         81 	.ds 20
    00000014                         82 _add_num_sram_1a::
    00000014                         83 	.ds 2
    00000016                         84 _add_num_sram_1b::
    00000016                         85 	.ds 2
                                     86 ;--------------------------------------------------------
                                     87 ; DATA_0 ram data
                                     88 ;--------------------------------------------------------
                                     89 	.area _DATA_0
    00000000                         90 _hello_sram_0::
    00000000                         91 	.ds 20
    00000014                         92 _add_num_sram_0::
    00000014                         93 	.ds 2
                                     94 ;--------------------------------------------------------
                                     95 ; CODE_2 rom data
                                     96 ;--------------------------------------------------------
                                     97 	.area _CODE_2
    00000000                         98 _hello_rom_2:
    00000000 68 65 6C 6C 6F 20 66    99 	.ascii "hello from CODE_2"
             72 6F 6D 20 43 4F 44
             45 5F 32
    00000011 0A                     100 	.db 0x0a
    00000012 00                     101 	.db 0x00
                                    102 ;--------------------------------------------------------
                                    103 ; CODE_1 rom data
                                    104 ;--------------------------------------------------------
                                    105 	.area _CODE_1
    00000000                        106 _hello_rom_1:
    00000000 68 65 6C 6C 6F 20 66   107 	.ascii "hello from CODE_1"
             72 6F 6D 20 43 4F 44
             45 5F 31
    00000011 0A                     108 	.db 0x0a
    00000012 00                     109 	.db 0x00
    00000013                        110 _add_num__ptr:
    00000013r14r00                  111 	.dw _add_num_sram_1a
    00000015r16r00                  112 	.dw _add_num_sram_1b
                                    113 ;--------------------------------------------------------
                                    114 ; absolute external ram data
                                    115 ;--------------------------------------------------------
                                    116 	.area _DABS (ABS)
                                    117 ;--------------------------------------------------------
                                    118 ; global & static initialisations
                                    119 ;--------------------------------------------------------
                                    120 	.area _HOME
                                    121 	.area _GSINIT
                                    122 	.area _GSFINAL
                                    123 	.area _GSINIT
                                    124 ;--------------------------------------------------------
                                    125 ; Home
                                    126 ;--------------------------------------------------------
                                    127 	.area _HOME
                                    128 ;src/banks_nonintrinsic.c:21: void set_ROM_bank1(void) NONBANKED { SWITCH_ROM(1); }
                                    129 ;	---------------------------------
                                    130 ; Function set_ROM_bank1
                                    131 ; ---------------------------------
    00000000                        132 _set_ROM_bank1::
    00000000 21 FE FF         [10]  133 	ld	hl, #_MAP_FRAME1
    00000003 36 01            [10]  134 	ld	(hl), #0x01
    00000005 C9               [10]  135 	ret
    00000006                        136 _hello_code:
    00000006 68 65 6C 6C 6F 20 66   137 	.ascii "hello from CODE"
             72 6F 6D 20 43 4F 44
             45
    00000015 0A                     138 	.db 0x0a
    00000016 00                     139 	.db 0x00
                                    140 ;src/banks_nonintrinsic.c:22: void set_ROM_bank2(void) NONBANKED { SWITCH_ROM(2); }
                                    141 ;	---------------------------------
                                    142 ; Function set_ROM_bank2
                                    143 ; ---------------------------------
    00000017                        144 _set_ROM_bank2::
    00000017 21 FE FF         [10]  145 	ld	hl, #_MAP_FRAME1
    0000001A 36 02            [10]  146 	ld	(hl), #0x02
    0000001C C9               [10]  147 	ret
                                    148 ;src/banks_nonintrinsic.c:31: void set_RAM_bank0(void) NONBANKED { SWITCH_RAM_BANK(0); }
                                    149 ;	---------------------------------
                                    150 ; Function set_RAM_bank0
                                    151 ; ---------------------------------
    0000001D                        152 _set_RAM_bank0::
    0000001D 3A FC FF         [13]  153 	ld	a, (_RAM_CONTROL+0)
    00000020 E6 FB            [ 7]  154 	and	a, #0xfb
    00000022 32 FC FF         [13]  155 	ld	(_RAM_CONTROL+0), a
    00000025 21r00r00         [10]  156 	ld	hl, #__current_ram_bank
    00000028 36 00            [10]  157 	ld	(hl), #0x00
    0000002A C9               [10]  158 	ret
                                    159 ;src/banks_nonintrinsic.c:32: void set_RAM_bank1(void) NONBANKED { SWITCH_RAM_BANK(1); }
                                    160 ;	---------------------------------
                                    161 ; Function set_RAM_bank1
                                    162 ; ---------------------------------
    0000002B                        163 _set_RAM_bank1::
    0000002B 3A FC FF         [13]  164 	ld	a, (_RAM_CONTROL+0)
    0000002E F6 04            [ 7]  165 	or	a, #0x04
    00000030 32 FC FF         [13]  166 	ld	(_RAM_CONTROL+0), a
    00000033 21r00r00         [10]  167 	ld	hl, #__current_ram_bank
    00000036 36 01            [10]  168 	ld	(hl), #0x01
    00000038 C9               [10]  169 	ret
                                    170 	.area _HOME
                                    171 ;--------------------------------------------------------
                                    172 ; code
                                    173 ;--------------------------------------------------------
                                    174 	.area _CODE
                                    175 ;src/banks_nonintrinsic.c:50: void main(void) {
                                    176 ;	---------------------------------
                                    177 ; Function main
                                    178 ; ---------------------------------
    00000000                        179 _main::
    00000000 DD E5            [15]  180 	push	ix
    00000002 DD 21 00 00      [14]  181 	ld	ix,#0
    00000006 DD 39            [15]  182 	add	ix,sp
    00000008 3B               [ 6]  183 	dec	sp
                                    184 ;src/banks_nonintrinsic.c:51: ENABLE_RAM;
    00000009 CDr1Dr00         [17]  185 	call	_set_RAM_bank0
    0000000C 3A FC FF         [13]  186 	ld	a, (_RAM_CONTROL+0)
    0000000F F6 08            [ 7]  187 	or	a, #0x08
    00000011 32 FC FF         [13]  188 	ld	(_RAM_CONTROL+0), a
                                    189 ;src/banks_nonintrinsic.c:53: add_num_sram_0 = 2;
    00000014 21 02 00         [10]  190 	ld	hl, #0x0002
    00000017 22r14r00         [16]  191 	ld	(_add_num_sram_0), hl
                                    192 ;src/banks_nonintrinsic.c:54: add_num_sram_1a = 4;
    0000001A CDr2Br00         [17]  193 	call	_set_RAM_bank1
    0000001D 21 04 00         [10]  194 	ld	hl, #0x0004
    00000020 22r14r00         [16]  195 	ld	(_add_num_sram_1a), hl
                                    196 ;src/banks_nonintrinsic.c:55: add_num_sram_1b = 8;
    00000023 2E 08            [ 7]  197 	ld	l, #0x08
    00000025 22r16r00         [16]  198 	ld	(_add_num_sram_1b), hl
                                    199 ;src/banks_nonintrinsic.c:58: for (int8_t i = 0; (hello_code[i]); i++) putchar(hello_code[i]);
    00000028 DD 36 FF 00      [19]  200 	ld	-1 (ix), #0x00
    0000002C                        201 00119$:
    0000002C DD 7E FF         [19]  202 	ld	a, -1 (ix)
    0000002F 4F               [ 4]  203 	ld	c, a
    00000030 07               [ 4]  204 	rlca
    00000031 9F               [ 4]  205 	sbc	a, a
    00000032 47               [ 4]  206 	ld	b, a
    00000033 21r06r00         [10]  207 	ld	hl, #_hello_code
    00000036 09               [11]  208 	add	hl, bc
    00000037 7E               [ 7]  209 	ld	a, (hl)
    00000038 B7               [ 4]  210 	or	a, a
    00000039 28 0B            [12]  211 	jr	Z, 00101$
    0000003B F5               [11]  212 	push	af
    0000003C 33               [ 6]  213 	inc	sp
    0000003D CDr00r00         [17]  214 	call	_putchar
    00000040 33               [ 6]  215 	inc	sp
    00000041 DD 34 FF         [23]  216 	inc	-1 (ix)
    00000044 18 E6            [12]  217 	jr	00119$
    00000046                        218 00101$:
                                    219 ;src/banks_nonintrinsic.c:59: for (int8_t i = 0; (hello_rom_1[i]); i++) putchar(hello_rom_1[i]);
    00000046 0E 00            [ 7]  220 	ld	c, #0x00
    00000048                        221 00122$:
    00000048 79               [ 4]  222 	ld	a, c
    00000049 5F               [ 4]  223 	ld	e, a
    0000004A 07               [ 4]  224 	rlca
    0000004B 9F               [ 4]  225 	sbc	a, a
    0000004C 57               [ 4]  226 	ld	d, a
    0000004D C5               [11]  227 	push	bc
    0000004E D5               [11]  228 	push	de
    0000004F CDr00r00         [17]  229 	call	_set_ROM_bank1
    00000052 D1               [10]  230 	pop	de
    00000053 C1               [10]  231 	pop	bc
    00000054 21r00r00         [10]  232 	ld	hl, #_hello_rom_1
    00000057 19               [11]  233 	add	hl, de
    00000058 7E               [ 7]  234 	ld	a, (hl)
    00000059 B7               [ 4]  235 	or	a, a
    0000005A 28 0B            [12]  236 	jr	Z, 00102$
    0000005C C5               [11]  237 	push	bc
    0000005D F5               [11]  238 	push	af
    0000005E 33               [ 6]  239 	inc	sp
    0000005F CDr00r00         [17]  240 	call	_putchar
    00000062 33               [ 6]  241 	inc	sp
    00000063 C1               [10]  242 	pop	bc
    00000064 0C               [ 4]  243 	inc	c
    00000065 18 E1            [12]  244 	jr	00122$
    00000067                        245 00102$:
                                    246 ;src/banks_nonintrinsic.c:60: for (int8_t i = 0; (hello_rom_2[i]); i++) putchar(hello_rom_2[i]);
    00000067 0E 00            [ 7]  247 	ld	c, #0x00
    00000069                        248 00125$:
    00000069 79               [ 4]  249 	ld	a, c
    0000006A 5F               [ 4]  250 	ld	e, a
    0000006B 07               [ 4]  251 	rlca
    0000006C 9F               [ 4]  252 	sbc	a, a
    0000006D 57               [ 4]  253 	ld	d, a
    0000006E C5               [11]  254 	push	bc
    0000006F D5               [11]  255 	push	de
    00000070 CDr17r00         [17]  256 	call	_set_ROM_bank2
    00000073 D1               [10]  257 	pop	de
    00000074 C1               [10]  258 	pop	bc
    00000075 21r00r00         [10]  259 	ld	hl, #_hello_rom_2
    00000078 19               [11]  260 	add	hl, de
    00000079 7E               [ 7]  261 	ld	a, (hl)
    0000007A B7               [ 4]  262 	or	a, a
    0000007B 28 0B            [12]  263 	jr	Z, 00103$
    0000007D C5               [11]  264 	push	bc
    0000007E F5               [11]  265 	push	af
    0000007F 33               [ 6]  266 	inc	sp
    00000080 CDr00r00         [17]  267 	call	_putchar
    00000083 33               [ 6]  268 	inc	sp
    00000084 C1               [10]  269 	pop	bc
    00000085 0C               [ 4]  270 	inc	c
    00000086 18 E1            [12]  271 	jr	00125$
    00000088                        272 00103$:
                                    273 ;src/banks_nonintrinsic.c:63: for (int8_t i = 0; (i < sizeof(hello_rom_1)); i++) hello_sram_0[i] = hello_rom_1[i];
    00000088 0E 00            [ 7]  274 	ld	c, #0x00
    0000008A                        275 00128$:
    0000008A 79               [ 4]  276 	ld	a, c
    0000008B EE 80            [ 7]  277 	xor	a, #0x80
    0000008D D6 93            [ 7]  278 	sub	a, #0x93
    0000008F 3E 00            [ 7]  279 	ld	a, #0x00
    00000091 17               [ 4]  280 	rla
    00000092 47               [ 4]  281 	ld	b, a
    00000093 C5               [11]  282 	push	bc
    00000094 CDr00r00         [17]  283 	call	_set_ROM_bank1
    00000097 C1               [10]  284 	pop	bc
    00000098 78               [ 4]  285 	ld	a, b
    00000099 B7               [ 4]  286 	or	a, a
    0000009A 28 1D            [12]  287 	jr	Z, 00104$
    0000009C 79               [ 4]  288 	ld	a, c
    0000009D 5F               [ 4]  289 	ld	e, a
    0000009E 07               [ 4]  290 	rlca
    0000009F 9F               [ 4]  291 	sbc	a, a
    000000A0 57               [ 4]  292 	ld	d, a
    000000A1 21r00r00         [10]  293 	ld	hl, #_hello_sram_0
    000000A4 19               [11]  294 	add	hl, de
    000000A5 FD 21r00r00      [14]  295 	ld	iy, #_hello_rom_1
    000000A9 FD 19            [15]  296 	add	iy, de
    000000AB FD 46 00         [19]  297 	ld	b, 0 (iy)
    000000AE E5               [11]  298 	push	hl
    000000AF C5               [11]  299 	push	bc
    000000B0 CDr1Dr00         [17]  300 	call	_set_RAM_bank0
    000000B3 C1               [10]  301 	pop	bc
    000000B4 E1               [10]  302 	pop	hl
    000000B5 70               [ 7]  303 	ld	(hl), b
    000000B6 0C               [ 4]  304 	inc	c
    000000B7 18 D1            [12]  305 	jr	00128$
    000000B9                        306 00104$:
                                    307 ;src/banks_nonintrinsic.c:64: for (int8_t i = 0; (i < 4); i++) hello_sram_0[i + 11] = data[i];
    000000B9 0E 00            [ 7]  308 	ld	c, #0x00
    000000BB C5               [11]  309 	push	bc
    000000BC CDr1Dr00         [17]  310 	call	_set_RAM_bank0
    000000BF C1               [10]  311 	pop	bc
    000000C0                        312 00131$:
    000000C0 79               [ 4]  313 	ld	a, c
    000000C1 EE 80            [ 7]  314 	xor	a, #0x80
    000000C3 D6 84            [ 7]  315 	sub	a, #0x84
    000000C5 30 1D            [12]  316 	jr	NC, 00105$
    000000C7 79               [ 4]  317 	ld	a, c
    000000C8 C6 0B            [ 7]  318 	add	a, #0x0b
    000000CA 5F               [ 4]  319 	ld	e, a
    000000CB 07               [ 4]  320 	rlca
    000000CC 9F               [ 4]  321 	sbc	a, a
    000000CD 57               [ 4]  322 	ld	d, a
    000000CE 21r00r00         [10]  323 	ld	hl, #_hello_sram_0
    000000D1 19               [11]  324 	add	hl, de
    000000D2 79               [ 4]  325 	ld	a, c
    000000D3 5F               [ 4]  326 	ld	e, a
    000000D4 07               [ 4]  327 	rlca
    000000D5 9F               [ 4]  328 	sbc	a, a
    000000D6 57               [ 4]  329 	ld	d, a
    000000D7 FD 21r01r00      [14]  330 	ld	iy, #_data
    000000DB FD 19            [15]  331 	add	iy, de
    000000DD FD 7E 00         [19]  332 	ld	a, 0 (iy)
    000000E0 77               [ 7]  333 	ld	(hl), a
    000000E1 0C               [ 4]  334 	inc	c
    000000E2 18 DC            [12]  335 	jr	00131$
    000000E4                        336 00105$:
                                    337 ;src/banks_nonintrinsic.c:65: for (int8_t i = 0; (hello_sram_0[i]); i++) putchar(hello_sram_0[i]);
    000000E4 1E 00            [ 7]  338 	ld	e, #0x00
    000000E6                        339 00134$:
    000000E6 7B               [ 4]  340 	ld	a, e
    000000E7 4F               [ 4]  341 	ld	c, a
    000000E8 07               [ 4]  342 	rlca
    000000E9 9F               [ 4]  343 	sbc	a, a
    000000EA 47               [ 4]  344 	ld	b, a
    000000EB 21r00r00         [10]  345 	ld	hl, #_hello_sram_0
    000000EE 09               [11]  346 	add	hl, bc
    000000EF 7E               [ 7]  347 	ld	a, (hl)
    000000F0 B7               [ 4]  348 	or	a, a
    000000F1 28 0E            [12]  349 	jr	Z, 00106$
    000000F3 D5               [11]  350 	push	de
    000000F4 F5               [11]  351 	push	af
    000000F5 33               [ 6]  352 	inc	sp
    000000F6 CDr00r00         [17]  353 	call	_putchar
    000000F9 33               [ 6]  354 	inc	sp
    000000FA CDr1Dr00         [17]  355 	call	_set_RAM_bank0
    000000FD D1               [10]  356 	pop	de
    000000FE 1C               [ 4]  357 	inc	e
    000000FF 18 E5            [12]  358 	jr	00134$
    00000101                        359 00106$:
                                    360 ;src/banks_nonintrinsic.c:68: for (int8_t i = 0; (i < sizeof(hello_rom_2)); i++) hello_sram_1[i] = hello_rom_2[i];
    00000101 0E 00            [ 7]  361 	ld	c, #0x00
    00000103                        362 00137$:
    00000103 79               [ 4]  363 	ld	a, c
    00000104 EE 80            [ 7]  364 	xor	a, #0x80
    00000106 D6 93            [ 7]  365 	sub	a, #0x93
    00000108 3E 00            [ 7]  366 	ld	a, #0x00
    0000010A 17               [ 4]  367 	rla
    0000010B 47               [ 4]  368 	ld	b, a
    0000010C C5               [11]  369 	push	bc
    0000010D CDr17r00         [17]  370 	call	_set_ROM_bank2
    00000110 C1               [10]  371 	pop	bc
    00000111 78               [ 4]  372 	ld	a, b
    00000112 B7               [ 4]  373 	or	a, a
    00000113 28 1D            [12]  374 	jr	Z, 00107$
    00000115 79               [ 4]  375 	ld	a, c
    00000116 5F               [ 4]  376 	ld	e, a
    00000117 07               [ 4]  377 	rlca
    00000118 9F               [ 4]  378 	sbc	a, a
    00000119 57               [ 4]  379 	ld	d, a
    0000011A 21r00r00         [10]  380 	ld	hl, #_hello_sram_1
    0000011D 19               [11]  381 	add	hl, de
    0000011E FD 21r00r00      [14]  382 	ld	iy, #_hello_rom_2
    00000122 FD 19            [15]  383 	add	iy, de
    00000124 FD 46 00         [19]  384 	ld	b, 0 (iy)
    00000127 E5               [11]  385 	push	hl
    00000128 C5               [11]  386 	push	bc
    00000129 CDr2Br00         [17]  387 	call	_set_RAM_bank1
    0000012C C1               [10]  388 	pop	bc
    0000012D E1               [10]  389 	pop	hl
    0000012E 70               [ 7]  390 	ld	(hl), b
    0000012F 0C               [ 4]  391 	inc	c
    00000130 18 D1            [12]  392 	jr	00137$
    00000132                        393 00107$:
                                    394 ;src/banks_nonintrinsic.c:69: for (int8_t i = 0; (i < 4); i++) hello_sram_1[i + 11] = data[i];
    00000132 0E 00            [ 7]  395 	ld	c, #0x00
    00000134 C5               [11]  396 	push	bc
    00000135 CDr2Br00         [17]  397 	call	_set_RAM_bank1
    00000138 C1               [10]  398 	pop	bc
    00000139                        399 00140$:
    00000139 79               [ 4]  400 	ld	a, c
    0000013A EE 80            [ 7]  401 	xor	a, #0x80
    0000013C D6 84            [ 7]  402 	sub	a, #0x84
    0000013E 30 1C            [12]  403 	jr	NC, 00108$
    00000140 79               [ 4]  404 	ld	a, c
    00000141 C6 0B            [ 7]  405 	add	a, #0x0b
    00000143 5F               [ 4]  406 	ld	e, a
    00000144 07               [ 4]  407 	rlca
    00000145 9F               [ 4]  408 	sbc	a, a
    00000146 57               [ 4]  409 	ld	d, a
    00000147 21r00r00         [10]  410 	ld	hl, #_hello_sram_1
    0000014A 19               [11]  411 	add	hl, de
    0000014B EB               [ 4]  412 	ex	de, hl
    0000014C 79               [ 4]  413 	ld	a, c
    0000014D 6F               [ 4]  414 	ld	l, a
                                    415 ;	spillPairReg hl
                                    416 ;	spillPairReg hl
    0000014E 07               [ 4]  417 	rlca
    0000014F 9F               [ 4]  418 	sbc	a, a
    00000150 67               [ 4]  419 	ld	h, a
                                    420 ;	spillPairReg hl
                                    421 ;	spillPairReg hl
    00000151 D5               [11]  422 	push	de
    00000152 11r01r00         [10]  423 	ld	de, #_data
    00000155 19               [11]  424 	add	hl, de
    00000156 D1               [10]  425 	pop	de
    00000157 7E               [ 7]  426 	ld	a, (hl)
    00000158 12               [ 7]  427 	ld	(de), a
    00000159 0C               [ 4]  428 	inc	c
    0000015A 18 DD            [12]  429 	jr	00140$
    0000015C                        430 00108$:
                                    431 ;src/banks_nonintrinsic.c:70: for (int8_t i = 0; (hello_sram_1[i]); i++) putchar(hello_sram_1[i]);
    0000015C 0E 00            [ 7]  432 	ld	c, #0x00
    0000015E                        433 00143$:
    0000015E 79               [ 4]  434 	ld	a, c
    0000015F 5F               [ 4]  435 	ld	e, a
    00000160 07               [ 4]  436 	rlca
    00000161 9F               [ 4]  437 	sbc	a, a
    00000162 57               [ 4]  438 	ld	d, a
    00000163 21r00r00         [10]  439 	ld	hl, #_hello_sram_1
    00000166 19               [11]  440 	add	hl, de
    00000167 7E               [ 7]  441 	ld	a, (hl)
    00000168 B7               [ 4]  442 	or	a, a
    00000169 28 0E            [12]  443 	jr	Z, 00109$
    0000016B C5               [11]  444 	push	bc
    0000016C F5               [11]  445 	push	af
    0000016D 33               [ 6]  446 	inc	sp
    0000016E CDr00r00         [17]  447 	call	_putchar
    00000171 33               [ 6]  448 	inc	sp
    00000172 CDr2Br00         [17]  449 	call	_set_RAM_bank1
    00000175 C1               [10]  450 	pop	bc
    00000176 0C               [ 4]  451 	inc	c
    00000177 18 E5            [12]  452 	jr	00143$
    00000179                        453 00109$:
                                    454 ;src/banks_nonintrinsic.c:72: printf("once more...\n");
    00000179 21rD7r02         [10]  455 	ld	hl, #___str_2
    0000017C CDr00r00         [17]  456 	call	_puts
                                    457 ;src/banks_nonintrinsic.c:74: for (int8_t i = 0; (hello_code[i]); i++) putchar(hello_code[i]);
    0000017F 0E 00            [ 7]  458 	ld	c, #0x00
    00000181                        459 00146$:
    00000181 79               [ 4]  460 	ld	a, c
    00000182 5F               [ 4]  461 	ld	e, a
    00000183 07               [ 4]  462 	rlca
    00000184 9F               [ 4]  463 	sbc	a, a
    00000185 57               [ 4]  464 	ld	d, a
    00000186 21r06r00         [10]  465 	ld	hl, #_hello_code
    00000189 19               [11]  466 	add	hl, de
    0000018A 7E               [ 7]  467 	ld	a, (hl)
    0000018B B7               [ 4]  468 	or	a, a
    0000018C 28 0B            [12]  469 	jr	Z, 00110$
    0000018E C5               [11]  470 	push	bc
    0000018F F5               [11]  471 	push	af
    00000190 33               [ 6]  472 	inc	sp
    00000191 CDr00r00         [17]  473 	call	_putchar
    00000194 33               [ 6]  474 	inc	sp
    00000195 C1               [10]  475 	pop	bc
    00000196 0C               [ 4]  476 	inc	c
    00000197 18 E8            [12]  477 	jr	00146$
    00000199                        478 00110$:
                                    479 ;src/banks_nonintrinsic.c:75: for (int8_t i = 0; (hello_rom_1[i]); i++) putchar(hello_rom_1[i]);
    00000199 0E 00            [ 7]  480 	ld	c, #0x00
    0000019B                        481 00149$:
    0000019B 79               [ 4]  482 	ld	a, c
    0000019C 5F               [ 4]  483 	ld	e, a
    0000019D 07               [ 4]  484 	rlca
    0000019E 9F               [ 4]  485 	sbc	a, a
    0000019F 57               [ 4]  486 	ld	d, a
    000001A0 C5               [11]  487 	push	bc
    000001A1 D5               [11]  488 	push	de
    000001A2 CDr00r00         [17]  489 	call	_set_ROM_bank1
    000001A5 D1               [10]  490 	pop	de
    000001A6 C1               [10]  491 	pop	bc
    000001A7 21r00r00         [10]  492 	ld	hl, #_hello_rom_1
    000001AA 19               [11]  493 	add	hl, de
    000001AB 7E               [ 7]  494 	ld	a, (hl)
    000001AC B7               [ 4]  495 	or	a, a
    000001AD 28 0B            [12]  496 	jr	Z, 00111$
    000001AF C5               [11]  497 	push	bc
    000001B0 F5               [11]  498 	push	af
    000001B1 33               [ 6]  499 	inc	sp
    000001B2 CDr00r00         [17]  500 	call	_putchar
    000001B5 33               [ 6]  501 	inc	sp
    000001B6 C1               [10]  502 	pop	bc
    000001B7 0C               [ 4]  503 	inc	c
    000001B8 18 E1            [12]  504 	jr	00149$
    000001BA                        505 00111$:
                                    506 ;src/banks_nonintrinsic.c:76: for (int8_t i = 0; (hello_rom_2[i]); i++) putchar(hello_rom_2[i]);
    000001BA 0E 00            [ 7]  507 	ld	c, #0x00
    000001BC                        508 00152$:
    000001BC 79               [ 4]  509 	ld	a, c
    000001BD 5F               [ 4]  510 	ld	e, a
    000001BE 07               [ 4]  511 	rlca
    000001BF 9F               [ 4]  512 	sbc	a, a
    000001C0 57               [ 4]  513 	ld	d, a
    000001C1 C5               [11]  514 	push	bc
    000001C2 D5               [11]  515 	push	de
    000001C3 CDr17r00         [17]  516 	call	_set_ROM_bank2
    000001C6 D1               [10]  517 	pop	de
    000001C7 C1               [10]  518 	pop	bc
    000001C8 21r00r00         [10]  519 	ld	hl, #_hello_rom_2
    000001CB 19               [11]  520 	add	hl, de
    000001CC 7E               [ 7]  521 	ld	a, (hl)
    000001CD B7               [ 4]  522 	or	a, a
    000001CE 28 0B            [12]  523 	jr	Z, 00112$
    000001D0 C5               [11]  524 	push	bc
    000001D1 F5               [11]  525 	push	af
    000001D2 33               [ 6]  526 	inc	sp
    000001D3 CDr00r00         [17]  527 	call	_putchar
    000001D6 33               [ 6]  528 	inc	sp
    000001D7 C1               [10]  529 	pop	bc
    000001D8 0C               [ 4]  530 	inc	c
    000001D9 18 E1            [12]  531 	jr	00152$
    000001DB                        532 00112$:
                                    533 ;src/banks_nonintrinsic.c:77: for (int8_t i = 0; (hello_sram_0[i]); i++) putchar(hello_sram_0[i]);
    000001DB 0E 00            [ 7]  534 	ld	c, #0x00
    000001DD                        535 00155$:
    000001DD 79               [ 4]  536 	ld	a, c
    000001DE 5F               [ 4]  537 	ld	e, a
    000001DF 07               [ 4]  538 	rlca
    000001E0 9F               [ 4]  539 	sbc	a, a
    000001E1 57               [ 4]  540 	ld	d, a
    000001E2 C5               [11]  541 	push	bc
    000001E3 D5               [11]  542 	push	de
    000001E4 CDr1Dr00         [17]  543 	call	_set_RAM_bank0
    000001E7 D1               [10]  544 	pop	de
    000001E8 C1               [10]  545 	pop	bc
    000001E9 21r00r00         [10]  546 	ld	hl, #_hello_sram_0
    000001EC 19               [11]  547 	add	hl, de
    000001ED 7E               [ 7]  548 	ld	a, (hl)
    000001EE B7               [ 4]  549 	or	a, a
    000001EF 28 0B            [12]  550 	jr	Z, 00113$
    000001F1 C5               [11]  551 	push	bc
    000001F2 F5               [11]  552 	push	af
    000001F3 33               [ 6]  553 	inc	sp
    000001F4 CDr00r00         [17]  554 	call	_putchar
    000001F7 33               [ 6]  555 	inc	sp
    000001F8 C1               [10]  556 	pop	bc
    000001F9 0C               [ 4]  557 	inc	c
    000001FA 18 E1            [12]  558 	jr	00155$
    000001FC                        559 00113$:
                                    560 ;src/banks_nonintrinsic.c:78: for (int8_t i = 0; (hello_sram_1[i]); i++) putchar(hello_sram_1[i]);
    000001FC 0E 00            [ 7]  561 	ld	c, #0x00
    000001FE                        562 00158$:
    000001FE 79               [ 4]  563 	ld	a, c
    000001FF 5F               [ 4]  564 	ld	e, a
    00000200 07               [ 4]  565 	rlca
    00000201 9F               [ 4]  566 	sbc	a, a
    00000202 57               [ 4]  567 	ld	d, a
    00000203 C5               [11]  568 	push	bc
    00000204 D5               [11]  569 	push	de
    00000205 CDr2Br00         [17]  570 	call	_set_RAM_bank1
    00000208 D1               [10]  571 	pop	de
    00000209 C1               [10]  572 	pop	bc
    0000020A 21r00r00         [10]  573 	ld	hl, #_hello_sram_1
    0000020D 19               [11]  574 	add	hl, de
    0000020E 7E               [ 7]  575 	ld	a, (hl)
    0000020F B7               [ 4]  576 	or	a, a
    00000210 28 0B            [12]  577 	jr	Z, 00114$
    00000212 C5               [11]  578 	push	bc
    00000213 F5               [11]  579 	push	af
    00000214 33               [ 6]  580 	inc	sp
    00000215 CDr00r00         [17]  581 	call	_putchar
    00000218 33               [ 6]  582 	inc	sp
    00000219 C1               [10]  583 	pop	bc
    0000021A 0C               [ 4]  584 	inc	c
    0000021B 18 E1            [12]  585 	jr	00158$
    0000021D                        586 00114$:
                                    587 ;src/banks_nonintrinsic.c:80: printf("once more...\n");
    0000021D 21rD7r02         [10]  588 	ld	hl, #___str_2
    00000220 CDr00r00         [17]  589 	call	_puts
                                    590 ;src/banks_nonintrinsic.c:82: printf("%s", hello_code);
    00000223 21r06r00         [10]  591 	ld	hl, #_hello_code
    00000226 E5               [11]  592 	push	hl
    00000227 21rE4r02         [10]  593 	ld	hl, #___str_4
    0000022A E5               [11]  594 	push	hl
    0000022B CDr00r00         [17]  595 	call	_printf
    0000022E F1               [10]  596 	pop	af
    0000022F F1               [10]  597 	pop	af
                                    598 ;src/banks_nonintrinsic.c:83: printf("%s", switch_to(hello_rom_1));
    00000230 CDr00r00         [17]  599 	call	_set_ROM_bank1
    00000233 21r00r00         [10]  600 	ld	hl, #_hello_rom_1
    00000236 7E               [ 7]  601 	ld	a, (hl)
    00000237 32r00r00         [13]  602 	ld	(___dummy_variable+0), a
    0000023A 21r00r00         [10]  603 	ld	hl, #_hello_rom_1
    0000023D E5               [11]  604 	push	hl
    0000023E 21rE4r02         [10]  605 	ld	hl, #___str_4
    00000241 E5               [11]  606 	push	hl
    00000242 CDr00r00         [17]  607 	call	_printf
    00000245 F1               [10]  608 	pop	af
    00000246 F1               [10]  609 	pop	af
                                    610 ;src/banks_nonintrinsic.c:84: printf("%s", switch_to(hello_rom_2));
    00000247 CDr17r00         [17]  611 	call	_set_ROM_bank2
    0000024A 21r00r00         [10]  612 	ld	hl, #_hello_rom_2
    0000024D 7E               [ 7]  613 	ld	a, (hl)
    0000024E 32r00r00         [13]  614 	ld	(___dummy_variable+0), a
    00000251 21r00r00         [10]  615 	ld	hl, #_hello_rom_2
    00000254 E5               [11]  616 	push	hl
    00000255 21rE4r02         [10]  617 	ld	hl, #___str_4
    00000258 E5               [11]  618 	push	hl
    00000259 CDr00r00         [17]  619 	call	_printf
    0000025C F1               [10]  620 	pop	af
    0000025D F1               [10]  621 	pop	af
                                    622 ;src/banks_nonintrinsic.c:85: printf("%s", switch_to(hello_sram_0));
    0000025E CDr1Dr00         [17]  623 	call	_set_RAM_bank0
    00000261 21r00r00         [10]  624 	ld	hl, #_hello_sram_0
    00000264 7E               [ 7]  625 	ld	a, (hl)
    00000265 32r00r00         [13]  626 	ld	(___dummy_variable+0), a
    00000268 01rE4r02         [10]  627 	ld	bc, #___str_4
    0000026B 21r00r00         [10]  628 	ld	hl, #_hello_sram_0
    0000026E E5               [11]  629 	push	hl
    0000026F C5               [11]  630 	push	bc
    00000270 CDr00r00         [17]  631 	call	_printf
    00000273 F1               [10]  632 	pop	af
    00000274 F1               [10]  633 	pop	af
                                    634 ;src/banks_nonintrinsic.c:86: printf("%s", switch_to(hello_sram_1));
    00000275 CDr2Br00         [17]  635 	call	_set_RAM_bank1
    00000278 21r00r00         [10]  636 	ld	hl, #_hello_sram_1
    0000027B 7E               [ 7]  637 	ld	a, (hl)
    0000027C 32r00r00         [13]  638 	ld	(___dummy_variable+0), a
    0000027F 01rE4r02         [10]  639 	ld	bc, #___str_4
    00000282 21r00r00         [10]  640 	ld	hl, #_hello_sram_1
    00000285 E5               [11]  641 	push	hl
    00000286 C5               [11]  642 	push	bc
    00000287 CDr00r00         [17]  643 	call	_printf
    0000028A F1               [10]  644 	pop	af
    0000028B F1               [10]  645 	pop	af
                                    646 ;src/banks_nonintrinsic.c:89: printf("1+2+4+8=0x%x", (int)(add_num_wram + add_num_sram_0 + (*add_num__ptr[0]) + (*add_num__ptr[1])));
    0000028C CDr1Dr00         [17]  647 	call	_set_RAM_bank0
    0000028F 21r14r00         [10]  648 	ld	hl, #_add_num_sram_0
    00000292 3Ar15r00         [13]  649 	ld	a, (_add_num_wram+0)
    00000295 86               [ 7]  650 	add	a, (hl)
    00000296 23               [ 6]  651 	inc	hl
    00000297 4F               [ 4]  652 	ld	c, a
    00000298 3Ar16r00         [13]  653 	ld	a, (_add_num_wram+1)
    0000029B 8E               [ 7]  654 	adc	a, (hl)
    0000029C 47               [ 4]  655 	ld	b, a
    0000029D C5               [11]  656 	push	bc
    0000029E CDr00r00         [17]  657 	call	_set_ROM_bank1
    000002A1 C1               [10]  658 	pop	bc
    000002A2 2Ar13r00         [16]  659 	ld	hl, (#_add_num__ptr + 0)
    000002A5 E5               [11]  660 	push	hl
    000002A6 C5               [11]  661 	push	bc
    000002A7 CDr2Br00         [17]  662 	call	_set_RAM_bank1
    000002AA C1               [10]  663 	pop	bc
    000002AB E1               [10]  664 	pop	hl
                                    665 ;	spillPairReg hl
                                    666 ;	spillPairReg hl
                                    667 ;	spillPairReg hl
    000002AC 5E               [ 7]  668 	ld	e, (hl)
    000002AD 23               [ 6]  669 	inc	hl
    000002AE 56               [ 7]  670 	ld	d, (hl)
    000002AF D5               [11]  671 	push	de
    000002B0 C5               [11]  672 	push	bc
    000002B1 CDr00r00         [17]  673 	call	_set_ROM_bank1
    000002B4 C1               [10]  674 	pop	bc
    000002B5 E1               [10]  675 	pop	hl
    000002B6 09               [11]  676 	add	hl, bc
    000002B7 EB               [ 4]  677 	ex	de, hl
    000002B8 2Ar15r00         [16]  678 	ld	hl, (#_add_num__ptr + 2)
    000002BB E5               [11]  679 	push	hl
    000002BC D5               [11]  680 	push	de
    000002BD CDr2Br00         [17]  681 	call	_set_RAM_bank1
    000002C0 D1               [10]  682 	pop	de
    000002C1 E1               [10]  683 	pop	hl
    000002C2 7E               [ 7]  684 	ld	a, (hl)
    000002C3 23               [ 6]  685 	inc	hl
    000002C4 66               [ 7]  686 	ld	h, (hl)
                                    687 ;	spillPairReg hl
    000002C5 6F               [ 4]  688 	ld	l, a
                                    689 ;	spillPairReg hl
                                    690 ;	spillPairReg hl
    000002C6 19               [11]  691 	add	hl, de
    000002C7 01rE7r02         [10]  692 	ld	bc, #___str_5+0
    000002CA E5               [11]  693 	push	hl
    000002CB C5               [11]  694 	push	bc
    000002CC CDr00r00         [17]  695 	call	_printf
    000002CF F1               [10]  696 	pop	af
    000002D0 F1               [10]  697 	pop	af
                                    698 ;src/banks_nonintrinsic.c:92: while(1);
    000002D1                        699 00116$:
    000002D1 18 FE            [12]  700 	jr	00116$
                                    701 ;src/banks_nonintrinsic.c:93: }
    000002D3 33               [ 6]  702 	inc	sp
    000002D4 DD E1            [14]  703 	pop	ix
    000002D6 C9               [10]  704 	ret
    000002D7                        705 ___str_2:
    000002D7 6F 6E 63 65 20 6D 6F   706 	.ascii "once more..."
             72 65 2E 2E 2E
    000002E3 00                     707 	.db 0x00
    000002E4                        708 ___str_4:
    000002E4 25 73                  709 	.ascii "%s"
    000002E6 00                     710 	.db 0x00
    000002E7                        711 ___str_5:
    000002E7 31 2B 32 2B 34 2B 38   712 	.ascii "1+2+4+8=0x%x"
             3D 30 78 25 78
    000002F3 00                     713 	.db 0x00
                                    714 	.area _CODE
                                    715 	.area _INITIALIZER
    00000000                        716 __xinit___current_ram_bank:
    00000000 00                     717 	.db #0x00	; 0
    00000001                        718 __xinit__data:
    00000001 44 41 54 41            719 	.ascii "DATA"
    00000005 00                     720 	.db 0x00
    00000006 00                     721 	.db 0x00
    00000007 00                     722 	.db 0x00
    00000008 00                     723 	.db 0x00
    00000009 00                     724 	.db 0x00
    0000000A 00                     725 	.db 0x00
    0000000B 00                     726 	.db 0x00
    0000000C 00                     727 	.db 0x00
    0000000D 00                     728 	.db 0x00
    0000000E 00                     729 	.db 0x00
    0000000F 00                     730 	.db 0x00
    00000010 00                     731 	.db 0x00
    00000011 00                     732 	.db 0x00
    00000012 00                     733 	.db 0x00
    00000013 00                     734 	.db 0x00
    00000014 00                     735 	.db 0x00
    00000015                        736 __xinit__add_num_wram:
    00000015 01 00                  737 	.dw #0x0001
                                    738 	.area _CABS (ABS)

                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module testrand
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _waitpadup
                                     13 	.globl _waitpad
                                     14 	.globl _arand
                                     15 	.globl _initarand
                                     16 	.globl _rand
                                     17 	.globl _puts
                                     18 	.globl _printf
                                     19 ;--------------------------------------------------------
                                     20 ; special function registers
                                     21 ;--------------------------------------------------------
                         00000000    22 _GG_STATE	=	0x0000
                         00000001    23 _GG_EXT_7BIT	=	0x0001
                         00000002    24 _GG_EXT_CTL	=	0x0002
                         00000003    25 _GG_SIO_SEND	=	0x0003
                         00000004    26 _GG_SIO_RECV	=	0x0004
                         00000005    27 _GG_SIO_CTL	=	0x0005
                         00000006    28 _GG_SOUND_PAN	=	0x0006
                         0000003E    29 _MEMORY_CTL	=	0x003e
                         0000003F    30 _JOY_CTL	=	0x003f
                         0000007E    31 _VCOUNTER	=	0x007e
                         0000007F    32 _PSG	=	0x007f
                         0000007F    33 _HCOUNTER	=	0x007f
                         000000BE    34 _VDP_DATA	=	0x00be
                         000000BF    35 _VDP_CMD	=	0x00bf
                         000000BF    36 _VDP_STATUS	=	0x00bf
                         000000DC    37 _JOY_PORT1	=	0x00dc
                         000000DD    38 _JOY_PORT2	=	0x00dd
                         000000F0    39 _FMADDRESS	=	0x00f0
                         000000F1    40 _FMDATA	=	0x00f1
                         000000F2    41 _AUDIOCTRL	=	0x00f2
                                     42 ;--------------------------------------------------------
                                     43 ; ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area _DATA
                         0000FFFC    46 _RAM_CONTROL	=	0xfffc
                         0000FFF8    47 _GLASSES_3D	=	0xfff8
                         0000FFFD    48 _MAP_FRAME0	=	0xfffd
                         0000FFFE    49 _MAP_FRAME1	=	0xfffe
                         0000FFFF    50 _MAP_FRAME2	=	0xffff
                                     51 ;--------------------------------------------------------
                                     52 ; ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area _INITIALIZED
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area _DABS (ABS)
                                     59 ;--------------------------------------------------------
                                     60 ; global & static initialisations
                                     61 ;--------------------------------------------------------
                                     62 	.area _HOME
                                     63 	.area _GSINIT
                                     64 	.area _GSFINAL
                                     65 	.area _GSINIT
                                     66 ;--------------------------------------------------------
                                     67 ; Home
                                     68 ;--------------------------------------------------------
                                     69 	.area _HOME
                                     70 	.area _HOME
                                     71 ;--------------------------------------------------------
                                     72 ; code
                                     73 ;--------------------------------------------------------
                                     74 	.area _CODE
                                     75 ;src/testrand.c:14: void main(void)
                                     76 ;	---------------------------------
                                     77 ; Function main
                                     78 ; ---------------------------------
    00000000                         79 _main::
    00000000 DD E5            [15]   80 	push	ix
    00000002 DD 21 00 00      [14]   81 	ld	ix,#0
    00000006 DD 39            [15]   82 	add	ix,sp
    00000008 3B               [ 6]   83 	dec	sp
                                     84 ;src/testrand.c:16: puts("press A...");
    00000009 21r57r00         [10]   85 	ld	hl, #___str_0
    0000000C CDr00r00         [17]   86 	call	_puts
                                     87 ;src/testrand.c:17: waitpad(J_A);
    0000000F 2E 20            [ 7]   88 	ld	l, #0x20
                                     89 ;	spillPairReg hl
                                     90 ;	spillPairReg hl
    00000011 CDr00r00         [17]   91 	call	_waitpad
                                     92 ;src/testrand.c:18: initarand(sys_time);
    00000014 2Ar00r00         [16]   93 	ld	hl, (_sys_time)
    00000017 CDr00r00         [17]   94 	call	_initarand
                                     95 ;src/testrand.c:19: while(TRUE) {
    0000001A                         96 00103$:
                                     97 ;src/testrand.c:20: waitpadup();
    0000001A CDr00r00         [17]   98 	call	_waitpadup
                                     99 ;src/testrand.c:21: for (uint8_t i = 0; i != 16; i++) 
    0000001D DD 36 FF 00      [19]  100 	ld	-1 (ix), #0x00
    00000021                        101 00106$:
    00000021 DD 7E FF         [19]  102 	ld	a, -1 (ix)
    00000024 D6 10            [ 7]  103 	sub	a, #0x10
    00000026 28 1E            [12]  104 	jr	Z, 00101$
                                    105 ;src/testrand.c:22: printf("r=%x a=%x\n", (uint16_t)rand(), (uint16_t)arand());
    00000028 CDr00r00         [17]  106 	call	_arand
    0000002B 4D               [ 4]  107 	ld	c, l
    0000002C 06 00            [ 7]  108 	ld	b, #0x00
    0000002E C5               [11]  109 	push	bc
    0000002F CDr00r00         [17]  110 	call	_rand
    00000032 C1               [10]  111 	pop	bc
    00000033 26 00            [ 7]  112 	ld	h, #0x00
                                    113 ;	spillPairReg hl
                                    114 ;	spillPairReg hl
    00000035 11r62r00         [10]  115 	ld	de, #___str_1
    00000038 C5               [11]  116 	push	bc
    00000039 E5               [11]  117 	push	hl
    0000003A D5               [11]  118 	push	de
    0000003B CDr00r00         [17]  119 	call	_printf
    0000003E F1               [10]  120 	pop	af
    0000003F F1               [10]  121 	pop	af
    00000040 F1               [10]  122 	pop	af
                                    123 ;src/testrand.c:21: for (uint8_t i = 0; i != 16; i++) 
    00000041 DD 34 FF         [23]  124 	inc	-1 (ix)
    00000044 18 DB            [12]  125 	jr	00106$
    00000046                        126 00101$:
                                    127 ;src/testrand.c:23: puts("press A...");
    00000046 21r57r00         [10]  128 	ld	hl, #___str_0
    00000049 CDr00r00         [17]  129 	call	_puts
                                    130 ;src/testrand.c:24: waitpad(J_A);
    0000004C 2E 20            [ 7]  131 	ld	l, #0x20
                                    132 ;	spillPairReg hl
                                    133 ;	spillPairReg hl
    0000004E CDr00r00         [17]  134 	call	_waitpad
    00000051 18 C7            [12]  135 	jr	00103$
                                    136 ;src/testrand.c:26: }
    00000053 33               [ 6]  137 	inc	sp
    00000054 DD E1            [14]  138 	pop	ix
    00000056 C9               [10]  139 	ret
    00000057                        140 ___str_0:
    00000057 70 72 65 73 73 20 41   141 	.ascii "press A..."
             2E 2E 2E
    00000061 00                     142 	.db 0x00
    00000062                        143 ___str_1:
    00000062 72 3D 25 78 20 61 3D   144 	.ascii "r=%x a=%x"
             25 78
    0000006B 0A                     145 	.db 0x0a
    0000006C 00                     146 	.db 0x00
                                    147 	.area _CODE
                                    148 	.area _INITIALIZER
                                    149 	.area _CABS (ABS)

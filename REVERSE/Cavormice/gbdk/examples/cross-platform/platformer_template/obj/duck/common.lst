                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module common
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _hide_sprites_range
                                     12 	.globl _fill_bkg_rect
                                     13 	.globl _set_bkg_tiles
                                     14 	.globl _set_bkg_data
                                     15 	.globl _display_off
                                     16 	.globl _vsync
                                     17 	.globl _joypad
                                     18 	.globl _joypadPrevious
                                     19 	.globl _joypadCurrent
                                     20 	.globl _WaitForStartOrA
                                     21 	.globl _setBKGPalettes
                                     22 	.globl _ShowCentered
                                     23 ;--------------------------------------------------------
                                     24 ; special function registers
                                     25 ;--------------------------------------------------------
                                     26 ;--------------------------------------------------------
                                     27 ; ram data
                                     28 ;--------------------------------------------------------
                                     29 	.area _DATA
                                     30 ;--------------------------------------------------------
                                     31 ; ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area _INITIALIZED
    00000000                         34 _joypadCurrent::
    00000000                         35 	.ds 1
    00000001                         36 _joypadPrevious::
    00000001                         37 	.ds 1
                                     38 ;--------------------------------------------------------
                                     39 ; absolute external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area _DABS (ABS)
                                     42 ;--------------------------------------------------------
                                     43 ; global & static initialisations
                                     44 ;--------------------------------------------------------
                                     45 	.area _HOME
                                     46 	.area _GSINIT
                                     47 	.area _GSFINAL
                                     48 	.area _GSINIT
                                     49 ;--------------------------------------------------------
                                     50 ; Home
                                     51 ;--------------------------------------------------------
                                     52 	.area _HOME
                                     53 ;src/common.c:24: void setBKGPalettes(uint8_t count, const palette_color_t *palettes) NONBANKED{
                                     54 ;	---------------------------------
                                     55 ; Function setBKGPalettes
                                     56 ; ---------------------------------
    00000000                         57 _setBKGPalettes::
                                     58 ;src/common.c:37: }
    00000000 C9               [16]   59 	ret
                                     60 ;src/common.c:40: void ShowCentered(uint8_t width,uint8_t height,uint8_t bank, uint8_t* tileData, uint8_t tileCount, uint8_t* mapData, const palette_color_t* palettes) NONBANKED{
                                     61 ;	---------------------------------
                                     62 ; Function ShowCentered
                                     63 ; ---------------------------------
    00000001                         64 _ShowCentered::
    00000001 E8 F9            [16]   65 	add	sp, #-7
    00000003 F8 06            [12]   66 	ldhl	sp,	#6
    00000005 77               [ 8]   67 	ld	(hl), a
                                     68 ;src/common.c:43: DISPLAY_OFF;
    00000006 CDr00r00         [24]   69 	call	_display_off
                                     70 ;src/common.c:45: uint8_t _previous_bank = CURRENT_BANK;
    00000009 F0r00            [12]   71 	ldh	a, (__current_bank + 0)
    0000000B F8 00            [12]   72 	ldhl	sp,	#0
    0000000D 77               [ 8]   73 	ld	(hl), a
                                     74 ;src/common.c:49: hide_sprites_range(0,MAX_HARDWARE_SPRITES);
    0000000E D5               [16]   75 	push	de
    0000000F 1E 28            [ 8]   76 	ld	e, #0x28
    00000011 AF               [ 4]   77 	xor	a, a
    00000012 CDr00r00         [24]   78 	call	_hide_sprites_range
    00000015 D1               [12]   79 	pop	de
                                     80 ;../../../include/gb/gb.h:1449: SCX_REG=x, SCY_REG=y;
    00000016 AF               [ 4]   81 	xor	a, a
    00000017 E0r00            [12]   82 	ldh	(_SCX_REG + 0), a
    00000019 AF               [ 4]   83 	xor	a, a
    0000001A E0r00            [12]   84 	ldh	(_SCY_REG + 0), a
                                     85 ;src/common.c:54: uint8_t titleRow = (DEVICE_SCREEN_HEIGHT-(height>>3))/2;
    0000001C 7B               [ 4]   86 	ld	a, e
    0000001D CB 37            [ 8]   87 	swap	a
    0000001F 07               [ 4]   88 	rlca
    00000020 E6 1F            [ 8]   89 	and	a, #0x1f
    00000022 F8 01            [12]   90 	ldhl	sp,	#1
    00000024 77               [ 8]   91 	ld	(hl), a
    00000025 4E               [ 8]   92 	ld	c, (hl)
    00000026 06 00            [ 8]   93 	ld	b, #0x00
    00000028 3E 12            [ 8]   94 	ld	a, #0x12
    0000002A 91               [ 4]   95 	sub	a, c
    0000002B 4F               [ 4]   96 	ld	c, a
    0000002C 9F               [ 4]   97 	sbc	a, a
    0000002D 90               [ 4]   98 	sub	a, b
    0000002E 47               [ 4]   99 	ld	b, a
    0000002F F8 04            [12]  100 	ldhl	sp,	#4
    00000031 79               [ 4]  101 	ld	a, c
    00000032 22               [ 8]  102 	ld	(hl+), a
    00000033 70               [ 8]  103 	ld	(hl), b
    00000034 CB 78            [ 8]  104 	bit	7, b
    00000036 28 05            [12]  105 	jr	Z, 00108$
    00000038 2B               [ 8]  106 	dec	hl
    00000039 03               [ 8]  107 	inc	bc
    0000003A 79               [ 4]  108 	ld	a, c
    0000003B 22               [ 8]  109 	ld	(hl+), a
    0000003C 70               [ 8]  110 	ld	(hl), b
    0000003D                        111 00108$:
    0000003D F8 04            [12]  112 	ldhl	sp,#4
    0000003F 2A               [ 8]  113 	ld	a, (hl+)
    00000040 4F               [ 4]  114 	ld	c, a
    00000041 46               [ 8]  115 	ld	b, (hl)
    00000042 CB 28            [ 8]  116 	sra	b
    00000044 CB 19            [ 8]  117 	rr	c
    00000046 F8 02            [12]  118 	ldhl	sp,	#2
    00000048 71               [ 8]  119 	ld	(hl), c
                                    120 ;src/common.c:55: uint8_t titleColumn = (DEVICE_SCREEN_WIDTH-(width>>3))/2;
    00000049 F8 06            [12]  121 	ldhl	sp,	#6
    0000004B 7E               [ 8]  122 	ld	a, (hl)
    0000004C CB 37            [ 8]  123 	swap	a
    0000004E 07               [ 4]  124 	rlca
    0000004F E6 1F            [ 8]  125 	and	a, #0x1f
    00000051 F8 03            [12]  126 	ldhl	sp,	#3
    00000053 77               [ 8]  127 	ld	(hl), a
    00000054 2A               [ 8]  128 	ld	a, (hl+)
    00000055 4F               [ 4]  129 	ld	c, a
    00000056 06 00            [ 8]  130 	ld	b, #0x00
    00000058 3E 14            [ 8]  131 	ld	a, #0x14
    0000005A 91               [ 4]  132 	sub	a, c
    0000005B 4F               [ 4]  133 	ld	c, a
    0000005C 9F               [ 4]  134 	sbc	a, a
    0000005D 90               [ 4]  135 	sub	a, b
    0000005E 47               [ 4]  136 	ld	b, a
    0000005F 79               [ 4]  137 	ld	a, c
    00000060 22               [ 8]  138 	ld	(hl+), a
    00000061 70               [ 8]  139 	ld	(hl), b
    00000062 CB 78            [ 8]  140 	bit	7, b
    00000064 28 05            [12]  141 	jr	Z, 00109$
    00000066 2B               [ 8]  142 	dec	hl
    00000067 03               [ 8]  143 	inc	bc
    00000068 79               [ 4]  144 	ld	a, c
    00000069 22               [ 8]  145 	ld	(hl+), a
    0000006A 70               [ 8]  146 	ld	(hl), b
    0000006B                        147 00109$:
    0000006B F8 04            [12]  148 	ldhl	sp,	#4
    0000006D 2A               [ 8]  149 	ld	a, (hl+)
    0000006E 47               [ 4]  150 	ld	b, a
    0000006F 4E               [ 8]  151 	ld	c, (hl)
    00000070 CB 29            [ 8]  152 	sra	c
    00000072 CB 18            [ 8]  153 	rr	b
                                    154 ;src/common.c:57: SWITCH_ROM(bank);
    00000074 F8 09            [12]  155 	ldhl	sp,	#9
    00000076 7E               [ 8]  156 	ld	a, (hl)
    00000077 E0r00            [12]  157 	ldh	(__current_bank + 0), a
    00000079 EAr00r00         [16]  158 	ld	(#_rROMB0),a
                                    159 ;src/common.c:59: setBKGPalettes(1,palettes);
    0000007C C5               [16]  160 	push	bc
    0000007D F8 11            [12]  161 	ldhl	sp,	#17
    0000007F 2A               [ 8]  162 	ld	a, (hl+)
    00000080 5F               [ 4]  163 	ld	e, a
    00000081 56               [ 8]  164 	ld	d, (hl)
    00000082 3E 01            [ 8]  165 	ld	a, #0x01
    00000084 CDr00r00         [24]  166 	call	_setBKGPalettes
    00000087 C1               [12]  167 	pop	bc
                                    168 ;src/common.c:61: set_native_tile_data(0,tileCount,tileData);
    00000088 F8 0A            [12]  169 	ldhl	sp,	#10
    0000008A 2A               [ 8]  170 	ld	a, (hl+)
    0000008B 5F               [ 4]  171 	ld	e, a
    0000008C 2A               [ 8]  172 	ld	a, (hl+)
    0000008D 57               [ 4]  173 	ld	d, a
    0000008E 7E               [ 8]  174 	ld	a, (hl)
                                    175 ;../../../include/gb/gb.h:2134: set_bkg_data(first_tile, nb_tiles, data);
    0000008F D5               [16]  176 	push	de
    00000090 67               [ 4]  177 	ld	h, a
    00000091 2E 00            [ 8]  178 	ld	l, #0x00
    00000093 E5               [16]  179 	push	hl
    00000094 CDr00r00         [24]  180 	call	_set_bkg_data
    00000097 E8 04            [16]  181 	add	sp, #4
                                    182 ;src/common.c:62: fill_bkg_rect(0,0,DEVICE_SCREEN_WIDTH,DEVICE_SCREEN_HEIGHT,0);
    00000099 AF               [ 4]  183 	xor	a, a
    0000009A 67               [ 4]  184 	ld	h, a
    0000009B 2E 12            [ 8]  185 	ld	l, #0x12
    0000009D E5               [16]  186 	push	hl
    0000009E 3E 14            [ 8]  187 	ld	a, #0x14
    000000A0 F5               [16]  188 	push	af
    000000A1 33               [ 8]  189 	inc	sp
    000000A2 AF               [ 4]  190 	xor	a, a
    000000A3 0F               [ 4]  191 	rrca
    000000A4 F5               [16]  192 	push	af
    000000A5 CDr00r00         [24]  193 	call	_fill_bkg_rect
    000000A8 E8 05            [16]  194 	add	sp, #5
                                    195 ;src/common.c:63: set_bkg_tiles(titleColumn,titleRow,width>>3,height>>3,mapData);
    000000AA F8 0D            [12]  196 	ldhl	sp,	#13
    000000AC 2A               [ 8]  197 	ld	a, (hl+)
    000000AD 5F               [ 4]  198 	ld	e, a
    000000AE 56               [ 8]  199 	ld	d, (hl)
    000000AF D5               [16]  200 	push	de
    000000B0 F8 03            [12]  201 	ldhl	sp,	#3
    000000B2 2A               [ 8]  202 	ld	a, (hl+)
    000000B3 23               [ 8]  203 	inc	hl
    000000B4 F5               [16]  204 	push	af
    000000B5 33               [ 8]  205 	inc	sp
    000000B6 3A               [ 8]  206 	ld	a, (hl-)
    000000B7 57               [ 4]  207 	ld	d, a
    000000B8 5E               [ 8]  208 	ld	e, (hl)
    000000B9 D5               [16]  209 	push	de
    000000BA C5               [16]  210 	push	bc
    000000BB 33               [ 8]  211 	inc	sp
    000000BC CDr00r00         [24]  212 	call	_set_bkg_tiles
    000000BF E8 06            [16]  213 	add	sp, #6
                                    214 ;src/common.c:64: SWITCH_ROM(_previous_bank);
    000000C1 F8 00            [12]  215 	ldhl	sp,	#0
    000000C3 7E               [ 8]  216 	ld	a, (hl)
    000000C4 E0r00            [12]  217 	ldh	(__current_bank + 0), a
    000000C6 7E               [ 8]  218 	ld	a, (hl)
    000000C7 EAr00r00         [16]  219 	ld	(#_rROMB0),a
                                    220 ;src/common.c:66: DISPLAY_ON;
    000000CA F0r00            [12]  221 	ldh	a, (_LCDC_REG + 0)
    000000CC F6 80            [ 8]  222 	or	a, #0x80
    000000CE E0r00            [12]  223 	ldh	(_LCDC_REG + 0), a
                                    224 ;src/common.c:67: }
    000000D0 E8 07            [16]  225 	add	sp, #7
    000000D2 E1               [12]  226 	pop	hl
    000000D3 E8 08            [16]  227 	add	sp, #8
    000000D5 E9               [ 4]  228 	jp	(hl)
                                    229 	.area _HOME
                                    230 ;--------------------------------------------------------
                                    231 ; code
                                    232 ;--------------------------------------------------------
                                    233 	.area _CODE
                                    234 ;src/common.c:9: void WaitForStartOrA(void){
                                    235 ;	---------------------------------
                                    236 ; Function WaitForStartOrA
                                    237 ; ---------------------------------
    00000000                        238 _WaitForStartOrA::
                                    239 ;src/common.c:10: while(1){
    00000000                        240 00108$:
                                    241 ;src/common.c:13: joypadPrevious = joypadCurrent;
    00000000 FAr00r00         [16]  242 	ld	a, (#_joypadCurrent)
    00000003 EAr01r00         [16]  243 	ld	(#_joypadPrevious),a
                                    244 ;src/common.c:14: joypadCurrent = joypad();
    00000006 CDr00r00         [24]  245 	call	_joypad
                                    246 ;src/common.c:16: if((joypadCurrent & J_START) && !(joypadPrevious & J_START))break;
    00000009 EAr00r00         [16]  247 	ld	(#_joypadCurrent),a
    0000000C 21r01r00         [12]  248 	ld	hl, #_joypadPrevious
    0000000F 4E               [ 8]  249 	ld	c, (hl)
    00000010 CB 7F            [ 8]  250 	bit	7, a
    00000012 28 03            [12]  251 	jr	Z, 00102$
    00000014 CB 79            [ 8]  252 	bit	7, c
    00000016 C8               [20]  253 	ret	Z
    00000017                        254 00102$:
                                    255 ;src/common.c:17: if((joypadCurrent & J_A) && !(joypadPrevious & J_A))break;
    00000017 CB 67            [ 8]  256 	bit	4, a
    00000019 28 03            [12]  257 	jr	Z, 00105$
    0000001B CB 61            [ 8]  258 	bit	4, c
    0000001D C8               [20]  259 	ret	Z
    0000001E                        260 00105$:
                                    261 ;src/common.c:19: vsync();
    0000001E CDr00r00         [24]  262 	call	_vsync
                                    263 ;src/common.c:22: }
    00000021 18 DD            [12]  264 	jr	00108$
                                    265 	.area _CODE
                                    266 	.area _INITIALIZER
    00000000                        267 __xinit__joypadCurrent:
    00000000 00                     268 	.db #0x00	; 0
    00000001                        269 __xinit__joypadPrevious:
    00000001 00                     270 	.db #0x00	; 0
                                    271 	.area _CABS (ABS)

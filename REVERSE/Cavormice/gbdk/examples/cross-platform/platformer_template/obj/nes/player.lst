                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module player
                                      6 	.optsdcc -mmos6502
                                      7 	
                                      8 ;; Ordering of segments for the linker.
                                      9 	.area _ZP      (PAG)
                                     10 	.area _OSEG    (PAG, OVR)
                                     11 	.area _HOME
                                     12 	.area _GSINIT
                                     13 	.area _GSFINAL
                                     14 	.area _CODE
                                     15 	.area _XINIT
                                     16 	.area _DATA
                                     17 	.area _DATA
                                     18 	.area _BSS
                                     19 ;--------------------------------------------------------
                                     20 ; Public variables in this module
                                     21 ;--------------------------------------------------------
                                     22 	.globl _PlayerPalettesGGSMS
                                     23 	.globl _baseProp
                                     24 	.globl b_UpdatePlayer
                                     25 	.globl _UpdatePlayer
                                     26 	.globl _DrawPlayer
                                     27 	.globl b_SetupPlayer
                                     28 	.globl _SetupPlayer
                                     29 	.globl _SetPlayerPalettes
                                     30 	.globl _UpdatePlayerVRAMTiles
                                     31 	.globl _IsTileSolid
                                     32 	.globl __switch_prg0
                                     33 	.globl _set_sprite_data
                                     34 	.globl _set_sprite_palette
                                     35 	.globl _threeFrameCounter
                                     36 	.globl _playerJumpIncrease
                                     37 	.globl _facingRight
                                     38 	.globl _DrawPlayer_PARM_3
                                     39 	.globl _DrawPlayer_PARM_2
                                     40 	.globl _playerYVelocity
                                     41 	.globl _playerXVelocity
                                     42 	.globl _playerY
                                     43 	.globl _playerX
                                     44 	.globl _OAMDMA
                                     45 	.globl _PPUDATA
                                     46 	.globl _PPUADDR
                                     47 	.globl _PPUSCROLL
                                     48 	.globl _OAMDATA
                                     49 	.globl _OAMADDR
                                     50 	.globl _PPUSTATUS
                                     51 	.globl _PPUMASK
                                     52 	.globl _PPUCTRL
                                     53 ;--------------------------------------------------------
                                     54 ; ZP ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area _ZP      (PAG)
    00000000                         57 _UpdatePlayer_sloc0_1_0:
    00000000                         58 	.ds 1
    00000001                         59 _UpdatePlayer_sloc1_1_0:
    00000001                         60 	.ds 2
    00000003                         61 _UpdatePlayer_sloc2_1_0:
    00000003                         62 	.ds 2
    00000005                         63 _UpdatePlayer_sloc3_1_0:
    00000005                         64 	.ds 2
    00000007                         65 _UpdatePlayer_sloc4_1_0:
    00000007                         66 	.ds 2
    00000009                         67 _UpdatePlayer_sloc5_1_0:
    00000009                         68 	.ds 2
    0000000B                         69 _UpdatePlayer_sloc6_1_0:
    0000000B                         70 	.ds 2
                                     71 ;--------------------------------------------------------
                                     72 ; overlayable items in ram
                                     73 ;--------------------------------------------------------
                                     74 ;--------------------------------------------------------
                                     75 ; uninitialized external ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area _BSS
                         00002000    78 _PPUCTRL	=	0x2000
                         00002001    79 _PPUMASK	=	0x2001
                         00002002    80 _PPUSTATUS	=	0x2002
                         00002003    81 _OAMADDR	=	0x2003
                         00002004    82 _OAMDATA	=	0x2004
                         00002005    83 _PPUSCROLL	=	0x2005
                         00002006    84 _PPUADDR	=	0x2006
                         00002007    85 _PPUDATA	=	0x2007
                         00004014    86 _OAMDMA	=	0x4014
    00000000                         87 _playerX::
    00000000                         88 	.ds 2
    00000002                         89 _playerY::
    00000002                         90 	.ds 2
    00000004                         91 _playerXVelocity::
    00000004                         92 	.ds 2
    00000006                         93 _playerYVelocity::
    00000006                         94 	.ds 2
    00000008                         95 _DrawPlayer_PARM_2:
    00000008                         96 	.ds 2
    0000000A                         97 _DrawPlayer_PARM_3:
    0000000A                         98 	.ds 1
    0000000B                         99 _DrawPlayer__previous_bank_10000_129:
    0000000B                        100 	.ds 1
    0000000C                        101 _DrawPlayer_playerCameraX_10000_129:
    0000000C                        102 	.ds 2
    0000000E                        103 _DrawPlayer_playerCameraY_10000_129:
    0000000E                        104 	.ds 2
    00000010                        105 _UpdatePlayer_moveSpeed_10000_134:
    00000010                        106 	.ds 2
    00000012                        107 _UpdatePlayer_threeFrameCounterValue_10001_135:
    00000012                        108 	.ds 1
    00000013                        109 _UpdatePlayer_turning_10002_137:
    00000013                        110 	.ds 1
    00000014                        111 _UpdatePlayer_playerRealX_10003_151:
    00000014                        112 	.ds 2
    00000016                        113 _UpdatePlayer_playerRealY_10003_151:
    00000016                        114 	.ds 2
    00000018                        115 _UpdatePlayer_grounded_10003_151:
    00000018                        116 	.ds 1
    00000019                        117 _UpdatePlayer_max_20004_166:
    00000019                        118 	.ds 2
    0000001B                        119 _UpdatePlayer_spritesUsed_10005_167:
    0000001B                        120 	.ds 1
                                    121 ;--------------------------------------------------------
                                    122 ; absolute external ram data
                                    123 ;--------------------------------------------------------
                                    124 	.area _DABS    (ABS)
                                    125 ;--------------------------------------------------------
                                    126 ; initialized external ram data
                                    127 ;--------------------------------------------------------
                                    128 	.area _DATA
    00000000                        129 _facingRight::
    00000000                        130 	.ds 1
    00000001                        131 _playerJumpIncrease::
    00000001                        132 	.ds 1
    00000002                        133 _threeFrameCounter::
    00000002                        134 	.ds 1
                                    135 ;--------------------------------------------------------
                                    136 ; global & static initialisations
                                    137 ;--------------------------------------------------------
                                    138 	.area _HOME
                                    139 	.area _GSINIT
                                    140 	.area _GSFINAL
                                    141 	.area _GSINIT
                                    142 ;--------------------------------------------------------
                                    143 ; Home
                                    144 ;--------------------------------------------------------
                                    145 	.area _HOME
                                    146 ;	src/player.c: 67: void UpdatePlayerVRAMTiles(void) NONBANKED{
                                    147 ;	-----------------------------------------
                                    148 ;	 function UpdatePlayerVRAMTiles
                                    149 ;	-----------------------------------------
                                    150 ;	Register assignment is optimal.
                                    151 ;	Stack space usage: 0 bytes.
    00000000                        152 _UpdatePlayerVRAMTiles:
                                    153 ;	src/player.c: 68: uint8_t _previous_bank = CURRENT_BANK;
    00000000 ADr00r00         [ 4]  154 	lda	__current_bank
                                    155 ;	src/player.c: 71: SWITCH_ROM(BANK(PlayerCharacterSprites));
    00000003 A2r00            [ 2]  156 	ldx	#___bank_PlayerCharacterSprites
    00000005 48               [ 3]  157 	pha
    00000006 8A               [ 2]  158 	txa
    00000007 20r00r00         [ 6]  159 	jsr	__switch_prg0
    0000000A 68               [ 4]  160 	pla
                                    161 ;	src/player.c: 73: set_player_sprite_data (0,PlayerCharacterSprites_TILE_COUNT,PlayerCharacterSprites_tiles);
    0000000B A2s00            [ 2]  162 	ldx	#>_PlayerCharacterSprites_tiles
    0000000D 8Er01r00         [ 4]  163 	stx	(_set_sprite_data_PARM_3 + 1)
    00000010 A2r00            [ 2]  164 	ldx	#_PlayerCharacterSprites_tiles
    00000012 8Er00r00         [ 4]  165 	stx	_set_sprite_data_PARM_3
    00000015 48               [ 3]  166 	pha
    00000016 A9 00            [ 2]  167 	lda	#0x00
    00000018 A2 3E            [ 2]  168 	ldx	#0x3e
    0000001A 20r00r00         [ 6]  169 	jsr	_set_sprite_data
    0000001D 68               [ 4]  170 	pla
                                    171 ;	src/player.c: 75: SWITCH_ROM(_previous_bank);
                                    172 ;	src/player.c: 76: }
    0000001E 4Cr00r00         [ 3]  173 	jmp	__switch_prg0
                                    174 ;	src/player.c: 78: void SetPlayerPalettes(void) NONBANKED{
                                    175 ;	-----------------------------------------
                                    176 ;	 function SetPlayerPalettes
                                    177 ;	-----------------------------------------
                                    178 ;	Register assignment is optimal.
                                    179 ;	Stack space usage: 0 bytes.
    00000021                        180 _SetPlayerPalettes:
                                    181 ;	src/player.c: 79: uint8_t _previous_bank = CURRENT_BANK;
    00000021 ADr00r00         [ 4]  182 	lda	__current_bank
                                    183 ;	src/player.c: 81: SWITCH_ROM(PLAYER_PALETTES_BANK);
    00000024 A2r00            [ 2]  184 	ldx	#___bank_PlayerCharacterSprites
    00000026 48               [ 3]  185 	pha
    00000027 8A               [ 2]  186 	txa
    00000028 20r00r00         [ 6]  187 	jsr	__switch_prg0
    0000002B 68               [ 4]  188 	pla
                                    189 ;	src/player.c: 91: set_sprite_palette(baseProp, 4, PLAYER_PALETTES);
    0000002C A2s00            [ 2]  190 	ldx	#>_PlayerCharacterSprites_palettes
    0000002E 8Er01r00         [ 4]  191 	stx	(_set_sprite_palette_PARM_3 + 1)
    00000031 A2r00            [ 2]  192 	ldx	#_PlayerCharacterSprites_palettes
    00000033 8Er00r00         [ 4]  193 	stx	_set_sprite_palette_PARM_3
    00000036 48               [ 3]  194 	pha
    00000037 ADr7Fr06         [ 4]  195 	lda	_baseProp
    0000003A A2 04            [ 2]  196 	ldx	#0x04
    0000003C 20r00r00         [ 6]  197 	jsr	_set_sprite_palette
    0000003F 68               [ 4]  198 	pla
                                    199 ;	src/player.c: 95: SWITCH_ROM(_previous_bank);
                                    200 ;	src/player.c: 96: }
    00000040 4Cr00r00         [ 3]  201 	jmp	__switch_prg0
                                    202 ;	src/player.c: 116: uint8_t DrawPlayer(uint16_t playerRealX, uint16_t playerRealY, uint8_t frame) NONBANKED{
                                    203 ;	-----------------------------------------
                                    204 ;	 function DrawPlayer
                                    205 ;	-----------------------------------------
                                    206 ;	Register assignment is optimal.
                                    207 ;	Stack space usage: 0 bytes.
    00000043                        208 _DrawPlayer:
                                    209 ;	src/player.c: 119: uint8_t _previous_bank = CURRENT_BANK;
    00000043 ACr00r00         [ 4]  210 	ldy	__current_bank
    00000046 8Cr0Br00         [ 4]  211 	sty	_DrawPlayer__previous_bank_10000_129
                                    212 ;	src/player.c: 123: uint16_t playerCameraX = (playerRealX-camera_x)+DEVICE_SPRITE_PX_OFFSET_X;
    00000049 38               [ 2]  213 	sec
    0000004A EDr00r00         [ 4]  214 	sbc	_camera_x
    0000004D 8Dr0Cr00         [ 4]  215 	sta	_DrawPlayer_playerCameraX_10000_129
    00000050 8A               [ 2]  216 	txa
    00000051 EDr01r00         [ 4]  217 	sbc	(_camera_x + 1)
    00000054 8Dr0Dr00         [ 4]  218 	sta	(_DrawPlayer_playerCameraX_10000_129 + 1)
                                    219 ;	src/player.c: 124: uint16_t playerCameraY= (playerRealY)+DEVICE_SPRITE_PX_OFFSET_Y;
    00000057 AEr09r00         [ 4]  220 	ldx	(_DrawPlayer_PARM_2 + 1)
    0000005A ADr08r00         [ 4]  221 	lda	_DrawPlayer_PARM_2
    0000005D 18               [ 2]  222 	clc
    0000005E 69 FF            [ 2]  223 	adc	#0xff
    00000060 48               [ 3]  224 	pha
    00000061 8A               [ 2]  225 	txa
    00000062 69 FF            [ 2]  226 	adc	#0xff
    00000064 AA               [ 2]  227 	tax
    00000065 68               [ 4]  228 	pla
    00000066 8Dr0Er00         [ 4]  229 	sta	_DrawPlayer_playerCameraY_10000_129
    00000069 8Er0Fr00         [ 4]  230 	stx	(_DrawPlayer_playerCameraY_10000_129 + 1)
                                    231 ;	src/player.c: 126: SWITCH_ROM(BANK(PlayerCharacterSprites));
    0000006C A9r00            [ 2]  232 	lda	#___bank_PlayerCharacterSprites
    0000006E 20r00r00         [ 6]  233 	jsr	__switch_prg0
                                    234 ;	src/player.c: 128: spritesUsed = move_metasprite_ex(PlayerCharacterSprites_metasprites[frame],0,baseProp,0,playerCameraX,playerCameraY);
    00000071 A2 00            [ 2]  235 	ldx	#0x00
    00000073 ADr0Ar00         [ 4]  236 	lda	_DrawPlayer_PARM_3
    00000076 86*00            [ 3]  237 	stx	*(REGTEMP+0)
    00000078 0A               [ 2]  238 	asl	a
    00000079 26*00            [ 5]  239 	rol	*(REGTEMP+0)
    0000007B A6*00            [ 3]  240 	ldx	*(REGTEMP+0)
    0000007D 18               [ 2]  241 	clc
    0000007E 69r00            [ 2]  242 	adc	#<(_PlayerCharacterSprites_metasprites+0)
    00000080 85*00            [ 3]  243 	sta	*(DPTR+0)
    00000082 8A               [ 2]  244 	txa
    00000083 69s00            [ 2]  245 	adc	#>(_PlayerCharacterSprites_metasprites+0)
    00000085 85*01            [ 3]  246 	sta	*(DPTR+1)
    00000087 A0 01            [ 2]  247 	ldy	#0x01
    00000089 B1*00            [ 6]  248 	lda	[DPTR],y
    0000008B AA               [ 2]  249 	tax
    0000008C 88               [ 2]  250 	dey
    0000008D B1*00            [ 6]  251 	lda	[DPTR],y
                                    252 ;	../../../include/nes/metasprites.h: 91: __current_metasprite = metasprite;
    0000008F 8Dr00r00         [ 4]  253 	sta	___current_metasprite
    00000092 8Er01r00         [ 4]  254 	stx	(___current_metasprite + 1)
                                    255 ;	../../../include/nes/metasprites.h: 92: __current_base_tile = base_tile;
    00000095 8Cr00r00         [ 4]  256 	sty	___current_base_tile
                                    257 ;	../../../include/nes/metasprites.h: 93: __current_base_prop = base_prop;
    00000098 8Cr00r00         [ 4]  258 	sty	___current_base_prop
                                    259 ;	../../../include/nes/metasprites.h: 94: return __move_metasprite(base_sprite, x, y);
    0000009B ADr0Dr00         [ 4]  260 	lda	(_DrawPlayer_playerCameraX_10000_129 + 1)
    0000009E 8Dr01r00         [ 4]  261 	sta	(___move_metasprite_PARM_2 + 1)
    000000A1 ADr0Cr00         [ 4]  262 	lda	_DrawPlayer_playerCameraX_10000_129
    000000A4 8Dr00r00         [ 4]  263 	sta	___move_metasprite_PARM_2
    000000A7 ADr0Fr00         [ 4]  264 	lda	(_DrawPlayer_playerCameraY_10000_129 + 1)
    000000AA 8Dr01r00         [ 4]  265 	sta	(___move_metasprite_PARM_3 + 1)
    000000AD ADr0Er00         [ 4]  266 	lda	_DrawPlayer_playerCameraY_10000_129
    000000B0 8Dr00r00         [ 4]  267 	sta	___move_metasprite_PARM_3
    000000B3 98               [ 2]  268 	tya
    000000B4 20r00r00         [ 6]  269 	jsr	___move_metasprite
                                    270 ;	src/player.c: 130: SWITCH_ROM(_previous_bank);
    000000B7 48               [ 3]  271 	pha
    000000B8 ADr0Br00         [ 4]  272 	lda	_DrawPlayer__previous_bank_10000_129
    000000BB 20r00r00         [ 6]  273 	jsr	__switch_prg0
    000000BE 68               [ 4]  274 	pla
                                    275 ;	src/player.c: 132: return spritesUsed;
                                    276 ;	src/player.c: 133: }
    000000BF 60               [ 6]  277 	rts
                                    278 	.area _HOME
                                    279 ;--------------------------------------------------------
                                    280 ; code
                                    281 ;--------------------------------------------------------
                                    282 	.area _CODE_255
                                    283 ;------------------------------------------------------------
                                    284 ;Allocation info for local variables in function 'UpdatePlayerVRAMTiles'
                                    285 ;------------------------------------------------------------
                                    286 ;_previous_bank            Allocated to registers a 
                                    287 ;------------------------------------------------------------
                                    288 ;------------------------------------------------------------
                                    289 ;Allocation info for local variables in function 'SetPlayerPalettes'
                                    290 ;------------------------------------------------------------
                                    291 ;_previous_bank            Allocated to registers a 
                                    292 ;------------------------------------------------------------
                                    293 ;------------------------------------------------------------
                                    294 ;Allocation info for local variables in function 'SetupPlayer'
                                    295 ;------------------------------------------------------------
                                    296 ;	src/player.c: 98: void SetupPlayer(void) BANKED{
                                    297 ;	-----------------------------------------
                                    298 ;	 function SetupPlayer
                                    299 ;	-----------------------------------------
                                    300 ;	Register assignment is optimal.
                                    301 ;	Stack space usage: 0 bytes.
                         000000FF   302 	b_SetupPlayer	= 255
    00000000                        303 _SetupPlayer:
                                    304 ;	src/player.c: 102: playerX=40<<4;
    00000000 A2 80            [ 2]  305 	ldx	#0x80
    00000002 8Er00r00         [ 4]  306 	stx	_playerX
    00000005 A2 02            [ 2]  307 	ldx	#0x02
    00000007 8Er01r00         [ 4]  308 	stx	(_playerX + 1)
                                    309 ;	src/player.c: 103: playerY=40<<4;
    0000000A A2 80            [ 2]  310 	ldx	#0x80
    0000000C 8Er02r00         [ 4]  311 	stx	_playerY
    0000000F A2 02            [ 2]  312 	ldx	#0x02
    00000011 8Er03r00         [ 4]  313 	stx	(_playerY + 1)
                                    314 ;	src/player.c: 105: playerXVelocity=0;
    00000014 A2 00            [ 2]  315 	ldx	#0x00
    00000016 8Er04r00         [ 4]  316 	stx	_playerXVelocity
    00000019 8Er05r00         [ 4]  317 	stx	(_playerXVelocity + 1)
                                    318 ;	src/player.c: 106: playerYVelocity=0;
    0000001C 8Er06r00         [ 4]  319 	stx	_playerYVelocity
    0000001F 8Er07r00         [ 4]  320 	stx	(_playerYVelocity + 1)
                                    321 ;	src/player.c: 108: UpdatePlayerVRAMTiles();
    00000022 20r00r00         [ 6]  322 	jsr	_UpdatePlayerVRAMTiles
                                    323 ;	src/player.c: 111: SetPlayerPalettes();
                                    324 ;	src/player.c: 114: }
    00000025 4Cr21r00         [ 3]  325 	jmp	_SetPlayerPalettes
                                    326 ;------------------------------------------------------------
                                    327 ;Allocation info for local variables in function 'DrawPlayer'
                                    328 ;------------------------------------------------------------
                                    329 ;playerRealY               Allocated with name '_DrawPlayer_PARM_2'
                                    330 ;frame                     Allocated with name '_DrawPlayer_PARM_3'
                                    331 ;playerRealX               Allocated to registers a x 
                                    332 ;__200000006               Allocated to registers a 
                                    333 ;spritesUsed               Allocated to registers 
                                    334 ;_previous_bank            Allocated with name '_DrawPlayer__previous_bank_10000_129'
                                    335 ;playerCameraX             Allocated with name '_DrawPlayer_playerCameraX_10000_129'
                                    336 ;playerCameraY             Allocated with name '_DrawPlayer_playerCameraY_10000_129'
                                    337 ;__200000007               Allocated to registers 
                                    338 ;__200000008               Allocated to registers 
                                    339 ;__200000009               Allocated to registers 
                                    340 ;__200000010               Allocated to registers 
                                    341 ;__200000011               Allocated to registers 
                                    342 ;__200000012               Allocated to registers 
                                    343 ;metasprite                Allocated to registers a x 
                                    344 ;base_tile                 Allocated to registers 
                                    345 ;base_prop                 Allocated to registers 
                                    346 ;base_sprite               Allocated to registers 
                                    347 ;x                         Allocated to registers 
                                    348 ;y                         Allocated to registers 
                                    349 ;------------------------------------------------------------
                                    350 ;------------------------------------------------------------
                                    351 ;Allocation info for local variables in function 'UpdatePlayer'
                                    352 ;------------------------------------------------------------
                                    353 ;sloc0                     Allocated with name '_UpdatePlayer_sloc0_1_0'
                                    354 ;sloc1                     Allocated with name '_UpdatePlayer_sloc1_1_0'
                                    355 ;sloc2                     Allocated with name '_UpdatePlayer_sloc2_1_0'
                                    356 ;sloc3                     Allocated with name '_UpdatePlayer_sloc3_1_0'
                                    357 ;sloc4                     Allocated with name '_UpdatePlayer_sloc4_1_0'
                                    358 ;sloc5                     Allocated with name '_UpdatePlayer_sloc5_1_0'
                                    359 ;sloc6                     Allocated with name '_UpdatePlayer_sloc6_1_0'
                                    360 ;moveSpeed                 Allocated with name '_UpdatePlayer_moveSpeed_10000_134'
                                    361 ;threeFrameCounterSpeed    Allocated to registers a 
                                    362 ;threeFrameCounterValue    Allocated with name '_UpdatePlayer_threeFrameCounterValue_10001_135'
                                    363 ;turning                   Allocated with name '_UpdatePlayer_turning_10002_137'
                                    364 ;playerRealX               Allocated with name '_UpdatePlayer_playerRealX_10003_151'
                                    365 ;playerRealY               Allocated with name '_UpdatePlayer_playerRealY_10003_151'
                                    366 ;grounded                  Allocated with name '_UpdatePlayer_grounded_10003_151'
                                    367 ;pressedA                  Allocated to registers x 
                                    368 ;pressedUp                 Allocated to registers a 
                                    369 ;pressedAOrUp              Allocated to registers a 
                                    370 ;max                       Allocated with name '_UpdatePlayer_max_20004_166'
                                    371 ;frame                     Allocated to registers a 
                                    372 ;directionOffset           Allocated to registers x 
                                    373 ;spritesUsed               Allocated with name '_UpdatePlayer_spritesUsed_10005_167'
                                    374 ;------------------------------------------------------------
                                    375 ;	src/player.c: 135: uint8_t UpdatePlayer(void) BANKED{
                                    376 ;	-----------------------------------------
                                    377 ;	 function UpdatePlayer
                                    378 ;	-----------------------------------------
                                    379 ;	Register assignment might be sub-optimal.
                                    380 ;	Stack space usage: 0 bytes.
                         000000FF   381 	b_UpdatePlayer	= 255
    00000028                        382 _UpdatePlayer:
                                    383 ;	src/player.c: 139: int16_t moveSpeed = (joypadCurrent & J_B) ?PLAYER_CHARACTER_RUN_VELOCITY:PLAYER_CHARACTER_WALK_VELOCITY;
    00000028 ADr00r00         [ 4]  384 	lda	_joypadCurrent
    0000002B 85*00            [ 3]  385 	sta	*_UpdatePlayer_sloc0_1_0
    0000002D 24*00            [ 3]  386 	bit	*_UpdatePlayer_sloc0_1_0
    0000002F 50 07            [ 4]  387 	bvc	00191$
    00000031 A2 01            [ 2]  388 	ldx	#0x01
    00000033 A9 A9            [ 2]  389 	lda	#0xa9
    00000035 4Cr3Cr00         [ 3]  390 	jmp	00192$
    00000038                        391 00191$:
    00000038 A2 01            [ 2]  392 	ldx	#0x01
    0000003A A9 45            [ 2]  393 	lda	#0x45
    0000003C                        394 00192$:
    0000003C 8Dr10r00         [ 4]  395 	sta	_UpdatePlayer_moveSpeed_10000_134
    0000003F 8Er11r00         [ 4]  396 	stx	(_UpdatePlayer_moveSpeed_10000_134 + 1)
                                    397 ;	src/player.c: 140: uint8_t threeFrameCounterSpeed = (joypadCurrent & J_B) ? PLAYER_CHARACTER_RUN_TWO_FRAME_COUNTER : PLAYER_CHARACTER_WALK_TWO_FRAME_COUNTER;
    00000042 24*00            [ 3]  398 	bit	*_UpdatePlayer_sloc0_1_0
    00000044 50 05            [ 4]  399 	bvc	00193$
    00000046 A9 05            [ 2]  400 	lda	#0x05
    00000048 4Cr4Dr00         [ 3]  401 	jmp	00194$
    0000004B                        402 00193$:
    0000004B A9 03            [ 2]  403 	lda	#0x03
    0000004D                        404 00194$:
                                    405 ;	src/player.c: 142: threeFrameCounter+=threeFrameCounterSpeed;
    0000004D 18               [ 2]  406 	clc
    0000004E 6Dr02r00         [ 4]  407 	adc	_threeFrameCounter
                                    408 ;	src/player.c: 143: uint8_t threeFrameCounterValue = threeFrameCounter>>4;
    00000051 8Dr02r00         [ 4]  409 	sta	_threeFrameCounter
    00000054 4A               [ 2]  410 	lsr	a
    00000055 4A               [ 2]  411 	lsr	a
    00000056 4A               [ 2]  412 	lsr	a
    00000057 4A               [ 2]  413 	lsr	a
                                    414 ;	src/player.c: 144: if(threeFrameCounterValue>=3){
    00000058 8Dr12r00         [ 4]  415 	sta	_UpdatePlayer_threeFrameCounterValue_10001_135
    0000005B C9 03            [ 2]  416 	cmp	#0x03
    0000005D 90 08            [ 4]  417 	bcc	00102$
                                    418 ;	src/player.c: 145: threeFrameCounter=0;
    0000005F A2 00            [ 2]  419 	ldx	#0x00
    00000061 8Er02r00         [ 4]  420 	stx	_threeFrameCounter
                                    421 ;	src/player.c: 146: threeFrameCounterValue=0;
    00000064 8Er12r00         [ 4]  422 	stx	_UpdatePlayer_threeFrameCounterValue_10001_135
    00000067                        423 00102$:
                                    424 ;	src/player.c: 149: uint8_t turning = FALSE;
    00000067 A2 00            [ 2]  425 	ldx	#0x00
    00000069 8Er13r00         [ 4]  426 	stx	_UpdatePlayer_turning_10002_137
                                    427 ;	src/player.c: 151: if(joypadCurrent &J_RIGHT){
    0000006C A9 01            [ 2]  428 	lda	#0x01
    0000006E 25*00            [ 3]  429 	and	*_UpdatePlayer_sloc0_1_0
    00000070 F0 52            [ 4]  430 	beq	00134$
                                    431 ;	src/player.c: 154: if(playerXVelocity<0){
    00000072 ADr05r00         [ 4]  432 	lda	(_playerXVelocity + 1)
    00000075 85*02            [ 3]  433 	sta	*(_UpdatePlayer_sloc1_1_0 + 1)
    00000077 ADr04r00         [ 4]  434 	lda	_playerXVelocity
    0000007A 85*01            [ 3]  435 	sta	*_UpdatePlayer_sloc1_1_0
    0000007C 24*02            [ 3]  436 	bit	*(_UpdatePlayer_sloc1_1_0 + 1)
    0000007E 10 28            [ 4]  437 	bpl	00109$
                                    438 ;	src/player.c: 157: playerXVelocity+=GROUND_FRICTION;
    00000080 A6*02            [ 3]  439 	ldx	*(_UpdatePlayer_sloc1_1_0 + 1)
    00000082 A5*01            [ 3]  440 	lda	*_UpdatePlayer_sloc1_1_0
    00000084 18               [ 2]  441 	clc
    00000085 69 0F            [ 2]  442 	adc	#0x0f
    00000087 90 01            [ 4]  443 	bcc	00537$
    00000089 E8               [ 2]  444 	inx
    0000008A                        445 00537$:
                                    446 ;	src/player.c: 160: if(playerXVelocity<0)turning=TRUE;
    0000008A 8Dr04r00         [ 4]  447 	sta	_playerXVelocity
    0000008D 8Er05r00         [ 4]  448 	stx	(_playerXVelocity + 1)
    00000090 85*01            [ 3]  449 	sta	*_UpdatePlayer_sloc1_1_0
    00000092 86*02            [ 3]  450 	stx	*(_UpdatePlayer_sloc1_1_0 + 1)
    00000094 24*02            [ 3]  451 	bit	*(_UpdatePlayer_sloc1_1_0 + 1)
    00000096 10 08            [ 4]  452 	bpl	00104$
    00000098 A2 01            [ 2]  453 	ldx	#0x01
    0000009A 8Er13r00         [ 4]  454 	stx	_UpdatePlayer_turning_10002_137
    0000009D 4Cr96r01         [ 3]  455 	jmp	00135$
    000000A0                        456 00104$:
                                    457 ;	src/player.c: 163: facingRight=TRUE;
    000000A0 A2 01            [ 2]  458 	ldx	#0x01
    000000A2 8Er00r00         [ 4]  459 	stx	_facingRight
    000000A5 4Cr96r01         [ 3]  460 	jmp	00135$
    000000A8                        461 00109$:
                                    462 ;	src/player.c: 166: playerXVelocity=moveSpeed;
    000000A8 ADr11r00         [ 4]  463 	lda	(_UpdatePlayer_moveSpeed_10000_134 + 1)
    000000AB 8Dr05r00         [ 4]  464 	sta	(_playerXVelocity + 1)
    000000AE ADr10r00         [ 4]  465 	lda	_UpdatePlayer_moveSpeed_10000_134
    000000B1 8Dr04r00         [ 4]  466 	sta	_playerXVelocity
                                    467 ;	src/player.c: 169: if(!facingRight){
    000000B4 ADr00r00         [ 4]  468 	lda	_facingRight
    000000B7 F0 03            [ 4]  469 	beq	00540$
    000000B9 4Cr96r01         [ 3]  470 	jmp	00135$
    000000BC                        471 00540$:
                                    472 ;	src/player.c: 170: facingRight=TRUE;
    000000BC A2 01            [ 2]  473 	ldx	#0x01
    000000BE 8Er00r00         [ 4]  474 	stx	_facingRight
    000000C1 4Cr96r01         [ 3]  475 	jmp	00135$
    000000C4                        476 00134$:
                                    477 ;	src/player.c: 174: }else if(joypadCurrent &J_LEFT){
    000000C4 A9 02            [ 2]  478 	lda	#0x02
    000000C6 25*00            [ 3]  479 	and	*_UpdatePlayer_sloc0_1_0
    000000C8 F0 6E            [ 4]  480 	beq	00131$
                                    481 ;	src/player.c: 177: if(playerXVelocity>0){
    000000CA ADr05r00         [ 4]  482 	lda	(_playerXVelocity + 1)
    000000CD 85*02            [ 3]  483 	sta	*(_UpdatePlayer_sloc1_1_0 + 1)
    000000CF ADr04r00         [ 4]  484 	lda	_playerXVelocity
    000000D2 85*01            [ 3]  485 	sta	*_UpdatePlayer_sloc1_1_0
    000000D4 A9 00            [ 2]  486 	lda	#0x00
    000000D6 38               [ 2]  487 	sec
    000000D7 E5*01            [ 3]  488 	sbc	*_UpdatePlayer_sloc1_1_0
    000000D9 A9 00            [ 2]  489 	lda	#0x00
    000000DB E5*02            [ 3]  490 	sbc	*(_UpdatePlayer_sloc1_1_0 + 1)
    000000DD 50 04            [ 4]  491 	bvc	00544$
    000000DF 10 04            [ 4]  492 	bpl	00543$
    000000E1 30 37            [ 4]  493 	bmi	00117$
    000000E3                        494 00544$:
    000000E3 10 35            [ 4]  495 	bpl	00117$
    000000E5                        496 00543$:
                                    497 ;	src/player.c: 180: playerXVelocity-=GROUND_FRICTION;
    000000E5 A6*02            [ 3]  498 	ldx	*(_UpdatePlayer_sloc1_1_0 + 1)
    000000E7 A5*01            [ 3]  499 	lda	*_UpdatePlayer_sloc1_1_0
    000000E9 38               [ 2]  500 	sec
    000000EA E9 0F            [ 2]  501 	sbc	#0x0f
    000000EC B0 01            [ 4]  502 	bcs	00546$
    000000EE CA               [ 2]  503 	dex
    000000EF                        504 00546$:
                                    505 ;	src/player.c: 183: if(playerXVelocity>0)turning=TRUE;
    000000EF 8Dr04r00         [ 4]  506 	sta	_playerXVelocity
    000000F2 8Er05r00         [ 4]  507 	stx	(_playerXVelocity + 1)
    000000F5 85*00            [ 3]  508 	sta	*(REGTEMP+0)
    000000F7 A9 00            [ 2]  509 	lda	#0x00
    000000F9 38               [ 2]  510 	sec
    000000FA E5*00            [ 3]  511 	sbc	*(REGTEMP+0)
    000000FC A9 00            [ 2]  512 	lda	#0x00
    000000FE 86*00            [ 3]  513 	stx	*(REGTEMP+0)
    00000100 E5*00            [ 3]  514 	sbc	*(REGTEMP+0)
    00000102 50 04            [ 4]  515 	bvc	00548$
    00000104 10 04            [ 4]  516 	bpl	00547$
    00000106 30 0A            [ 4]  517 	bmi	00112$
    00000108                        518 00548$:
    00000108 10 08            [ 4]  519 	bpl	00112$
    0000010A                        520 00547$:
    0000010A A2 01            [ 2]  521 	ldx	#0x01
    0000010C 8Er13r00         [ 4]  522 	stx	_UpdatePlayer_turning_10002_137
    0000010F 4Cr96r01         [ 3]  523 	jmp	00135$
    00000112                        524 00112$:
                                    525 ;	src/player.c: 186: facingRight=FALSE;
    00000112 A2 00            [ 2]  526 	ldx	#0x00
    00000114 8Er00r00         [ 4]  527 	stx	_facingRight
    00000117 4Cr96r01         [ 3]  528 	jmp	00135$
    0000011A                        529 00117$:
                                    530 ;	src/player.c: 190: playerXVelocity=-moveSpeed;
    0000011A A9 00            [ 2]  531 	lda	#0x00
    0000011C 38               [ 2]  532 	sec
    0000011D EDr10r00         [ 4]  533 	sbc	_UpdatePlayer_moveSpeed_10000_134
    00000120 8Dr04r00         [ 4]  534 	sta	_playerXVelocity
    00000123 A9 00            [ 2]  535 	lda	#0x00
    00000125 EDr11r00         [ 4]  536 	sbc	(_UpdatePlayer_moveSpeed_10000_134 + 1)
    00000128 8Dr05r00         [ 4]  537 	sta	(_playerXVelocity + 1)
                                    538 ;	src/player.c: 193: if(facingRight){
    0000012B ADr00r00         [ 4]  539 	lda	_facingRight
    0000012E F0 66            [ 4]  540 	beq	00135$
                                    541 ;	src/player.c: 194: facingRight=FALSE;
    00000130 A2 00            [ 2]  542 	ldx	#0x00
    00000132 8Er00r00         [ 4]  543 	stx	_facingRight
    00000135 4Cr96r01         [ 3]  544 	jmp	00135$
    00000138                        545 00131$:
                                    546 ;	src/player.c: 203: if (playerXVelocity > 0) {
    00000138 ADr05r00         [ 4]  547 	lda	(_playerXVelocity + 1)
    0000013B 85*02            [ 3]  548 	sta	*(_UpdatePlayer_sloc1_1_0 + 1)
    0000013D ADr04r00         [ 4]  549 	lda	_playerXVelocity
    00000140 85*01            [ 3]  550 	sta	*_UpdatePlayer_sloc1_1_0
    00000142 A9 00            [ 2]  551 	lda	#0x00
    00000144 38               [ 2]  552 	sec
    00000145 E5*01            [ 3]  553 	sbc	*_UpdatePlayer_sloc1_1_0
    00000147 A9 00            [ 2]  554 	lda	#0x00
    00000149 E5*02            [ 3]  555 	sbc	*(_UpdatePlayer_sloc1_1_0 + 1)
    0000014B 50 04            [ 4]  556 	bvc	00553$
    0000014D 10 04            [ 4]  557 	bpl	00552$
    0000014F 30 31            [ 4]  558 	bmi	00128$
    00000151                        559 00553$:
    00000151 10 2F            [ 4]  560 	bpl	00128$
    00000153                        561 00552$:
                                    562 ;	src/player.c: 204: if (playerXVelocity >= GROUND_FRICTION) playerXVelocity -= GROUND_FRICTION;
    00000153 A5*01            [ 3]  563 	lda	*_UpdatePlayer_sloc1_1_0
    00000155 38               [ 2]  564 	sec
    00000156 E9 0F            [ 2]  565 	sbc	#0x0f
    00000158 A5*02            [ 3]  566 	lda	*(_UpdatePlayer_sloc1_1_0 + 1)
    0000015A E9 00            [ 2]  567 	sbc	#0x00
    0000015C 70 04            [ 4]  568 	bvs	00556$
    0000015E 10 04            [ 4]  569 	bpl	00555$
    00000160 30 15            [ 4]  570 	bmi	00120$
    00000162                        571 00556$:
    00000162 10 13            [ 4]  572 	bpl	00120$
    00000164                        573 00555$:
    00000164 A6*02            [ 3]  574 	ldx	*(_UpdatePlayer_sloc1_1_0 + 1)
    00000166 A5*01            [ 3]  575 	lda	*_UpdatePlayer_sloc1_1_0
    00000168 38               [ 2]  576 	sec
    00000169 E9 0F            [ 2]  577 	sbc	#0x0f
    0000016B B0 01            [ 4]  578 	bcs	00558$
    0000016D CA               [ 2]  579 	dex
    0000016E                        580 00558$:
    0000016E 8Dr04r00         [ 4]  581 	sta	_playerXVelocity
    00000171 8Er05r00         [ 4]  582 	stx	(_playerXVelocity + 1)
    00000174 4Cr96r01         [ 3]  583 	jmp	00135$
    00000177                        584 00120$:
                                    585 ;	src/player.c: 205: else playerXVelocity=0;
    00000177 A2 00            [ 2]  586 	ldx	#0x00
    00000179 8Er04r00         [ 4]  587 	stx	_playerXVelocity
    0000017C 8Er05r00         [ 4]  588 	stx	(_playerXVelocity + 1)
    0000017F 4Cr96r01         [ 3]  589 	jmp	00135$
    00000182                        590 00128$:
                                    591 ;	src/player.c: 207: else if (playerXVelocity < 0) {
    00000182 24*02            [ 3]  592 	bit	*(_UpdatePlayer_sloc1_1_0 + 1)
    00000184 10 10            [ 4]  593 	bpl	00135$
                                    594 ;	src/player.c: 208: if (playerXVelocity <= GROUND_FRICTION) playerXVelocity += GROUND_FRICTION;
    00000186 A6*02            [ 3]  595 	ldx	*(_UpdatePlayer_sloc1_1_0 + 1)
    00000188 A5*01            [ 3]  596 	lda	*_UpdatePlayer_sloc1_1_0
    0000018A 18               [ 2]  597 	clc
    0000018B 69 0F            [ 2]  598 	adc	#0x0f
    0000018D 90 01            [ 4]  599 	bcc	00560$
    0000018F E8               [ 2]  600 	inx
    00000190                        601 00560$:
    00000190 8Dr04r00         [ 4]  602 	sta	_playerXVelocity
    00000193 8Er05r00         [ 4]  603 	stx	(_playerXVelocity + 1)
                                    604 ;	src/player.c: 209: else playerXVelocity=0;
    00000196                        605 00135$:
                                    606 ;	src/player.c: 213: uint16_t playerRealX = playerX>>4;
    00000196 AEr01r00         [ 4]  607 	ldx	(_playerX + 1)
    00000199 ADr00r00         [ 4]  608 	lda	_playerX
    0000019C 86*00            [ 3]  609 	stx	*(REGTEMP+0)
    0000019E 46*00            [ 5]  610 	lsr	*(REGTEMP+0)
    000001A0 6A               [ 2]  611 	ror	a
    000001A1 46*00            [ 5]  612 	lsr	*(REGTEMP+0)
    000001A3 6A               [ 2]  613 	ror	a
    000001A4 46*00            [ 5]  614 	lsr	*(REGTEMP+0)
    000001A6 6A               [ 2]  615 	ror	a
    000001A7 46*00            [ 5]  616 	lsr	*(REGTEMP+0)
    000001A9 6A               [ 2]  617 	ror	a
    000001AA A6*00            [ 3]  618 	ldx	*(REGTEMP+0)
    000001AC 85*01            [ 3]  619 	sta	*_UpdatePlayer_sloc1_1_0
    000001AE 86*02            [ 3]  620 	stx	*(_UpdatePlayer_sloc1_1_0 + 1)
                                    621 ;	src/player.c: 214: uint16_t playerRealY = playerY>>4;
    000001B0 AEr03r00         [ 4]  622 	ldx	(_playerY + 1)
    000001B3 ADr02r00         [ 4]  623 	lda	_playerY
    000001B6 86*00            [ 3]  624 	stx	*(REGTEMP+0)
    000001B8 46*00            [ 5]  625 	lsr	*(REGTEMP+0)
    000001BA 6A               [ 2]  626 	ror	a
    000001BB 46*00            [ 5]  627 	lsr	*(REGTEMP+0)
    000001BD 6A               [ 2]  628 	ror	a
    000001BE 46*00            [ 5]  629 	lsr	*(REGTEMP+0)
    000001C0 6A               [ 2]  630 	ror	a
    000001C1 46*00            [ 5]  631 	lsr	*(REGTEMP+0)
    000001C3 6A               [ 2]  632 	ror	a
    000001C4 A6*00            [ 3]  633 	ldx	*(REGTEMP+0)
    000001C6 85*03            [ 3]  634 	sta	*_UpdatePlayer_sloc2_1_0
    000001C8 86*04            [ 3]  635 	stx	*(_UpdatePlayer_sloc2_1_0 + 1)
                                    636 ;	src/player.c: 216: uint8_t grounded = FALSE;
    000001CA A2 00            [ 2]  637 	ldx	#0x00
    000001CC 8Er18r00         [ 4]  638 	stx	_UpdatePlayer_grounded_10003_151
                                    639 ;	src/player.c: 223: if(playerRealY<DEVICE_SCREEN_PX_HEIGHT){
    000001CF A5*03            [ 3]  640 	lda	*_UpdatePlayer_sloc2_1_0
    000001D1 38               [ 2]  641 	sec
    000001D2 E9 F0            [ 2]  642 	sbc	#0xf0
    000001D4 A5*04            [ 3]  643 	lda	*(_UpdatePlayer_sloc2_1_0 + 1)
    000001D6 E9 00            [ 2]  644 	sbc	#0x00
    000001D8 B0 44            [ 4]  645 	bcs	00140$
                                    646 ;	src/player.c: 226: while(IsTileSolid(playerRealX,playerRealY+PLAYER_CHARACTER_BOUNDING_BOX_HEIGHT-1)){
    000001DA                        647 00136$:
    000001DA A6*04            [ 3]  648 	ldx	*(_UpdatePlayer_sloc2_1_0 + 1)
    000001DC A5*03            [ 3]  649 	lda	*_UpdatePlayer_sloc2_1_0
    000001DE 18               [ 2]  650 	clc
    000001DF 69 17            [ 2]  651 	adc	#0x17
    000001E1 90 01            [ 4]  652 	bcc	00562$
    000001E3 E8               [ 2]  653 	inx
    000001E4                        654 00562$:
    000001E4 8Dr00r00         [ 4]  655 	sta	_IsTileSolid_PARM_2
    000001E7 8Er01r00         [ 4]  656 	stx	(_IsTileSolid_PARM_2 + 1)
    000001EA A6*02            [ 3]  657 	ldx	*(_UpdatePlayer_sloc1_1_0 + 1)
    000001EC A5*01            [ 3]  658 	lda	*_UpdatePlayer_sloc1_1_0
    000001EE 20r00r00         [ 6]  659 	jsr	_IsTileSolid
    000001F1 C9 00            [ 2]  660 	cmp	#0x00
    000001F3 F0 29            [ 4]  661 	beq	00140$
                                    662 ;	src/player.c: 227: playerY-=16;
    000001F5 AEr03r00         [ 4]  663 	ldx	(_playerY + 1)
    000001F8 ADr02r00         [ 4]  664 	lda	_playerY
    000001FB 38               [ 2]  665 	sec
    000001FC E9 10            [ 2]  666 	sbc	#0x10
    000001FE B0 01            [ 4]  667 	bcs	00565$
    00000200 CA               [ 2]  668 	dex
    00000201                        669 00565$:
                                    670 ;	src/player.c: 228: playerRealY = playerY>>4;
    00000201 8Dr02r00         [ 4]  671 	sta	_playerY
    00000204 8Er03r00         [ 4]  672 	stx	(_playerY + 1)
    00000207 86*00            [ 3]  673 	stx	*(REGTEMP+0)
    00000209 46*00            [ 5]  674 	lsr	*(REGTEMP+0)
    0000020B 6A               [ 2]  675 	ror	a
    0000020C 46*00            [ 5]  676 	lsr	*(REGTEMP+0)
    0000020E 6A               [ 2]  677 	ror	a
    0000020F 46*00            [ 5]  678 	lsr	*(REGTEMP+0)
    00000211 6A               [ 2]  679 	ror	a
    00000212 46*00            [ 5]  680 	lsr	*(REGTEMP+0)
    00000214 6A               [ 2]  681 	ror	a
    00000215 A6*00            [ 3]  682 	ldx	*(REGTEMP+0)
    00000217 85*03            [ 3]  683 	sta	*_UpdatePlayer_sloc2_1_0
    00000219 86*04            [ 3]  684 	stx	*(_UpdatePlayer_sloc2_1_0 + 1)
    0000021B 4CrDAr01         [ 3]  685 	jmp	00136$
    0000021E                        686 00140$:
                                    687 ;	src/player.c: 242: if(playerXVelocity!=0){
    0000021E ADr05r00         [ 4]  688 	lda	(_playerXVelocity + 1)
    00000221 0Dr04r00         [ 4]  689 	ora	_playerXVelocity
    00000224 D0 03            [ 4]  690 	bne	00567$
    00000226 4Cr7Ar03         [ 3]  691 	jmp	00155$
    00000229                        692 00567$:
                                    693 ;	src/player.c: 245: if(playerXVelocity>0){
    00000229 ADr05r00         [ 4]  694 	lda	(_playerXVelocity + 1)
    0000022C 85*06            [ 3]  695 	sta	*(_UpdatePlayer_sloc3_1_0 + 1)
    0000022E ADr04r00         [ 4]  696 	lda	_playerXVelocity
    00000231 85*05            [ 3]  697 	sta	*_UpdatePlayer_sloc3_1_0
    00000233 A9 00            [ 2]  698 	lda	#0x00
    00000235 38               [ 2]  699 	sec
    00000236 E5*05            [ 3]  700 	sbc	*_UpdatePlayer_sloc3_1_0
    00000238 A9 00            [ 2]  701 	lda	#0x00
    0000023A E5*06            [ 3]  702 	sbc	*(_UpdatePlayer_sloc3_1_0 + 1)
    0000023C 50 04            [ 4]  703 	bvc	00569$
    0000023E 10 07            [ 4]  704 	bpl	00568$
    00000240 30 02            [ 4]  705 	bmi	00570$
    00000242                        706 00569$:
    00000242 30 03            [ 4]  707 	bmi	00568$
    00000244                        708 00570$:
    00000244 4CrE0r02         [ 3]  709 	jmp	00152$
    00000247                        710 00568$:
                                    711 ;	src/player.c: 249: if(IsTileSolid(playerRealX+PLAYER_CHARACTER_BOUNDING_BOX_HALF_WIDTH,playerRealY+2)||IsTileSolid(playerRealX+PLAYER_CHARACTER_BOUNDING_BOX_HALF_WIDTH,playerRealY+PLAYER_CHARACTER_BOUNDING_BOX_HALF_HEIGHT)||IsTileSolid(playerRealX+PLAYER_CHARACTER_BOUNDING_BOX_HALF_WIDTH,playerRealY+(PLAYER_CHARACTER_BOUNDING_BOX_HEIGHT-2)))playerXVelocity=0;
    00000247 A5*02            [ 3]  712 	lda	*(_UpdatePlayer_sloc1_1_0 + 1)
    00000249 85*08            [ 3]  713 	sta	*(_UpdatePlayer_sloc4_1_0 + 1)
    0000024B A5*01            [ 3]  714 	lda	*_UpdatePlayer_sloc1_1_0
    0000024D 85*07            [ 3]  715 	sta	*_UpdatePlayer_sloc4_1_0
    0000024F A6*08            [ 3]  716 	ldx	*(_UpdatePlayer_sloc4_1_0 + 1)
    00000251 A5*07            [ 3]  717 	lda	*_UpdatePlayer_sloc4_1_0
    00000253 18               [ 2]  718 	clc
    00000254 69 05            [ 2]  719 	adc	#0x05
    00000256 90 01            [ 4]  720 	bcc	00571$
    00000258 E8               [ 2]  721 	inx
    00000259                        722 00571$:
    00000259 85*09            [ 3]  723 	sta	*_UpdatePlayer_sloc5_1_0
    0000025B 86*0A            [ 3]  724 	stx	*(_UpdatePlayer_sloc5_1_0 + 1)
    0000025D A5*04            [ 3]  725 	lda	*(_UpdatePlayer_sloc2_1_0 + 1)
    0000025F 85*0C            [ 3]  726 	sta	*(_UpdatePlayer_sloc6_1_0 + 1)
    00000261 A5*03            [ 3]  727 	lda	*_UpdatePlayer_sloc2_1_0
    00000263 85*0B            [ 3]  728 	sta	*_UpdatePlayer_sloc6_1_0
    00000265 A6*0C            [ 3]  729 	ldx	*(_UpdatePlayer_sloc6_1_0 + 1)
    00000267 A5*0B            [ 3]  730 	lda	*_UpdatePlayer_sloc6_1_0
    00000269 18               [ 2]  731 	clc
    0000026A 69 02            [ 2]  732 	adc	#0x02
    0000026C 90 01            [ 4]  733 	bcc	00572$
    0000026E E8               [ 2]  734 	inx
    0000026F                        735 00572$:
    0000026F 8Dr00r00         [ 4]  736 	sta	_IsTileSolid_PARM_2
    00000272 8Er01r00         [ 4]  737 	stx	(_IsTileSolid_PARM_2 + 1)
    00000275 A6*0A            [ 3]  738 	ldx	*(_UpdatePlayer_sloc5_1_0 + 1)
    00000277 A5*09            [ 3]  739 	lda	*_UpdatePlayer_sloc5_1_0
    00000279 20r00r00         [ 6]  740 	jsr	_IsTileSolid
    0000027C C9 00            [ 2]  741 	cmp	#0x00
    0000027E D0 55            [ 4]  742 	bne	00141$
    00000280 A6*08            [ 3]  743 	ldx	*(_UpdatePlayer_sloc4_1_0 + 1)
    00000282 A5*07            [ 3]  744 	lda	*_UpdatePlayer_sloc4_1_0
    00000284 18               [ 2]  745 	clc
    00000285 69 05            [ 2]  746 	adc	#0x05
    00000287 90 01            [ 4]  747 	bcc	00575$
    00000289 E8               [ 2]  748 	inx
    0000028A                        749 00575$:
    0000028A 85*09            [ 3]  750 	sta	*_UpdatePlayer_sloc5_1_0
    0000028C 86*0A            [ 3]  751 	stx	*(_UpdatePlayer_sloc5_1_0 + 1)
    0000028E A6*0C            [ 3]  752 	ldx	*(_UpdatePlayer_sloc6_1_0 + 1)
    00000290 A5*0B            [ 3]  753 	lda	*_UpdatePlayer_sloc6_1_0
    00000292 18               [ 2]  754 	clc
    00000293 69 0C            [ 2]  755 	adc	#0x0c
    00000295 90 01            [ 4]  756 	bcc	00576$
    00000297 E8               [ 2]  757 	inx
    00000298                        758 00576$:
    00000298 8Dr00r00         [ 4]  759 	sta	_IsTileSolid_PARM_2
    0000029B 8Er01r00         [ 4]  760 	stx	(_IsTileSolid_PARM_2 + 1)
    0000029E A6*0A            [ 3]  761 	ldx	*(_UpdatePlayer_sloc5_1_0 + 1)
    000002A0 A5*09            [ 3]  762 	lda	*_UpdatePlayer_sloc5_1_0
    000002A2 20r00r00         [ 6]  763 	jsr	_IsTileSolid
    000002A5 C9 00            [ 2]  764 	cmp	#0x00
    000002A7 D0 2C            [ 4]  765 	bne	00141$
    000002A9 A6*08            [ 3]  766 	ldx	*(_UpdatePlayer_sloc4_1_0 + 1)
    000002AB A5*07            [ 3]  767 	lda	*_UpdatePlayer_sloc4_1_0
    000002AD 18               [ 2]  768 	clc
    000002AE 69 05            [ 2]  769 	adc	#0x05
    000002B0 90 01            [ 4]  770 	bcc	00579$
    000002B2 E8               [ 2]  771 	inx
    000002B3                        772 00579$:
    000002B3 85*09            [ 3]  773 	sta	*_UpdatePlayer_sloc5_1_0
    000002B5 86*0A            [ 3]  774 	stx	*(_UpdatePlayer_sloc5_1_0 + 1)
    000002B7 A6*0C            [ 3]  775 	ldx	*(_UpdatePlayer_sloc6_1_0 + 1)
    000002B9 A5*0B            [ 3]  776 	lda	*_UpdatePlayer_sloc6_1_0
    000002BB 18               [ 2]  777 	clc
    000002BC 69 16            [ 2]  778 	adc	#0x16
    000002BE 90 01            [ 4]  779 	bcc	00580$
    000002C0 E8               [ 2]  780 	inx
    000002C1                        781 00580$:
    000002C1 8Dr00r00         [ 4]  782 	sta	_IsTileSolid_PARM_2
    000002C4 8Er01r00         [ 4]  783 	stx	(_IsTileSolid_PARM_2 + 1)
    000002C7 A6*0A            [ 3]  784 	ldx	*(_UpdatePlayer_sloc5_1_0 + 1)
    000002C9 A5*09            [ 3]  785 	lda	*_UpdatePlayer_sloc5_1_0
    000002CB 20r00r00         [ 6]  786 	jsr	_IsTileSolid
    000002CE C9 00            [ 2]  787 	cmp	#0x00
    000002D0 D0 03            [ 4]  788 	bne	00582$
    000002D2 4Cr7Ar03         [ 3]  789 	jmp	00155$
    000002D5                        790 00582$:
    000002D5                        791 00141$:
    000002D5 A2 00            [ 2]  792 	ldx	#0x00
    000002D7 8Er04r00         [ 4]  793 	stx	_playerXVelocity
    000002DA 8Er05r00         [ 4]  794 	stx	(_playerXVelocity + 1)
    000002DD 4Cr7Ar03         [ 3]  795 	jmp	00155$
    000002E0                        796 00152$:
                                    797 ;	src/player.c: 252: }else if(playerXVelocity<0){
    000002E0 24*06            [ 3]  798 	bit	*(_UpdatePlayer_sloc3_1_0 + 1)
    000002E2 30 03            [ 4]  799 	bmi	00583$
    000002E4 4Cr7Ar03         [ 3]  800 	jmp	00155$
    000002E7                        801 00583$:
                                    802 ;	src/player.c: 256: if(IsTileSolid(playerRealX-PLAYER_CHARACTER_BOUNDING_BOX_HALF_WIDTH,playerRealY+2)||IsTileSolid(playerRealX-PLAYER_CHARACTER_BOUNDING_BOX_HALF_WIDTH,playerRealY+PLAYER_CHARACTER_BOUNDING_BOX_HALF_HEIGHT)||IsTileSolid(playerRealX-PLAYER_CHARACTER_BOUNDING_BOX_HALF_WIDTH,playerRealY+(PLAYER_CHARACTER_BOUNDING_BOX_HEIGHT-2)))playerXVelocity=0;
    000002E7 A5*02            [ 3]  803 	lda	*(_UpdatePlayer_sloc1_1_0 + 1)
    000002E9 85*0C            [ 3]  804 	sta	*(_UpdatePlayer_sloc6_1_0 + 1)
    000002EB A5*01            [ 3]  805 	lda	*_UpdatePlayer_sloc1_1_0
    000002ED 85*0B            [ 3]  806 	sta	*_UpdatePlayer_sloc6_1_0
    000002EF A6*0C            [ 3]  807 	ldx	*(_UpdatePlayer_sloc6_1_0 + 1)
    000002F1 A5*0B            [ 3]  808 	lda	*_UpdatePlayer_sloc6_1_0
    000002F3 38               [ 2]  809 	sec
    000002F4 E9 05            [ 2]  810 	sbc	#0x05
    000002F6 B0 01            [ 4]  811 	bcs	00584$
    000002F8 CA               [ 2]  812 	dex
    000002F9                        813 00584$:
    000002F9 85*09            [ 3]  814 	sta	*_UpdatePlayer_sloc5_1_0
    000002FB 86*0A            [ 3]  815 	stx	*(_UpdatePlayer_sloc5_1_0 + 1)
    000002FD A5*04            [ 3]  816 	lda	*(_UpdatePlayer_sloc2_1_0 + 1)
    000002FF 85*08            [ 3]  817 	sta	*(_UpdatePlayer_sloc4_1_0 + 1)
    00000301 A5*03            [ 3]  818 	lda	*_UpdatePlayer_sloc2_1_0
    00000303 85*07            [ 3]  819 	sta	*_UpdatePlayer_sloc4_1_0
    00000305 A6*08            [ 3]  820 	ldx	*(_UpdatePlayer_sloc4_1_0 + 1)
    00000307 A5*07            [ 3]  821 	lda	*_UpdatePlayer_sloc4_1_0
    00000309 18               [ 2]  822 	clc
    0000030A 69 02            [ 2]  823 	adc	#0x02
    0000030C 90 01            [ 4]  824 	bcc	00585$
    0000030E E8               [ 2]  825 	inx
    0000030F                        826 00585$:
    0000030F 8Dr00r00         [ 4]  827 	sta	_IsTileSolid_PARM_2
    00000312 8Er01r00         [ 4]  828 	stx	(_IsTileSolid_PARM_2 + 1)
    00000315 A6*0A            [ 3]  829 	ldx	*(_UpdatePlayer_sloc5_1_0 + 1)
    00000317 A5*09            [ 3]  830 	lda	*_UpdatePlayer_sloc5_1_0
    00000319 20r00r00         [ 6]  831 	jsr	_IsTileSolid
    0000031C C9 00            [ 2]  832 	cmp	#0x00
    0000031E D0 52            [ 4]  833 	bne	00145$
    00000320 A6*0C            [ 3]  834 	ldx	*(_UpdatePlayer_sloc6_1_0 + 1)
    00000322 A5*0B            [ 3]  835 	lda	*_UpdatePlayer_sloc6_1_0
    00000324 38               [ 2]  836 	sec
    00000325 E9 05            [ 2]  837 	sbc	#0x05
    00000327 B0 01            [ 4]  838 	bcs	00588$
    00000329 CA               [ 2]  839 	dex
    0000032A                        840 00588$:
    0000032A 85*09            [ 3]  841 	sta	*_UpdatePlayer_sloc5_1_0
    0000032C 86*0A            [ 3]  842 	stx	*(_UpdatePlayer_sloc5_1_0 + 1)
    0000032E A6*08            [ 3]  843 	ldx	*(_UpdatePlayer_sloc4_1_0 + 1)
    00000330 A5*07            [ 3]  844 	lda	*_UpdatePlayer_sloc4_1_0
    00000332 18               [ 2]  845 	clc
    00000333 69 0C            [ 2]  846 	adc	#0x0c
    00000335 90 01            [ 4]  847 	bcc	00589$
    00000337 E8               [ 2]  848 	inx
    00000338                        849 00589$:
    00000338 8Dr00r00         [ 4]  850 	sta	_IsTileSolid_PARM_2
    0000033B 8Er01r00         [ 4]  851 	stx	(_IsTileSolid_PARM_2 + 1)
    0000033E A6*0A            [ 3]  852 	ldx	*(_UpdatePlayer_sloc5_1_0 + 1)
    00000340 A5*09            [ 3]  853 	lda	*_UpdatePlayer_sloc5_1_0
    00000342 20r00r00         [ 6]  854 	jsr	_IsTileSolid
    00000345 C9 00            [ 2]  855 	cmp	#0x00
    00000347 D0 29            [ 4]  856 	bne	00145$
    00000349 A6*0C            [ 3]  857 	ldx	*(_UpdatePlayer_sloc6_1_0 + 1)
    0000034B A5*0B            [ 3]  858 	lda	*_UpdatePlayer_sloc6_1_0
    0000034D 38               [ 2]  859 	sec
    0000034E E9 05            [ 2]  860 	sbc	#0x05
    00000350 B0 01            [ 4]  861 	bcs	00592$
    00000352 CA               [ 2]  862 	dex
    00000353                        863 00592$:
    00000353 85*0B            [ 3]  864 	sta	*_UpdatePlayer_sloc6_1_0
    00000355 86*0C            [ 3]  865 	stx	*(_UpdatePlayer_sloc6_1_0 + 1)
    00000357 A6*08            [ 3]  866 	ldx	*(_UpdatePlayer_sloc4_1_0 + 1)
    00000359 A5*07            [ 3]  867 	lda	*_UpdatePlayer_sloc4_1_0
    0000035B 18               [ 2]  868 	clc
    0000035C 69 16            [ 2]  869 	adc	#0x16
    0000035E 90 01            [ 4]  870 	bcc	00593$
    00000360 E8               [ 2]  871 	inx
    00000361                        872 00593$:
    00000361 8Dr00r00         [ 4]  873 	sta	_IsTileSolid_PARM_2
    00000364 8Er01r00         [ 4]  874 	stx	(_IsTileSolid_PARM_2 + 1)
    00000367 A6*0C            [ 3]  875 	ldx	*(_UpdatePlayer_sloc6_1_0 + 1)
    00000369 A5*0B            [ 3]  876 	lda	*_UpdatePlayer_sloc6_1_0
    0000036B 20r00r00         [ 6]  877 	jsr	_IsTileSolid
    0000036E C9 00            [ 2]  878 	cmp	#0x00
    00000370 F0 08            [ 4]  879 	beq	00155$
    00000372                        880 00145$:
    00000372 A2 00            [ 2]  881 	ldx	#0x00
    00000374 8Er04r00         [ 4]  882 	stx	_playerXVelocity
    00000377 8Er05r00         [ 4]  883 	stx	(_playerXVelocity + 1)
    0000037A                        884 00155$:
                                    885 ;	src/player.c: 261: if(playerYVelocity>=0){
    0000037A ADr07r00         [ 4]  886 	lda	(_playerYVelocity + 1)
    0000037D 85*0C            [ 3]  887 	sta	*(_UpdatePlayer_sloc6_1_0 + 1)
    0000037F ADr06r00         [ 4]  888 	lda	_playerYVelocity
    00000382 85*0B            [ 3]  889 	sta	*_UpdatePlayer_sloc6_1_0
    00000384 24*0C            [ 3]  890 	bit	*(_UpdatePlayer_sloc6_1_0 + 1)
    00000386 30 74            [ 4]  891 	bmi	00160$
                                    892 ;	src/player.c: 265: if(IsTileSolid(playerRealX+(PLAYER_CHARACTER_BOUNDING_BOX_HALF_WIDTH-2),playerRealY+PLAYER_CHARACTER_BOUNDING_BOX_HEIGHT)||IsTileSolid(playerRealX-(PLAYER_CHARACTER_BOUNDING_BOX_HALF_WIDTH-2),playerRealY+PLAYER_CHARACTER_BOUNDING_BOX_HEIGHT)){
    00000388 A5*02            [ 3]  893 	lda	*(_UpdatePlayer_sloc1_1_0 + 1)
    0000038A 85*0C            [ 3]  894 	sta	*(_UpdatePlayer_sloc6_1_0 + 1)
    0000038C A5*01            [ 3]  895 	lda	*_UpdatePlayer_sloc1_1_0
    0000038E 85*0B            [ 3]  896 	sta	*_UpdatePlayer_sloc6_1_0
    00000390 A6*0C            [ 3]  897 	ldx	*(_UpdatePlayer_sloc6_1_0 + 1)
    00000392 A5*0B            [ 3]  898 	lda	*_UpdatePlayer_sloc6_1_0
    00000394 18               [ 2]  899 	clc
    00000395 69 03            [ 2]  900 	adc	#0x03
    00000397 90 01            [ 4]  901 	bcc	00597$
    00000399 E8               [ 2]  902 	inx
    0000039A                        903 00597$:
    0000039A 85*09            [ 3]  904 	sta	*_UpdatePlayer_sloc5_1_0
    0000039C 86*0A            [ 3]  905 	stx	*(_UpdatePlayer_sloc5_1_0 + 1)
    0000039E A5*04            [ 3]  906 	lda	*(_UpdatePlayer_sloc2_1_0 + 1)
    000003A0 85*08            [ 3]  907 	sta	*(_UpdatePlayer_sloc4_1_0 + 1)
    000003A2 A5*03            [ 3]  908 	lda	*_UpdatePlayer_sloc2_1_0
    000003A4 85*07            [ 3]  909 	sta	*_UpdatePlayer_sloc4_1_0
    000003A6 A6*08            [ 3]  910 	ldx	*(_UpdatePlayer_sloc4_1_0 + 1)
    000003A8 A5*07            [ 3]  911 	lda	*_UpdatePlayer_sloc4_1_0
    000003AA 18               [ 2]  912 	clc
    000003AB 69 18            [ 2]  913 	adc	#0x18
    000003AD 90 01            [ 4]  914 	bcc	00598$
    000003AF E8               [ 2]  915 	inx
    000003B0                        916 00598$:
    000003B0 8Dr00r00         [ 4]  917 	sta	_IsTileSolid_PARM_2
    000003B3 8Er01r00         [ 4]  918 	stx	(_IsTileSolid_PARM_2 + 1)
    000003B6 A6*0A            [ 3]  919 	ldx	*(_UpdatePlayer_sloc5_1_0 + 1)
    000003B8 A5*09            [ 3]  920 	lda	*_UpdatePlayer_sloc5_1_0
    000003BA 20r00r00         [ 6]  921 	jsr	_IsTileSolid
    000003BD C9 00            [ 2]  922 	cmp	#0x00
    000003BF D0 2C            [ 4]  923 	bne	00156$
    000003C1 A6*0C            [ 3]  924 	ldx	*(_UpdatePlayer_sloc6_1_0 + 1)
    000003C3 A5*0B            [ 3]  925 	lda	*_UpdatePlayer_sloc6_1_0
    000003C5 38               [ 2]  926 	sec
    000003C6 E9 03            [ 2]  927 	sbc	#0x03
    000003C8 B0 01            [ 4]  928 	bcs	00601$
    000003CA CA               [ 2]  929 	dex
    000003CB                        930 00601$:
    000003CB 85*0B            [ 3]  931 	sta	*_UpdatePlayer_sloc6_1_0
    000003CD 86*0C            [ 3]  932 	stx	*(_UpdatePlayer_sloc6_1_0 + 1)
    000003CF A6*08            [ 3]  933 	ldx	*(_UpdatePlayer_sloc4_1_0 + 1)
    000003D1 A5*07            [ 3]  934 	lda	*_UpdatePlayer_sloc4_1_0
    000003D3 18               [ 2]  935 	clc
    000003D4 69 18            [ 2]  936 	adc	#0x18
    000003D6 90 01            [ 4]  937 	bcc	00602$
    000003D8 E8               [ 2]  938 	inx
    000003D9                        939 00602$:
    000003D9 8Dr00r00         [ 4]  940 	sta	_IsTileSolid_PARM_2
    000003DC 8Er01r00         [ 4]  941 	stx	(_IsTileSolid_PARM_2 + 1)
    000003DF A6*0C            [ 3]  942 	ldx	*(_UpdatePlayer_sloc6_1_0 + 1)
    000003E1 A5*0B            [ 3]  943 	lda	*_UpdatePlayer_sloc6_1_0
    000003E3 20r00r00         [ 6]  944 	jsr	_IsTileSolid
    000003E6 C9 00            [ 2]  945 	cmp	#0x00
    000003E8 D0 03            [ 4]  946 	bne	00604$
    000003EA 4Cr6Br04         [ 3]  947 	jmp	00167$
    000003ED                        948 00604$:
    000003ED                        949 00156$:
                                    950 ;	src/player.c: 266: playerYVelocity=0;
    000003ED A2 00            [ 2]  951 	ldx	#0x00
    000003EF 8Er06r00         [ 4]  952 	stx	_playerYVelocity
    000003F2 8Er07r00         [ 4]  953 	stx	(_playerYVelocity + 1)
                                    954 ;	src/player.c: 267: grounded=TRUE;
    000003F5 E8               [ 2]  955 	inx
    000003F6 8Er18r00         [ 4]  956 	stx	_UpdatePlayer_grounded_10003_151
    000003F9 4Cr6Br04         [ 3]  957 	jmp	00167$
                                    958 ;	src/player.c: 277: while(IsTileSolid(playerRealX+(PLAYER_CHARACTER_BOUNDING_BOX_HALF_WIDTH-2),playerRealY)||IsTileSolid(playerRealX-(PLAYER_CHARACTER_BOUNDING_BOX_HALF_WIDTH-2),playerRealY)){
    000003FC                        959 00160$:
    000003FC A5*02            [ 3]  960 	lda	*(_UpdatePlayer_sloc1_1_0 + 1)
    000003FE 85*0C            [ 3]  961 	sta	*(_UpdatePlayer_sloc6_1_0 + 1)
    00000400 A5*01            [ 3]  962 	lda	*_UpdatePlayer_sloc1_1_0
    00000402 85*0B            [ 3]  963 	sta	*_UpdatePlayer_sloc6_1_0
    00000404 A6*0C            [ 3]  964 	ldx	*(_UpdatePlayer_sloc6_1_0 + 1)
    00000406 A5*0B            [ 3]  965 	lda	*_UpdatePlayer_sloc6_1_0
    00000408 18               [ 2]  966 	clc
    00000409 69 03            [ 2]  967 	adc	#0x03
    0000040B 90 01            [ 4]  968 	bcc	00605$
    0000040D E8               [ 2]  969 	inx
    0000040E                        970 00605$:
    0000040E A4*04            [ 3]  971 	ldy	*(_UpdatePlayer_sloc2_1_0 + 1)
    00000410 8Cr01r00         [ 4]  972 	sty	(_IsTileSolid_PARM_2 + 1)
    00000413 A4*03            [ 3]  973 	ldy	*_UpdatePlayer_sloc2_1_0
    00000415 8Cr00r00         [ 4]  974 	sty	_IsTileSolid_PARM_2
    00000418 20r00r00         [ 6]  975 	jsr	_IsTileSolid
    0000041B C9 00            [ 2]  976 	cmp	#0x00
    0000041D D0 1B            [ 4]  977 	bne	00161$
    0000041F A6*0C            [ 3]  978 	ldx	*(_UpdatePlayer_sloc6_1_0 + 1)
    00000421 A5*0B            [ 3]  979 	lda	*_UpdatePlayer_sloc6_1_0
    00000423 38               [ 2]  980 	sec
    00000424 E9 03            [ 2]  981 	sbc	#0x03
    00000426 B0 01            [ 4]  982 	bcs	00608$
    00000428 CA               [ 2]  983 	dex
    00000429                        984 00608$:
    00000429 A4*04            [ 3]  985 	ldy	*(_UpdatePlayer_sloc2_1_0 + 1)
    0000042B 8Cr01r00         [ 4]  986 	sty	(_IsTileSolid_PARM_2 + 1)
    0000042E A4*03            [ 3]  987 	ldy	*_UpdatePlayer_sloc2_1_0
    00000430 8Cr00r00         [ 4]  988 	sty	_IsTileSolid_PARM_2
    00000433 20r00r00         [ 6]  989 	jsr	_IsTileSolid
    00000436 C9 00            [ 2]  990 	cmp	#0x00
    00000438 F0 31            [ 4]  991 	beq	00167$
    0000043A                        992 00161$:
                                    993 ;	src/player.c: 278: playerYVelocity=0;
    0000043A A2 00            [ 2]  994 	ldx	#0x00
    0000043C 8Er06r00         [ 4]  995 	stx	_playerYVelocity
    0000043F 8Er07r00         [ 4]  996 	stx	(_playerYVelocity + 1)
                                    997 ;	src/player.c: 279: playerY+=16;
    00000442 AEr03r00         [ 4]  998 	ldx	(_playerY + 1)
    00000445 ADr02r00         [ 4]  999 	lda	_playerY
    00000448 18               [ 2] 1000 	clc
    00000449 69 10            [ 2] 1001 	adc	#0x10
    0000044B 90 01            [ 4] 1002 	bcc	00611$
    0000044D E8               [ 2] 1003 	inx
    0000044E                       1004 00611$:
                                   1005 ;	src/player.c: 280: playerRealY = playerY>>4;
    0000044E 8Dr02r00         [ 4] 1006 	sta	_playerY
    00000451 8Er03r00         [ 4] 1007 	stx	(_playerY + 1)
    00000454 86*00            [ 3] 1008 	stx	*(REGTEMP+0)
    00000456 46*00            [ 5] 1009 	lsr	*(REGTEMP+0)
    00000458 6A               [ 2] 1010 	ror	a
    00000459 46*00            [ 5] 1011 	lsr	*(REGTEMP+0)
    0000045B 6A               [ 2] 1012 	ror	a
    0000045C 46*00            [ 5] 1013 	lsr	*(REGTEMP+0)
    0000045E 6A               [ 2] 1014 	ror	a
    0000045F 46*00            [ 5] 1015 	lsr	*(REGTEMP+0)
    00000461 6A               [ 2] 1016 	ror	a
    00000462 A6*00            [ 3] 1017 	ldx	*(REGTEMP+0)
    00000464 85*03            [ 3] 1018 	sta	*_UpdatePlayer_sloc2_1_0
    00000466 86*04            [ 3] 1019 	stx	*(_UpdatePlayer_sloc2_1_0 + 1)
    00000468 4CrFCr03         [ 3] 1020 	jmp	00160$
    0000046B                       1021 00167$:
                                   1022 ;	src/player.c: 286: uint8_t pressedA = (joypadCurrent & J_A && !(joypadPrevious & J_A));
    0000046B ADr00r00         [ 4] 1023 	lda	_joypadCurrent
    0000046E 85*0B            [ 3] 1024 	sta	*_UpdatePlayer_sloc6_1_0
    00000470 24*0B            [ 3] 1025 	bit	*_UpdatePlayer_sloc6_1_0
    00000472 10 07            [ 4] 1026 	bpl	00195$
    00000474 ADr00r00         [ 4] 1027 	lda	_joypadPrevious
    00000477 29 80            [ 2] 1028 	and	#0x80
    00000479 F0 05            [ 4] 1029 	beq	00196$
    0000047B                       1030 00195$:
    0000047B A2 00            [ 2] 1031 	ldx	#0x00
    0000047D 4Cr82r04         [ 3] 1032 	jmp	00197$
    00000480                       1033 00196$:
    00000480 A2 01            [ 2] 1034 	ldx	#0x01
    00000482                       1035 00197$:
                                   1036 ;	src/player.c: 287: uint8_t pressedUp = (joypadCurrent & J_UP && !(joypadPrevious & J_UP));
    00000482 A9 08            [ 2] 1037 	lda	#0x08
    00000484 25*0B            [ 3] 1038 	and	*_UpdatePlayer_sloc6_1_0
    00000486 F0 07            [ 4] 1039 	beq	00198$
    00000488 ADr00r00         [ 4] 1040 	lda	_joypadPrevious
    0000048B 29 08            [ 2] 1041 	and	#0x08
    0000048D F0 05            [ 4] 1042 	beq	00199$
    0000048F                       1043 00198$:
    0000048F A9 00            [ 2] 1044 	lda	#0x00
    00000491 4Cr96r04         [ 3] 1045 	jmp	00200$
    00000494                       1046 00199$:
    00000494 A9 01            [ 2] 1047 	lda	#0x01
    00000496                       1048 00200$:
                                   1049 ;	src/player.c: 288: uint8_t pressedAOrUp = pressedA||pressedUp;
    00000496 E0 00            [ 2] 1050 	cpx	#0x00
    00000498 D0 09            [ 4] 1051 	bne	00202$
    0000049A C9 00            [ 2] 1052 	cmp	#0x00
    0000049C D0 05            [ 4] 1053 	bne	00202$
    0000049E A9 00            [ 2] 1054 	lda	#0x00
    000004A0 4CrA5r04         [ 3] 1055 	jmp	00203$
    000004A3                       1056 00202$:
    000004A3 A9 01            [ 2] 1057 	lda	#0x01
    000004A5                       1058 00203$:
                                   1059 ;	src/player.c: 291: if(grounded && pressedAOrUp){
    000004A5 AEr18r00         [ 4] 1060 	ldx	_UpdatePlayer_grounded_10003_151
    000004A8 F0 13            [ 4] 1061 	beq	00169$
    000004AA C9 00            [ 2] 1062 	cmp	#0x00
    000004AC F0 0F            [ 4] 1063 	beq	00169$
                                   1064 ;	src/player.c: 292: playerYVelocity=-PLAYER_CHARACTER_JUMP_VELOCITY;
    000004AE A2 DA            [ 2] 1065 	ldx	#0xda
    000004B0 8Er06r00         [ 4] 1066 	stx	_playerYVelocity
    000004B3 A2 FD            [ 2] 1067 	ldx	#0xfd
    000004B5 8Er07r00         [ 4] 1068 	stx	(_playerYVelocity + 1)
                                   1069 ;	src/player.c: 293: playerJumpIncrease=PLAYER_CHARACTER_INCREASE_JUMP_TIMER_MAX;
    000004B8 A2 14            [ 2] 1070 	ldx	#0x14
    000004BA 8Er01r00         [ 4] 1071 	stx	_playerJumpIncrease
    000004BD                       1072 00169$:
                                   1073 ;	src/player.c: 297: if(!grounded){
    000004BD ADr18r00         [ 4] 1074 	lda	_UpdatePlayer_grounded_10003_151
    000004C0 D0 31            [ 4] 1075 	bne	00180$
                                   1076 ;	src/player.c: 300: if(playerJumpIncrease>0)playerJumpIncrease--;
    000004C2 ADr01r00         [ 4] 1077 	lda	_playerJumpIncrease
    000004C5 F0 03            [ 4] 1078 	beq	00172$
    000004C7 CEr01r00         [ 6] 1079 	dec	_playerJumpIncrease
    000004CA                       1080 00172$:
                                   1081 ;	src/player.c: 303: if(!((joypadCurrent & J_A||joypadCurrent & J_UP))||playerJumpIncrease==0){
    000004CA 24*0B            [ 3] 1082 	bit	*_UpdatePlayer_sloc6_1_0
    000004CC 30 06            [ 4] 1083 	bmi	00176$
    000004CE A9 08            [ 2] 1084 	lda	#0x08
    000004D0 25*0B            [ 3] 1085 	and	*_UpdatePlayer_sloc6_1_0
    000004D2 F0 05            [ 4] 1086 	beq	00173$
    000004D4                       1087 00176$:
    000004D4 ADr01r00         [ 4] 1088 	lda	_playerJumpIncrease
    000004D7 D0 30            [ 4] 1089 	bne	00181$
    000004D9                       1090 00173$:
                                   1091 ;	src/player.c: 306: playerYVelocity+=GRAVTY;
    000004D9 AEr07r00         [ 4] 1092 	ldx	(_playerYVelocity + 1)
    000004DC ADr06r00         [ 4] 1093 	lda	_playerYVelocity
    000004DF 18               [ 2] 1094 	clc
    000004E0 69 2D            [ 2] 1095 	adc	#0x2d
    000004E2 90 01            [ 4] 1096 	bcc	00634$
    000004E4 E8               [ 2] 1097 	inx
    000004E5                       1098 00634$:
    000004E5 8Dr06r00         [ 4] 1099 	sta	_playerYVelocity
    000004E8 8Er07r00         [ 4] 1100 	stx	(_playerYVelocity + 1)
                                   1101 ;	src/player.c: 309: playerJumpIncrease=0;
    000004EB A2 00            [ 2] 1102 	ldx	#0x00
    000004ED 8Er01r00         [ 4] 1103 	stx	_playerJumpIncrease
    000004F0 4Cr09r05         [ 3] 1104 	jmp	00181$
    000004F3                       1105 00180$:
                                   1106 ;	src/player.c: 313: }else if(playerYVelocity>=0){
    000004F3 ADr07r00         [ 4] 1107 	lda	(_playerYVelocity + 1)
    000004F6 85*0C            [ 3] 1108 	sta	*(_UpdatePlayer_sloc6_1_0 + 1)
    000004F8 ADr06r00         [ 4] 1109 	lda	_playerYVelocity
    000004FB 85*0B            [ 3] 1110 	sta	*_UpdatePlayer_sloc6_1_0
    000004FD 24*0C            [ 3] 1111 	bit	*(_UpdatePlayer_sloc6_1_0 + 1)
    000004FF 30 08            [ 4] 1112 	bmi	00181$
                                   1113 ;	src/player.c: 316: playerYVelocity=0;
    00000501 A2 00            [ 2] 1114 	ldx	#0x00
    00000503 8Er06r00         [ 4] 1115 	stx	_playerYVelocity
    00000506 8Er07r00         [ 4] 1116 	stx	(_playerYVelocity + 1)
    00000509                       1117 00181$:
                                   1118 ;	src/player.c: 320: playerX+=playerXVelocity>>4;
    00000509 AEr05r00         [ 4] 1119 	ldx	(_playerXVelocity + 1)
    0000050C ADr04r00         [ 4] 1120 	lda	_playerXVelocity
    0000050F 86*00            [ 3] 1121 	stx	*(REGTEMP+0)
    00000511 E0 80            [ 2] 1122 	cpx	#0x80
    00000513 66*00            [ 5] 1123 	ror	*(REGTEMP+0)
    00000515 6A               [ 2] 1124 	ror	a
    00000516 E0 80            [ 2] 1125 	cpx	#0x80
    00000518 66*00            [ 5] 1126 	ror	*(REGTEMP+0)
    0000051A 6A               [ 2] 1127 	ror	a
    0000051B E0 80            [ 2] 1128 	cpx	#0x80
    0000051D 66*00            [ 5] 1129 	ror	*(REGTEMP+0)
    0000051F 6A               [ 2] 1130 	ror	a
    00000520 E0 80            [ 2] 1131 	cpx	#0x80
    00000522 66*00            [ 5] 1132 	ror	*(REGTEMP+0)
    00000524 6A               [ 2] 1133 	ror	a
    00000525 A6*00            [ 3] 1134 	ldx	*(REGTEMP+0)
    00000527 85*0B            [ 3] 1135 	sta	*_UpdatePlayer_sloc6_1_0
    00000529 86*0C            [ 3] 1136 	stx	*(_UpdatePlayer_sloc6_1_0 + 1)
    0000052B 18               [ 2] 1137 	clc
    0000052C 6Dr00r00         [ 4] 1138 	adc	_playerX
    0000052F 8Dr00r00         [ 4] 1139 	sta	_playerX
    00000532 8A               [ 2] 1140 	txa
    00000533 6Dr01r00         [ 4] 1141 	adc	(_playerX + 1)
    00000536 8Dr01r00         [ 4] 1142 	sta	(_playerX + 1)
                                   1143 ;	src/player.c: 321: playerY+=playerYVelocity>>4;
    00000539 AEr07r00         [ 4] 1144 	ldx	(_playerYVelocity + 1)
    0000053C ADr06r00         [ 4] 1145 	lda	_playerYVelocity
    0000053F 86*00            [ 3] 1146 	stx	*(REGTEMP+0)
    00000541 E0 80            [ 2] 1147 	cpx	#0x80
    00000543 66*00            [ 5] 1148 	ror	*(REGTEMP+0)
    00000545 6A               [ 2] 1149 	ror	a
    00000546 E0 80            [ 2] 1150 	cpx	#0x80
    00000548 66*00            [ 5] 1151 	ror	*(REGTEMP+0)
    0000054A 6A               [ 2] 1152 	ror	a
    0000054B E0 80            [ 2] 1153 	cpx	#0x80
    0000054D 66*00            [ 5] 1154 	ror	*(REGTEMP+0)
    0000054F 6A               [ 2] 1155 	ror	a
    00000550 E0 80            [ 2] 1156 	cpx	#0x80
    00000552 66*00            [ 5] 1157 	ror	*(REGTEMP+0)
    00000554 6A               [ 2] 1158 	ror	a
    00000555 A6*00            [ 3] 1159 	ldx	*(REGTEMP+0)
    00000557 18               [ 2] 1160 	clc
    00000558 6Dr02r00         [ 4] 1161 	adc	_playerY
    0000055B 8Dr02r00         [ 4] 1162 	sta	_playerY
    0000055E 8A               [ 2] 1163 	txa
    0000055F 6Dr03r00         [ 4] 1164 	adc	(_playerY + 1)
    00000562 8Dr03r00         [ 4] 1165 	sta	(_playerY + 1)
                                   1166 ;	src/player.c: 324: playerRealX = playerX>>4;
    00000565 AEr01r00         [ 4] 1167 	ldx	(_playerX + 1)
    00000568 ADr00r00         [ 4] 1168 	lda	_playerX
    0000056B 86*00            [ 3] 1169 	stx	*(REGTEMP+0)
    0000056D 46*00            [ 5] 1170 	lsr	*(REGTEMP+0)
    0000056F 6A               [ 2] 1171 	ror	a
    00000570 46*00            [ 5] 1172 	lsr	*(REGTEMP+0)
    00000572 6A               [ 2] 1173 	ror	a
    00000573 46*00            [ 5] 1174 	lsr	*(REGTEMP+0)
    00000575 6A               [ 2] 1175 	ror	a
    00000576 46*00            [ 5] 1176 	lsr	*(REGTEMP+0)
    00000578 6A               [ 2] 1177 	ror	a
    00000579 A6*00            [ 3] 1178 	ldx	*(REGTEMP+0)
    0000057B 8Dr14r00         [ 4] 1179 	sta	_UpdatePlayer_playerRealX_10003_151
    0000057E 8Er15r00         [ 4] 1180 	stx	(_UpdatePlayer_playerRealX_10003_151 + 1)
                                   1181 ;	src/player.c: 325: playerRealY = playerY>>4;
    00000581 AEr03r00         [ 4] 1182 	ldx	(_playerY + 1)
    00000584 ADr02r00         [ 4] 1183 	lda	_playerY
    00000587 86*00            [ 3] 1184 	stx	*(REGTEMP+0)
    00000589 46*00            [ 5] 1185 	lsr	*(REGTEMP+0)
    0000058B 6A               [ 2] 1186 	ror	a
    0000058C 46*00            [ 5] 1187 	lsr	*(REGTEMP+0)
    0000058E 6A               [ 2] 1188 	ror	a
    0000058F 46*00            [ 5] 1189 	lsr	*(REGTEMP+0)
    00000591 6A               [ 2] 1190 	ror	a
    00000592 46*00            [ 5] 1191 	lsr	*(REGTEMP+0)
    00000594 6A               [ 2] 1192 	ror	a
    00000595 A6*00            [ 3] 1193 	ldx	*(REGTEMP+0)
    00000597 8Dr16r00         [ 4] 1194 	sta	_UpdatePlayer_playerRealY_10003_151
    0000059A 8Er17r00         [ 4] 1195 	stx	(_UpdatePlayer_playerRealY_10003_151 + 1)
                                   1196 ;	src/player.c: 328: if(playerRealX>=(DEVICE_SCREEN_PX_WIDTH>>1)){
    0000059D ADr14r00         [ 4] 1197 	lda	_UpdatePlayer_playerRealX_10003_151
    000005A0 38               [ 2] 1198 	sec
    000005A1 E9 80            [ 2] 1199 	sbc	#0x80
    000005A3 ADr15r00         [ 4] 1200 	lda	(_UpdatePlayer_playerRealX_10003_151 + 1)
    000005A6 E9 00            [ 2] 1201 	sbc	#0x00
    000005A8 90 47            [ 4] 1202 	bcc	00185$
                                   1203 ;	src/player.c: 329: uint16_t max = currentLevelWidth-DEVICE_SCREEN_PX_WIDTH;
    000005AA AEr01r00         [ 4] 1204 	ldx	(_currentLevelWidth + 1)
    000005AD ADr00r00         [ 4] 1205 	lda	_currentLevelWidth
    000005B0 38               [ 2] 1206 	sec
    000005B1 E9 00            [ 2] 1207 	sbc	#0x00
    000005B3 48               [ 3] 1208 	pha
    000005B4 8A               [ 2] 1209 	txa
    000005B5 E9 01            [ 2] 1210 	sbc	#0x01
    000005B7 AA               [ 2] 1211 	tax
    000005B8 68               [ 4] 1212 	pla
    000005B9 8Dr19r00         [ 4] 1213 	sta	_UpdatePlayer_max_20004_166
    000005BC 8Er1Ar00         [ 4] 1214 	stx	(_UpdatePlayer_max_20004_166 + 1)
                                   1215 ;	src/player.c: 330: camera_x=playerRealX-(DEVICE_SCREEN_PX_WIDTH>>1);
    000005BF AEr15r00         [ 4] 1216 	ldx	(_UpdatePlayer_playerRealX_10003_151 + 1)
    000005C2 ADr14r00         [ 4] 1217 	lda	_UpdatePlayer_playerRealX_10003_151
    000005C5 38               [ 2] 1218 	sec
    000005C6 E9 80            [ 2] 1219 	sbc	#0x80
    000005C8 B0 01            [ 4] 1220 	bcs	00637$
    000005CA CA               [ 2] 1221 	dex
    000005CB                       1222 00637$:
    000005CB 8Dr00r00         [ 4] 1223 	sta	_camera_x
    000005CE 8Er01r00         [ 4] 1224 	stx	(_camera_x + 1)
                                   1225 ;	src/player.c: 333: if(camera_x>max)camera_x=max;
    000005D1 85*00            [ 3] 1226 	sta	*(REGTEMP+0)
    000005D3 ADr19r00         [ 4] 1227 	lda	_UpdatePlayer_max_20004_166
    000005D6 38               [ 2] 1228 	sec
    000005D7 E5*00            [ 3] 1229 	sbc	*(REGTEMP+0)
    000005D9 ADr1Ar00         [ 4] 1230 	lda	(_UpdatePlayer_max_20004_166 + 1)
    000005DC 86*00            [ 3] 1231 	stx	*(REGTEMP+0)
    000005DE E5*00            [ 3] 1232 	sbc	*(REGTEMP+0)
    000005E0 B0 17            [ 4] 1233 	bcs	00186$
    000005E2 ADr1Ar00         [ 4] 1234 	lda	(_UpdatePlayer_max_20004_166 + 1)
    000005E5 8Dr01r00         [ 4] 1235 	sta	(_camera_x + 1)
    000005E8 ADr19r00         [ 4] 1236 	lda	_UpdatePlayer_max_20004_166
    000005EB 8Dr00r00         [ 4] 1237 	sta	_camera_x
    000005EE 4CrF9r05         [ 3] 1238 	jmp	00186$
    000005F1                       1239 00185$:
                                   1240 ;	src/player.c: 335: else camera_x=0;
    000005F1 A2 00            [ 2] 1241 	ldx	#0x00
    000005F3 8Er00r00         [ 4] 1242 	stx	_camera_x
    000005F6 8Er01r00         [ 4] 1243 	stx	(_camera_x + 1)
    000005F9                       1244 00186$:
                                   1245 ;	src/player.c: 345: uint8_t frame = grounded ? (turning ? 5 :((playerXVelocity>>4)==0 ? 0 : threeFrameCounterValue)) : (playerYVelocity<0 ? 3 : 4);
    000005F9 ADr18r00         [ 4] 1246 	lda	_UpdatePlayer_grounded_10003_151
    000005FC F0 1B            [ 4] 1247 	beq	00204$
    000005FE ADr13r00         [ 4] 1248 	lda	_UpdatePlayer_turning_10002_137
    00000601 F0 05            [ 4] 1249 	beq	00206$
    00000603 A9 05            [ 2] 1250 	lda	#0x05
    00000605 4Cr2Er06         [ 3] 1251 	jmp	00205$
    00000608                       1252 00206$:
    00000608 A5*0C            [ 3] 1253 	lda	*(_UpdatePlayer_sloc6_1_0 + 1)
    0000060A 05*0B            [ 3] 1254 	ora	*_UpdatePlayer_sloc6_1_0
    0000060C D0 05            [ 4] 1255 	bne	00208$
    0000060E A9 00            [ 2] 1256 	lda	#0x00
    00000610 4Cr2Er06         [ 3] 1257 	jmp	00205$
    00000613                       1258 00208$:
    00000613 ADr12r00         [ 4] 1259 	lda	_UpdatePlayer_threeFrameCounterValue_10001_135
    00000616 4Cr2Er06         [ 3] 1260 	jmp	00205$
    00000619                       1261 00204$:
    00000619 ADr07r00         [ 4] 1262 	lda	(_playerYVelocity + 1)
    0000061C 85*0C            [ 3] 1263 	sta	*(_UpdatePlayer_sloc6_1_0 + 1)
    0000061E ADr06r00         [ 4] 1264 	lda	_playerYVelocity
    00000621 85*0B            [ 3] 1265 	sta	*_UpdatePlayer_sloc6_1_0
    00000623 24*0C            [ 3] 1266 	bit	*(_UpdatePlayer_sloc6_1_0 + 1)
    00000625 10 05            [ 4] 1267 	bpl	00210$
    00000627 A9 03            [ 2] 1268 	lda	#0x03
    00000629 4Cr2Er06         [ 3] 1269 	jmp	00211$
    0000062C                       1270 00210$:
    0000062C A9 04            [ 2] 1271 	lda	#0x04
    0000062E                       1272 00211$:
    0000062E                       1273 00205$:
                                   1274 ;	src/player.c: 346: uint8_t directionOffset = facingRight ? 0 : 6;
    0000062E AEr00r00         [ 4] 1275 	ldx	_facingRight
    00000631 F0 05            [ 4] 1276 	beq	00212$
    00000633 A2 00            [ 2] 1277 	ldx	#0x00
    00000635 4Cr3Ar06         [ 3] 1278 	jmp	00213$
    00000638                       1279 00212$:
    00000638 A2 06            [ 2] 1280 	ldx	#0x06
    0000063A                       1281 00213$:
                                   1282 ;	src/player.c: 348: uint8_t spritesUsed = DrawPlayer(playerRealX,playerRealY,frame+directionOffset);
    0000063A 18               [ 2] 1283 	clc
    0000063B 86*00            [ 3] 1284 	stx	*(REGTEMP+0)
    0000063D 65*00            [ 3] 1285 	adc	*(REGTEMP+0)
    0000063F 8Dr0Ar00         [ 4] 1286 	sta	_DrawPlayer_PARM_3
    00000642 ADr17r00         [ 4] 1287 	lda	(_UpdatePlayer_playerRealY_10003_151 + 1)
    00000645 8Dr09r00         [ 4] 1288 	sta	(_DrawPlayer_PARM_2 + 1)
    00000648 ADr16r00         [ 4] 1289 	lda	_UpdatePlayer_playerRealY_10003_151
    0000064B 8Dr08r00         [ 4] 1290 	sta	_DrawPlayer_PARM_2
    0000064E AEr15r00         [ 4] 1291 	ldx	(_UpdatePlayer_playerRealX_10003_151 + 1)
    00000651 ADr14r00         [ 4] 1292 	lda	_UpdatePlayer_playerRealX_10003_151
    00000654 20r43r00         [ 6] 1293 	jsr	_DrawPlayer
    00000657 8Dr1Br00         [ 4] 1294 	sta	_UpdatePlayer_spritesUsed_10005_167
                                   1295 ;	src/player.c: 351: if(playerRealX>currentLevelWidth-32){
    0000065A AEr01r00         [ 4] 1296 	ldx	(_currentLevelWidth + 1)
    0000065D ADr00r00         [ 4] 1297 	lda	_currentLevelWidth
    00000660 38               [ 2] 1298 	sec
    00000661 E9 20            [ 2] 1299 	sbc	#0x20
    00000663 B0 01            [ 4] 1300 	bcs	00648$
    00000665 CA               [ 2] 1301 	dex
    00000666                       1302 00648$:
    00000666 ACr15r00         [ 4] 1303 	ldy	(_UpdatePlayer_playerRealX_10003_151 + 1)
    00000669 84*0C            [ 3] 1304 	sty	*(_UpdatePlayer_sloc6_1_0 + 1)
    0000066B ACr14r00         [ 4] 1305 	ldy	_UpdatePlayer_playerRealX_10003_151
    0000066E 84*0B            [ 3] 1306 	sty	*_UpdatePlayer_sloc6_1_0
    00000670 38               [ 2] 1307 	sec
    00000671 E5*0B            [ 3] 1308 	sbc	*_UpdatePlayer_sloc6_1_0
    00000673 8A               [ 2] 1309 	txa
    00000674 E5*0C            [ 3] 1310 	sbc	*(_UpdatePlayer_sloc6_1_0 + 1)
    00000676 B0 03            [ 4] 1311 	bcs	00188$
                                   1312 ;	src/player.c: 352: nextLevel++;
    00000678 EEr00r00         [ 6] 1313 	inc	_nextLevel
    0000067B                       1314 00188$:
                                   1315 ;	src/player.c: 355: return spritesUsed;
    0000067B ADr1Br00         [ 4] 1316 	lda	_UpdatePlayer_spritesUsed_10005_167
                                   1317 ;	src/player.c: 356: }
    0000067E 60               [ 6] 1318 	rts
                                   1319 	.area _CODE_255
    0000067F                       1320 _baseProp:
    0000067F 00                    1321 	.db #0x00	; 0
    00000680                       1322 _PlayerPalettesGGSMS:
    00000680 26                    1323 	.db #0x26	; 38
    00000681 20                    1324 	.db #0x20	; 32
    00000682 3D                    1325 	.db #0x3d	; 61
    00000683 1D                    1326 	.db #0x1d	; 29
    00000684 17                    1327 	.db #0x17	; 23
    00000685 19                    1328 	.db #0x19	; 25
    00000686 02                    1329 	.db #0x02	; 2
    00000687 29                    1330 	.db #0x29	; 41
    00000688 2B                    1331 	.db #0x2b	; 43
    00000689 04                    1332 	.db #0x04	; 4
    0000068A 16                    1333 	.db #0x16	; 22
    0000068B 2A                    1334 	.db #0x2a	; 42
    0000068C 12                    1335 	.db #0x12	; 18
    0000068D 28                    1336 	.db #0x28	; 40
    0000068E 2C                    1337 	.db #0x2c	; 44
    0000068F 34                    1338 	.db #0x34	; 52	'4'
                                   1339 	.area _XINIT
    00000000                       1340 __xinit__facingRight:
    00000000 01                    1341 	.db #0x01	; 1
    00000001                       1342 __xinit__playerJumpIncrease:
    00000001 00                    1343 	.db #0x00	; 0
    00000002                       1344 __xinit__threeFrameCounter:
    00000002 00                    1345 	.db #0x00	; 0
                                   1346 	.area _CABS    (ABS)

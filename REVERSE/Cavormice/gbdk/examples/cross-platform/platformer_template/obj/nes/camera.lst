                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module camera
                                      6 	.optsdcc -mmos6502
                                      7 	
                                      8 ;; Ordering of segments for the linker.
                                      9 	.area _ZP      (PAG)
                                     10 	.area _OSEG    (PAG, OVR)
                                     11 	.area _HOME
                                     12 	.area _GSINIT
                                     13 	.area _GSFINAL
                                     14 	.area _CODE
                                     15 	.area _XINIT
                                     16 	.area _DATA
                                     17 	.area _DATA
                                     18 	.area _BSS
                                     19 ;--------------------------------------------------------
                                     20 ; Public variables in this module
                                     21 ;--------------------------------------------------------
                                     22 	.globl b_UpdateCamera
                                     23 	.globl _UpdateCamera
                                     24 	.globl _SetCurrentLevelSubmap
                                     25 	.globl __switch_prg0
                                     26 	.globl _set_bkg_submap
                                     27 	.globl _SetCurrentLevelSubmap_PARM_4
                                     28 	.globl _SetCurrentLevelSubmap_PARM_3
                                     29 	.globl _redraw
                                     30 	.globl _old_map_pos_x
                                     31 	.globl _map_pos_x
                                     32 	.globl _old_camera_x
                                     33 	.globl _camera_x
                                     34 	.globl _OAMDMA
                                     35 	.globl _PPUDATA
                                     36 	.globl _PPUADDR
                                     37 	.globl _PPUSCROLL
                                     38 	.globl _OAMDATA
                                     39 	.globl _OAMADDR
                                     40 	.globl _PPUSTATUS
                                     41 	.globl _PPUMASK
                                     42 	.globl _PPUCTRL
                                     43 ;--------------------------------------------------------
                                     44 ; ZP ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area _ZP      (PAG)
    00000000                         47 _UpdateCamera_sloc0_1_0:
    00000000                         48 	.ds 2
                                     49 ;--------------------------------------------------------
                                     50 ; overlayable items in ram
                                     51 ;--------------------------------------------------------
                                     52 ;--------------------------------------------------------
                                     53 ; uninitialized external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area _BSS
                         00002000    56 _PPUCTRL	=	0x2000
                         00002001    57 _PPUMASK	=	0x2001
                         00002002    58 _PPUSTATUS	=	0x2002
                         00002003    59 _OAMADDR	=	0x2003
                         00002004    60 _OAMDATA	=	0x2004
                         00002005    61 _PPUSCROLL	=	0x2005
                         00002006    62 _PPUADDR	=	0x2006
                         00002007    63 _PPUDATA	=	0x2007
                         00004014    64 _OAMDMA	=	0x4014
    00000000                         65 _camera_x::
    00000000                         66 	.ds 2
    00000002                         67 _old_camera_x::
    00000002                         68 	.ds 2
    00000004                         69 _map_pos_x::
    00000004                         70 	.ds 1
    00000005                         71 _old_map_pos_x::
    00000005                         72 	.ds 1
    00000006                         73 _redraw::
    00000006                         74 	.ds 1
    00000007                         75 _SetCurrentLevelSubmap_PARM_3:
    00000007                         76 	.ds 1
    00000008                         77 _SetCurrentLevelSubmap_PARM_4:
    00000008                         78 	.ds 1
    00000009                         79 _SetCurrentLevelSubmap_y_10000_90:
    00000009                         80 	.ds 1
    0000000A                         81 _SetCurrentLevelSubmap__previous_bank_10000_91:
    0000000A                         82 	.ds 1
                                     83 ;--------------------------------------------------------
                                     84 ; absolute external ram data
                                     85 ;--------------------------------------------------------
                                     86 	.area _DABS    (ABS)
                                     87 ;--------------------------------------------------------
                                     88 ; initialized external ram data
                                     89 ;--------------------------------------------------------
                                     90 	.area _DATA
                                     91 ;--------------------------------------------------------
                                     92 ; global & static initialisations
                                     93 ;--------------------------------------------------------
                                     94 	.area _HOME
                                     95 	.area _GSINIT
                                     96 	.area _GSFINAL
                                     97 	.area _GSINIT
                                     98 ;--------------------------------------------------------
                                     99 ; Home
                                    100 ;--------------------------------------------------------
                                    101 	.area _HOME
                                    102 ;	src/camera.c: 30: void SetCurrentLevelSubmap(uint8_t x, uint8_t y, uint8_t w, uint8_t h) NONBANKED{
                                    103 ;	-----------------------------------------
                                    104 ;	 function SetCurrentLevelSubmap
                                    105 ;	-----------------------------------------
                                    106 ;	Register assignment is optimal.
                                    107 ;	Stack space usage: 0 bytes.
    00000000                        108 _SetCurrentLevelSubmap:
    00000000 8Er09r00         [ 4]  109 	stx	_SetCurrentLevelSubmap_y_10000_90
                                    110 ;	src/camera.c: 32: uint8_t _previous_bank = CURRENT_BANK;
    00000003 AEr00r00         [ 4]  111 	ldx	__current_bank
    00000006 8Er0Ar00         [ 4]  112 	stx	_SetCurrentLevelSubmap__previous_bank_10000_91
                                    113 ;	src/camera.c: 34: SWITCH_ROM(currentAreaBank);
    00000009 48               [ 3]  114 	pha
    0000000A ADr00r00         [ 4]  115 	lda	_currentAreaBank
    0000000D 20r00r00         [ 6]  116 	jsr	__switch_prg0
    00000010 68               [ 4]  117 	pla
                                    118 ;	src/camera.c: 36: set_bkg_submap(x,y,w, h, currentLevelMap, currentLevelWidthInTiles);
    00000011 AEr00r00         [ 4]  119 	ldx	_currentLevelWidthInTiles
    00000014 8Er00r00         [ 4]  120 	stx	_set_bkg_submap_PARM_6
    00000017 AEr07r00         [ 4]  121 	ldx	_SetCurrentLevelSubmap_PARM_3
    0000001A 8Er00r00         [ 4]  122 	stx	_set_bkg_submap_PARM_3
    0000001D AEr08r00         [ 4]  123 	ldx	_SetCurrentLevelSubmap_PARM_4
    00000020 8Er00r00         [ 4]  124 	stx	_set_bkg_submap_PARM_4
    00000023 AEr01r00         [ 4]  125 	ldx	(_currentLevelMap + 1)
    00000026 8Er01r00         [ 4]  126 	stx	(_set_bkg_submap_PARM_5 + 1)
    00000029 AEr00r00         [ 4]  127 	ldx	_currentLevelMap
    0000002C 8Er00r00         [ 4]  128 	stx	_set_bkg_submap_PARM_5
    0000002F AEr09r00         [ 4]  129 	ldx	_SetCurrentLevelSubmap_y_10000_90
    00000032 20r00r00         [ 6]  130 	jsr	_set_bkg_submap
                                    131 ;	src/camera.c: 38: SWITCH_ROM(_previous_bank);
    00000035 ADr0Ar00         [ 4]  132 	lda	_SetCurrentLevelSubmap__previous_bank_10000_91
                                    133 ;	src/camera.c: 40: }
    00000038 4Cr00r00         [ 3]  134 	jmp	__switch_prg0
                                    135 	.area _HOME
                                    136 ;--------------------------------------------------------
                                    137 ; code
                                    138 ;--------------------------------------------------------
                                    139 	.area _CODE_255
                                    140 ;------------------------------------------------------------
                                    141 ;Allocation info for local variables in function 'SetCurrentLevelSubmap'
                                    142 ;------------------------------------------------------------
                                    143 ;w                         Allocated with name '_SetCurrentLevelSubmap_PARM_3'
                                    144 ;h                         Allocated with name '_SetCurrentLevelSubmap_PARM_4'
                                    145 ;y                         Allocated with name '_SetCurrentLevelSubmap_y_10000_90'
                                    146 ;x                         Allocated to registers a 
                                    147 ;_previous_bank            Allocated with name '_SetCurrentLevelSubmap__previous_bank_10000_91'
                                    148 ;------------------------------------------------------------
                                    149 ;------------------------------------------------------------
                                    150 ;Allocation info for local variables in function 'UpdateCamera'
                                    151 ;------------------------------------------------------------
                                    152 ;sloc0                     Allocated with name '_UpdateCamera_sloc0_1_0'
                                    153 ;__200000006               Allocated to registers 
                                    154 ;__200000007               Allocated to registers 
                                    155 ;x                         Allocated to registers 
                                    156 ;y                         Allocated to registers 
                                    157 ;__400000009               Allocated to registers y 
                                    158 ;__400000010               Allocated to registers y 
                                    159 ;map_pos_x                 Allocated to registers 
                                    160 ;__500000012               Allocated to registers y 
                                    161 ;__500000013               Allocated to registers a 
                                    162 ;map_pos_x                 Allocated to registers 
                                    163 ;------------------------------------------------------------
                                    164 ;	src/camera.c: 56: void UpdateCamera(void) BANKED {
                                    165 ;	-----------------------------------------
                                    166 ;	 function UpdateCamera
                                    167 ;	-----------------------------------------
                                    168 ;	Register assignment is optimal.
                                    169 ;	Stack space usage: 0 bytes.
                         000000FF   170 	b_UpdateCamera	= 255
    00000000                        171 _UpdateCamera:
                                    172 ;	src/camera.c: 59: move_bkg(camera_x, 0);
    00000000 ADr00r00         [ 4]  173 	lda	_camera_x
    00000003 8Dr00r00         [ 4]  174 	sta	_bkg_scroll_x
                                    175 ;	../../../include/nes/nes.h: 918: bkg_scroll_x = x, bkg_scroll_y = y;
    00000006 A2 00            [ 2]  176 	ldx	#0x00
    00000008 8Er00r00         [ 4]  177 	stx	_bkg_scroll_y
                                    178 ;	src/camera.c: 62: map_pos_x = (uint8_t)(camera_x >> 3u);
    0000000B AEr01r00         [ 4]  179 	ldx	(_camera_x + 1)
    0000000E ADr00r00         [ 4]  180 	lda	_camera_x
    00000011 86*00            [ 3]  181 	stx	*(REGTEMP+0)
    00000013 46*00            [ 5]  182 	lsr	*(REGTEMP+0)
    00000015 6A               [ 2]  183 	ror	a
    00000016 46*00            [ 5]  184 	lsr	*(REGTEMP+0)
    00000018 6A               [ 2]  185 	ror	a
    00000019 46*00            [ 5]  186 	lsr	*(REGTEMP+0)
    0000001B 6A               [ 2]  187 	ror	a
    0000001C A6*00            [ 3]  188 	ldx	*(REGTEMP+0)
    0000001E A8               [ 2]  189 	tay
    0000001F 8Cr04r00         [ 4]  190 	sty	_map_pos_x
                                    191 ;	src/camera.c: 63: if (map_pos_x != old_map_pos_x) {
    00000022 CCr05r00         [ 4]  192 	cpy	_old_map_pos_x
    00000025 D0 03            [ 4]  193 	bne	00147$
    00000027 4CrAEr00         [ 3]  194 	jmp	00107$
    0000002A                        195 00147$:
                                    196 ;	src/camera.c: 64: if (camera_x < old_camera_x) {
    0000002A ADr00r00         [ 4]  197 	lda	_camera_x
    0000002D 38               [ 2]  198 	sec
    0000002E EDr02r00         [ 4]  199 	sbc	_old_camera_x
    00000031 ADr01r00         [ 4]  200 	lda	(_camera_x + 1)
    00000034 EDr03r00         [ 4]  201 	sbc	(_old_camera_x + 1)
    00000037 B0 2B            [ 4]  202 	bcs	00104$
                                    203 ;	src/camera.c: 66: update_column_left(map_pos_x), 
                                    204 ;	src/camera.c: 45: return map_pos_x + 1;
    00000039 C8               [ 2]  205 	iny
                                    206 ;	src/camera.c: 69: MIN(DEVICE_SCREEN_HEIGHT, currentLevelHeightInTiles ));     
    0000003A A9 1E            [ 2]  207 	lda	#0x1e
    0000003C 38               [ 2]  208 	sec
    0000003D EDr00r00         [ 4]  209 	sbc	_currentLevelHeightInTiles
    00000040 A9 00            [ 2]  210 	lda	#0x00
    00000042 EDr01r00         [ 4]  211 	sbc	(_currentLevelHeightInTiles + 1)
    00000045 B0 07            [ 4]  212 	bcs	00113$
    00000047 A2 00            [ 2]  213 	ldx	#0x00
    00000049 A9 1E            [ 2]  214 	lda	#0x1e
    0000004B 4Cr54r00         [ 3]  215 	jmp	00114$
    0000004E                        216 00113$:
    0000004E AEr01r00         [ 4]  217 	ldx	(_currentLevelHeightInTiles + 1)
    00000051 ADr00r00         [ 4]  218 	lda	_currentLevelHeightInTiles
    00000054                        219 00114$:
    00000054 8Dr08r00         [ 4]  220 	sta	_SetCurrentLevelSubmap_PARM_4
    00000057 A2 01            [ 2]  221 	ldx	#0x01
    00000059 8Er07r00         [ 4]  222 	stx	_SetCurrentLevelSubmap_PARM_3
    0000005C 98               [ 2]  223 	tya
    0000005D CA               [ 2]  224 	dex
    0000005E 20r00r00         [ 6]  225 	jsr	_SetCurrentLevelSubmap
    00000061 4CrA8r00         [ 3]  226 	jmp	00105$
    00000064                        227 00104$:
                                    228 ;	src/camera.c: 71: if ((currentLevelWidthInTiles - DEVICE_SCREEN_WIDTH) > map_pos_x) {
    00000064 AEr01r00         [ 4]  229 	ldx	(_currentLevelWidthInTiles + 1)
    00000067 ADr00r00         [ 4]  230 	lda	_currentLevelWidthInTiles
    0000006A 38               [ 2]  231 	sec
    0000006B E9 20            [ 2]  232 	sbc	#0x20
    0000006D 85*00            [ 3]  233 	sta	*_UpdateCamera_sloc0_1_0
    0000006F 8A               [ 2]  234 	txa
    00000070 E9 00            [ 2]  235 	sbc	#0x00
    00000072 85*01            [ 3]  236 	sta	*(_UpdateCamera_sloc0_1_0 + 1)
    00000074 A2 00            [ 2]  237 	ldx	#0x00
    00000076 98               [ 2]  238 	tya
    00000077 38               [ 2]  239 	sec
    00000078 E5*00            [ 3]  240 	sbc	*_UpdateCamera_sloc0_1_0
    0000007A 8A               [ 2]  241 	txa
    0000007B E5*01            [ 3]  242 	sbc	*(_UpdateCamera_sloc0_1_0 + 1)
    0000007D B0 29            [ 4]  243 	bcs	00105$
                                    244 ;	src/camera.c: 73: update_column_right(map_pos_x), 
    0000007F 98               [ 2]  245 	tya
                                    246 ;	src/camera.c: 53: return map_pos_x + DEVICE_SCREEN_WIDTH;
    00000080 18               [ 2]  247 	clc
    00000081 69 20            [ 2]  248 	adc	#0x20
    00000083 A8               [ 2]  249 	tay
                                    250 ;	src/camera.c: 76: MIN(DEVICE_SCREEN_HEIGHT, currentLevelHeightInTiles));   
    00000084 A9 1E            [ 2]  251 	lda	#0x1e
    00000086 38               [ 2]  252 	sec
    00000087 EDr00r00         [ 4]  253 	sbc	_currentLevelHeightInTiles
    0000008A 8A               [ 2]  254 	txa
    0000008B EDr01r00         [ 4]  255 	sbc	(_currentLevelHeightInTiles + 1)
    0000008E B0 05            [ 4]  256 	bcs	00115$
    00000090 A9 1E            [ 2]  257 	lda	#0x1e
    00000092 4Cr9Br00         [ 3]  258 	jmp	00116$
    00000095                        259 00115$:
    00000095 AEr01r00         [ 4]  260 	ldx	(_currentLevelHeightInTiles + 1)
    00000098 ADr00r00         [ 4]  261 	lda	_currentLevelHeightInTiles
    0000009B                        262 00116$:
    0000009B 8Dr08r00         [ 4]  263 	sta	_SetCurrentLevelSubmap_PARM_4
    0000009E A2 01            [ 2]  264 	ldx	#0x01
    000000A0 8Er07r00         [ 4]  265 	stx	_SetCurrentLevelSubmap_PARM_3
    000000A3 98               [ 2]  266 	tya
    000000A4 CA               [ 2]  267 	dex
    000000A5 20r00r00         [ 6]  268 	jsr	_SetCurrentLevelSubmap
    000000A8                        269 00105$:
                                    270 ;	src/camera.c: 79: old_map_pos_x = map_pos_x;
    000000A8 ADr04r00         [ 4]  271 	lda	_map_pos_x
    000000AB 8Dr05r00         [ 4]  272 	sta	_old_map_pos_x
    000000AE                        273 00107$:
                                    274 ;	src/camera.c: 82: old_camera_x = camera_x;
    000000AE ADr01r00         [ 4]  275 	lda	(_camera_x + 1)
    000000B1 8Dr03r00         [ 4]  276 	sta	(_old_camera_x + 1)
    000000B4 ADr00r00         [ 4]  277 	lda	_camera_x
    000000B7 8Dr02r00         [ 4]  278 	sta	_old_camera_x
                                    279 ;	src/camera.c: 83: }
    000000BA 60               [ 6]  280 	rts
                                    281 	.area _CODE_255
                                    282 	.area _XINIT
                                    283 	.area _CABS    (ABS)

                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module print_example
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _printer_check_cancel
                                     13 	.globl _gbprinter_print_image
                                     14 	.globl _gbprinter_detect
                                     15 	.globl _puts
                                     16 	.globl _waitpadup
                                     17 	.globl _waitpad
                                     18 	.globl _joypad
                                     19 ;--------------------------------------------------------
                                     20 ; special function registers
                                     21 ;--------------------------------------------------------
                                     22 ;--------------------------------------------------------
                                     23 ; ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area _DATA
    00000000                         26 _printer_check_cancel_keys_10000_173:
    00000000                         27 	.ds 1
    00000001                         28 _printer_check_cancel_old_keys_10000_173:
    00000001                         29 	.ds 1
                                     30 ;--------------------------------------------------------
                                     31 ; ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area _INITIALIZED
                                     34 ;--------------------------------------------------------
                                     35 ; absolute external ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area _DABS (ABS)
                                     38 ;--------------------------------------------------------
                                     39 ; global & static initialisations
                                     40 ;--------------------------------------------------------
                                     41 	.area _HOME
                                     42 	.area _GSINIT
                                     43 	.area _GSFINAL
                                     44 	.area _GSINIT
                                     45 ;src/print_example.c:10: static uint8_t keys = 0, old_keys;
    00000000 21r00r00         [12]   46 	ld	hl, #_printer_check_cancel_keys_10000_173
    00000003 36 00            [12]   47 	ld	(hl), #0x00
                                     48 ;--------------------------------------------------------
                                     49 ; Home
                                     50 ;--------------------------------------------------------
                                     51 	.area _HOME
                                     52 	.area _HOME
                                     53 ;--------------------------------------------------------
                                     54 ; code
                                     55 ;--------------------------------------------------------
                                     56 	.area _CODE
                                     57 ;src/print_example.c:9: bool printer_check_cancel(void) {
                                     58 ;	---------------------------------
                                     59 ; Function printer_check_cancel
                                     60 ; ---------------------------------
    00000000                         61 _printer_check_cancel::
                                     62 ;src/print_example.c:11: old_keys = keys; keys = joypad();
    00000000 FAr00r00         [16]   63 	ld	a, (#_printer_check_cancel_keys_10000_173)
    00000003 EAr01r00         [16]   64 	ld	(#_printer_check_cancel_old_keys_10000_173),a
    00000006 CDr00r00         [24]   65 	call	_joypad
    00000009 EAr00r00         [16]   66 	ld	(#_printer_check_cancel_keys_10000_173),a
                                     67 ;src/print_example.c:12: return (((old_keys ^ keys) & J_B) & (keys & J_B));
    0000000C FAr01r00         [16]   68 	ld	a, (#_printer_check_cancel_old_keys_10000_173)
    0000000F 21r00r00         [12]   69 	ld	hl, #_printer_check_cancel_keys_10000_173
    00000012 AE               [ 8]   70 	xor	a, (hl)
    00000013 E6 20            [ 8]   71 	and	a, #0x20
    00000015 4F               [ 4]   72 	ld	c, a
    00000016 7E               [ 8]   73 	ld	a, (hl)
    00000017 E6 20            [ 8]   74 	and	a, #0x20
    00000019 A1               [ 4]   75 	and	a, c
    0000001A 4F               [ 4]   76 	ld	c, a
    0000001B AF               [ 4]   77 	xor	a, a
    0000001C B9               [ 4]   78 	cp	a, c
    0000001D 17               [ 4]   79 	rla
                                     80 ;src/print_example.c:13: }
    0000001E C9               [16]   81 	ret
                                     82 ;src/print_example.c:15: void main(void) {
                                     83 ;	---------------------------------
                                     84 ; Function main
                                     85 ; ---------------------------------
    0000001F                         86 _main::
                                     87 ;src/print_example.c:16: while(1) {
    0000001F                         88 00108$:
                                     89 ;src/print_example.c:17: puts("Press A to print");
    0000001F 11r61r00         [12]   90 	ld	de, #___str_0
    00000022 CDr00r00         [24]   91 	call	_puts
                                     92 ;src/print_example.c:18: waitpad(J_A);
    00000025 3E 10            [ 8]   93 	ld	a, #0x10
    00000027 CDr00r00         [24]   94 	call	_waitpad
                                     95 ;src/print_example.c:19: if (gbprinter_detect(PRINTER_DETECT_TIMEOUT) == PRN_STATUS_OK) {
    0000002A 3E 0A            [ 8]   96 	ld	a, #0x0a
    0000002C CDr00r00         [24]   97 	call	_gbprinter_detect
    0000002F B7               [ 4]   98 	or	a, a
    00000030 20 24            [12]   99 	jr	NZ, 00105$
                                    100 ;src/print_example.c:20: if (gbprinter_print_image(scene00001_map, scene00001_tiles,
    00000032 21 0E 09         [12]  101 	ld	hl, #0x90e
    00000035 E5               [16]  102 	push	hl
    00000036 3E 03            [ 8]  103 	ld	a, #0x03
    00000038 F5               [16]  104 	push	af
    00000039 33               [ 8]  105 	inc	sp
    0000003A 01r00r00         [12]  106 	ld	bc, #_scene00001_tiles
    0000003D 11r00r00         [12]  107 	ld	de, #_scene00001_map
    00000040 CDr00r00         [24]  108 	call	_gbprinter_print_image
    00000043 B7               [ 4]  109 	or	a, a
    00000044 20 08            [12]  110 	jr	NZ, 00102$
                                    111 ;src/print_example.c:23: puts("Printed OK!");
    00000046 11r72r00         [12]  112 	ld	de, #___str_1
    00000049 CDr00r00         [24]  113 	call	_puts
    0000004C 18 0E            [12]  114 	jr	00106$
    0000004E                        115 00102$:
                                    116 ;src/print_example.c:25: puts("Print error!");
    0000004E 11r7Er00         [12]  117 	ld	de, #___str_2
    00000051 CDr00r00         [24]  118 	call	_puts
    00000054 18 06            [12]  119 	jr	00106$
    00000056                        120 00105$:
                                    121 ;src/print_example.c:28: puts("No printer!");
    00000056 11r8Br00         [12]  122 	ld	de, #___str_3
    00000059 CDr00r00         [24]  123 	call	_puts
    0000005C                        124 00106$:
                                    125 ;src/print_example.c:30: waitpadup();
    0000005C CDr00r00         [24]  126 	call	_waitpadup
                                    127 ;src/print_example.c:32: }
    0000005F 18 BE            [12]  128 	jr	00108$
    00000061                        129 ___str_0:
    00000061 50 72 65 73 73 20 41   130 	.ascii "Press A to print"
             20 74 6F 20 70 72 69
             6E 74
    00000071 00                     131 	.db 0x00
    00000072                        132 ___str_1:
    00000072 50 72 69 6E 74 65 64   133 	.ascii "Printed OK!"
             20 4F 4B 21
    0000007D 00                     134 	.db 0x00
    0000007E                        135 ___str_2:
    0000007E 50 72 69 6E 74 20 65   136 	.ascii "Print error!"
             72 72 6F 72 21
    0000008A 00                     137 	.db 0x00
    0000008B                        138 ___str_3:
    0000008B 4E 6F 20 70 72 69 6E   139 	.ascii "No printer!"
             74 65 72 21
    00000096 00                     140 	.db 0x00
                                    141 	.area _CODE
                                    142 	.area _INITIALIZER
                                    143 	.area _CABS (ABS)

                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module gbc_hicolor
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _hicolor_palette_isr
                                     12 	.globl _set_bkg_tiles
                                     13 	.globl _set_bkg_data
                                     14 	.globl _set_interrupts
                                     15 	.globl _add_LCD
                                     16 	.globl _remove_LCD
                                     17 	.globl _hicolor_start
                                     18 ;--------------------------------------------------------
                                     19 ; special function registers
                                     20 ;--------------------------------------------------------
                                     21 ;--------------------------------------------------------
                                     22 ; ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area _DATA
    00000000                         25 _SP_SAVE:
    00000000                         26 	.ds 2
    00000002                         27 _STAT_SAVE:
    00000002                         28 	.ds 1
    00000003                         29 _p_hicolor_palettes:
    00000003                         30 	.ds 2
    00000005                         31 _hicolor_palettes_bank:
    00000005                         32 	.ds 1
    00000006                         33 _hicolor_last_scanline:
    00000006                         34 	.ds 1
                                     35 ;--------------------------------------------------------
                                     36 ; ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area _INITIALIZED
                                     39 ;--------------------------------------------------------
                                     40 ; absolute external ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area _DABS (ABS)
                                     43 ;--------------------------------------------------------
                                     44 ; global & static initialisations
                                     45 ;--------------------------------------------------------
                                     46 	.area _HOME
                                     47 	.area _GSINIT
                                     48 	.area _GSFINAL
                                     49 	.area _GSINIT
                                     50 ;--------------------------------------------------------
                                     51 ; Home
                                     52 ;--------------------------------------------------------
                                     53 	.area _HOME
                                     54 ;src/gbc_hicolor.c:20: void hicolor_palette_isr(void) NONBANKED {
                                     55 ;	---------------------------------
                                     56 ; Function hicolor_palette_isr
                                     57 ; ---------------------------------
    00000000                         58 _hicolor_palette_isr::
                                     59 ;src/gbc_hicolor.c:116: __endasm;
    00000000 F0r00            [12]   60 	ldh	a, (__current_bank) ; switch ROM bank
    00000002 F5               [16]   61 	push	af
    00000003 FAr05r00         [16]   62 	ld	a, (_hicolor_palettes_bank)
    00000006 B7               [ 4]   63 	or	a
    00000007 28 05            [12]   64 	jr	z, 3$
    00000009 E0r00            [12]   65 	ldh	(__current_bank), a
    0000000B EAr00r00         [16]   66 	ld	(_rROMB0), a
    0000000E                         67 3$:
    0000000E 08r00r00         [20]   68 	ld	(_SP_SAVE), sp ; save SP
    00000011 21r03r00         [12]   69 	ld	hl, #_p_hicolor_palettes ; load address of picture palettes buffer
    00000014 2A               [ 8]   70 	ld	a, (hl+)
    00000015 56               [ 8]   71 	ld	d, (hl)
    00000016 5F               [ 4]   72 	ld	e, a
    00000017 F0r00            [12]   73 	ldh	a, (_SCY_REG)
    00000019 CB 37            [ 8]   74 	swap	a
    0000001B 6F               [ 4]   75 	ld	l, a
    0000001C E6 0F            [ 8]   76 	and	#0x0f
    0000001E 67               [ 4]   77 	ld	h, a
    0000001F 3E F0            [ 8]   78 	ld	a, #0xf0
    00000021 A5               [ 4]   79 	and	l
    00000022 6F               [ 4]   80 	ld	l, a
    00000023 29               [ 8]   81 	add	hl, hl
    00000024 19               [ 8]   82 	add	hl, de ; offset address by SCY * (4 * 4 * 2)
    00000025 F9               [ 8]   83 	ld	sp, hl
    00000026 07               [ 4]   84 	rlca	; compensate odd/even line
    00000027 E6 20            [ 8]   85 	and	#0x20 ; if odd then start from 4-th palette; offset == 32
    00000029 F6 80            [ 8]   86 	or	#0b10000000 ; set auto-increment
    0000002B 21r00r00         [12]   87 	ld	hl, #_BCPS_REG
    0000002E 22               [ 8]   88 	ld	(hl+), a ; HL now points to BCPD
    0000002F 0E 20            [ 8]   89 	ld	c, #(8 * 4) ; read and set the the colors that come from previous lines
    00000031                         90 2$:
    00000031 D1               [12]   91 	pop	de
    00000032 73               [ 8]   92 	ld	(hl), e
    00000033 72               [ 8]   93 	ld	(hl), d
    00000034 0D               [ 4]   94 	dec	c
    00000035 20 FA            [12]   95 	jr	nz, 2$
    00000037                         96 0$:
    00000037 F0r00            [12]   97 	ldh	a, (_STAT_REG)
    00000039 E6 02            [ 8]   98 	and	#0b00000010
    0000003B 28 FA            [12]   99 	jr	z, 0$ ; wait for mode 3
    0000003D F0r00            [12]  100 	ldh	a, (_STAT_REG)
    0000003F EAr02r00         [16]  101 	ld	(_STAT_SAVE), a
    00000042 3E 08            [ 8]  102 	ld	a, #0b00001000
    00000044 E0r00            [12]  103 	ldh	(_STAT_REG), a
    00000046 AF               [ 4]  104 	xor	a
    00000047 E0r00            [12]  105 	ldh	(_IF_REG), a
    00000049                        106 1$:
    00000049 C1               [12]  107 	pop	bc ; preload the first two colors
    0000004A D1               [12]  108 	pop	de
    0000004B AF               [ 4]  109 	xor	a
    0000004C E0r00            [12]  110 	ldh	(_IF_REG), a
    0000004E 76               [ 4]  111 	halt	; wait for mode 0
    0000004F 71               [ 8]  112 	ld	(hl), c ; set the first two colors
    00000050 70               [ 8]  113 	ld	(hl), b
    00000051 73               [ 8]  114 	ld	(hl), e
    00000052 72               [ 8]  115 	ld	(hl), d
                                    116 	.rept	(4*4)-2 ; read and set four palettes except the two previously set colors
                                    117 	pop	de
                                    118 	ld	(hl), e
                                    119 	ld	(hl), d
                                    120 	.endm
    00000053 D1               [12]    1 	pop	de
    00000054 73               [ 8]    2 	ld	(hl), e
    00000055 72               [ 8]    3 	ld	(hl), d
    00000056 D1               [12]    1 	pop	de
    00000057 73               [ 8]    2 	ld	(hl), e
    00000058 72               [ 8]    3 	ld	(hl), d
    00000059 D1               [12]    1 	pop	de
    0000005A 73               [ 8]    2 	ld	(hl), e
    0000005B 72               [ 8]    3 	ld	(hl), d
    0000005C D1               [12]    1 	pop	de
    0000005D 73               [ 8]    2 	ld	(hl), e
    0000005E 72               [ 8]    3 	ld	(hl), d
    0000005F D1               [12]    1 	pop	de
    00000060 73               [ 8]    2 	ld	(hl), e
    00000061 72               [ 8]    3 	ld	(hl), d
    00000062 D1               [12]    1 	pop	de
    00000063 73               [ 8]    2 	ld	(hl), e
    00000064 72               [ 8]    3 	ld	(hl), d
    00000065 D1               [12]    1 	pop	de
    00000066 73               [ 8]    2 	ld	(hl), e
    00000067 72               [ 8]    3 	ld	(hl), d
    00000068 D1               [12]    1 	pop	de
    00000069 73               [ 8]    2 	ld	(hl), e
    0000006A 72               [ 8]    3 	ld	(hl), d
    0000006B D1               [12]    1 	pop	de
    0000006C 73               [ 8]    2 	ld	(hl), e
    0000006D 72               [ 8]    3 	ld	(hl), d
    0000006E D1               [12]    1 	pop	de
    0000006F 73               [ 8]    2 	ld	(hl), e
    00000070 72               [ 8]    3 	ld	(hl), d
    00000071 D1               [12]    1 	pop	de
    00000072 73               [ 8]    2 	ld	(hl), e
    00000073 72               [ 8]    3 	ld	(hl), d
    00000074 D1               [12]    1 	pop	de
    00000075 73               [ 8]    2 	ld	(hl), e
    00000076 72               [ 8]    3 	ld	(hl), d
    00000077 D1               [12]    1 	pop	de
    00000078 73               [ 8]    2 	ld	(hl), e
    00000079 72               [ 8]    3 	ld	(hl), d
    0000007A D1               [12]    1 	pop	de
    0000007B 73               [ 8]    2 	ld	(hl), e
    0000007C 72               [ 8]    3 	ld	(hl), d
    0000007D FAr06r00         [16]  121 	ld	a, (_hicolor_last_scanline)
    00000080 4F               [ 4]  122 	ld	c, a
    00000081 F0r00            [12]  123 	ldh	a, (_LY_REG)
    00000083 B9               [ 4]  124 	cp	c
    00000084 38 C3            [12]  125 	jr	c, 1$ ; load the next 4 palettes
    00000086 FAr02r00         [16]  126 	ld	a, (_STAT_SAVE)
    00000089 E0r00            [12]  127 	ldh	(_STAT_REG), a
    0000008B AF               [ 4]  128 	xor	a
    0000008C E0r00            [12]  129 	ldh	(_IF_REG), a
    0000008E 31r00r00         [12]  130 	ld	sp, #_SP_SAVE
    00000091 E1               [12]  131 	pop	hl
    00000092 F9               [ 8]  132 	ld	sp, hl ; restore SP
    00000093 F1               [12]  133 	pop	af
    00000094 E0r00            [12]  134 	ldh	(__current_bank), a
    00000096 EAr00r00         [16]  135 	ld	(_rROMB0), a
    00000099 C9               [16]  136 	ret
                                    137 ;src/gbc_hicolor.c:117: }
    0000009A C9               [16]  138 	ret
                                    139 ;src/gbc_hicolor.c:125: void hicolor_start(const hicolor_data * p_hicolor, uint8_t hicolor_bank) NONBANKED {
                                    140 ;	---------------------------------
                                    141 ; Function hicolor_start
                                    142 ; ---------------------------------
    0000009B                        143 _hicolor_start::
    0000009B E8 F9            [16]  144 	add	sp, #-7
    0000009D 4B               [ 4]  145 	ld	c, e
    0000009E 42               [ 4]  146 	ld	b, d
    0000009F 5F               [ 4]  147 	ld	e, a
                                    148 ;src/gbc_hicolor.c:129: }
    000000A0 F3               [ 4]  149 	di
                                    150 ;src/gbc_hicolor.c:128: remove_LCD(hicolor_palette_isr);
    000000A1 C5               [16]  151 	push	bc
    000000A2 D5               [16]  152 	push	de
    000000A3 11r00r00         [12]  153 	ld	de, #_hicolor_palette_isr
    000000A6 CDr00r00         [24]  154 	call	_remove_LCD
    000000A9 D1               [12]  155 	pop	de
    000000AA C1               [12]  156 	pop	bc
    000000AB FB               [ 4]  157 	ei
                                    158 ;src/gbc_hicolor.c:131: if (!p_hicolor) return;
    000000AC 78               [ 4]  159 	ld	a, b
    000000AD B1               [ 4]  160 	or	a, c
    000000AE CArC4r01         [16]  161 	jp	Z,00107$
                                    162 ;src/gbc_hicolor.c:132: hicolor_palettes_bank = hicolor_bank;
    000000B1 21r05r00         [12]  163 	ld	hl, #_hicolor_palettes_bank
    000000B4 73               [ 8]  164 	ld	(hl), e
                                    165 ;src/gbc_hicolor.c:134: uint8_t bank_save = CURRENT_BANK;
    000000B5 F0r00            [12]  166 	ldh	a, (__current_bank + 0)
    000000B7 F8 00            [12]  167 	ldhl	sp,	#0
    000000B9 77               [ 8]  168 	ld	(hl), a
                                    169 ;src/gbc_hicolor.c:135: if (hicolor_bank) SWITCH_ROM(hicolor_bank);
    000000BA 7B               [ 4]  170 	ld	a, e
    000000BB B7               [ 4]  171 	or	a, a
    000000BC 28 07            [12]  172 	jr	Z, 00104$
    000000BE 7B               [ 4]  173 	ld	a, e
    000000BF E0r00            [12]  174 	ldh	(__current_bank + 0), a
    000000C1 21r00r00         [12]  175 	ld	hl, #_rROMB0
    000000C4 73               [ 8]  176 	ld	(hl), e
    000000C5                        177 00104$:
                                    178 ;src/gbc_hicolor.c:138: p_hicolor_palettes = p_hicolor->p_palette;
    000000C5 21 09 00         [12]  179 	ld	hl, #0x0009
    000000C8 09               [ 8]  180 	add	hl, bc
    000000C9 5D               [ 4]  181 	ld	e, l
    000000CA 54               [ 4]  182 	ld	d, h
    000000CB 1A               [ 8]  183 	ld	a, (de)
    000000CC 21r03r00         [12]  184 	ld	hl, #_p_hicolor_palettes
    000000CF 22               [ 8]  185 	ld	(hl+), a
    000000D0 13               [ 8]  186 	inc	de
    000000D1 1A               [ 8]  187 	ld	a, (de)
    000000D2 77               [ 8]  188 	ld	(hl), a
                                    189 ;src/gbc_hicolor.c:141: hicolor_last_scanline = (p_hicolor->height_in_tiles > DEVICE_SCREEN_HEIGHT) ? (DEVICE_SCREEN_PX_HEIGHT - 1) : ((p_hicolor->height_in_tiles << 3) - 1);
    000000D3 21 02 00         [12]  190 	ld	hl, #0x0002
    000000D6 09               [ 8]  191 	add	hl, bc
    000000D7 E5               [16]  192 	push	hl
    000000D8 7D               [ 4]  193 	ld	a, l
    000000D9 F8 03            [12]  194 	ldhl	sp,	#3
    000000DB 77               [ 8]  195 	ld	(hl), a
    000000DC E1               [12]  196 	pop	hl
    000000DD 7C               [ 4]  197 	ld	a, h
    000000DE F8 02            [12]  198 	ldhl	sp,	#2
    000000E0 32               [ 8]  199 	ld	(hl-), a
    000000E1 2A               [ 8]  200 	ld	a, (hl+)
    000000E2 5F               [ 4]  201 	ld	e, a
    000000E3 56               [ 8]  202 	ld	d, (hl)
    000000E4 1A               [ 8]  203 	ld	a, (de)
    000000E5 6F               [ 4]  204 	ld	l, a
                                    205 ;	spillPairReg hl
                                    206 ;	spillPairReg hl
    000000E6 3E 12            [ 8]  207 	ld	a, #0x12
    000000E8 95               [ 4]  208 	sub	a, l
    000000E9 30 04            [12]  209 	jr	NC, 00109$
    000000EB 3E 8F            [ 8]  210 	ld	a, #0x8f
    000000ED 18 05            [12]  211 	jr	00110$
    000000EF                        212 00109$:
    000000EF 7D               [ 4]  213 	ld	a, l
    000000F0 87               [ 4]  214 	add	a, a
    000000F1 87               [ 4]  215 	add	a, a
    000000F2 87               [ 4]  216 	add	a, a
    000000F3 3D               [ 4]  217 	dec	a
    000000F4                        218 00110$:
    000000F4 EAr06r00         [16]  219 	ld	(#_hicolor_last_scanline),a
                                    220 ;src/gbc_hicolor.c:144: VBK_REG = VBK_BANK_0;
    000000F7 AF               [ 4]  221 	xor	a, a
    000000F8 E0r00            [12]  222 	ldh	(_VBK_REG + 0), a
                                    223 ;src/gbc_hicolor.c:145: set_bkg_data(0u, MIN(p_hicolor->tile_count, 256), p_hicolor->p_tiles);
    000000FA 21 03 00         [12]  224 	ld	hl, #0x0003
    000000FD 09               [ 8]  225 	add	hl, bc
    000000FE E5               [16]  226 	push	hl
    000000FF 7D               [ 4]  227 	ld	a, l
    00000100 F8 05            [12]  228 	ldhl	sp,	#5
    00000102 77               [ 8]  229 	ld	(hl), a
    00000103 E1               [12]  230 	pop	hl
    00000104 7C               [ 4]  231 	ld	a, h
    00000105 F8 04            [12]  232 	ldhl	sp,	#4
    00000107 32               [ 8]  233 	ld	(hl-), a
    00000108 2A               [ 8]  234 	ld	a, (hl+)
    00000109 5F               [ 4]  235 	ld	e, a
    0000010A 2A               [ 8]  236 	ld	a, (hl+)
    0000010B 57               [ 4]  237 	ld	d, a
    0000010C 1A               [ 8]  238 	ld	a, (de)
    0000010D 22               [ 8]  239 	ld	(hl+), a
    0000010E 13               [ 8]  240 	inc	de
    0000010F 1A               [ 8]  241 	ld	a, (de)
    00000110 77               [ 8]  242 	ld	(hl), a
    00000111 69               [ 4]  243 	ld	l, c
    00000112 60               [ 4]  244 	ld	h, b
    00000113 2A               [ 8]  245 	ld	a,	(hl+)
    00000114 66               [ 8]  246 	ld	h, (hl)
                                    247 ;	spillPairReg hl
                                    248 ;	spillPairReg hl
                                    249 ;	spillPairReg hl
    00000115 5F               [ 4]  250 	ld	e, a
    00000116 7C               [ 4]  251 	ld	a, h
    00000117 D6 01            [ 8]  252 	sub	a, #0x01
    00000119 30 03            [12]  253 	jr	NC, 00111$
    0000011B 7B               [ 4]  254 	ld	a, e
    0000011C 18 01            [12]  255 	jr	00112$
    0000011E                        256 00111$:
    0000011E AF               [ 4]  257 	xor	a, a
    0000011F                        258 00112$:
    0000011F F8 05            [12]  259 	ldhl	sp,	#5
    00000121 5E               [ 8]  260 	ld	e, (hl)
    00000122 23               [ 8]  261 	inc	hl
    00000123 56               [ 8]  262 	ld	d, (hl)
    00000124 D5               [16]  263 	push	de
    00000125 67               [ 4]  264 	ld	h, a
    00000126 2E 00            [ 8]  265 	ld	l, #0x00
    00000128 E5               [16]  266 	push	hl
    00000129 CDr00r00         [24]  267 	call	_set_bkg_data
    0000012C E8 04            [16]  268 	add	sp, #4
                                    269 ;src/gbc_hicolor.c:146: set_bkg_tiles(0u, 0u, DEVICE_SCREEN_WIDTH, p_hicolor->height_in_tiles, p_hicolor->p_map);
    0000012E 21 05 00         [12]  270 	ld	hl, #0x0005
    00000131 09               [ 8]  271 	add	hl, bc
    00000132 5D               [ 4]  272 	ld	e, l
    00000133 54               [ 4]  273 	ld	d, h
    00000134 1A               [ 8]  274 	ld	a, (de)
    00000135 F8 05            [12]  275 	ldhl	sp,	#5
    00000137 22               [ 8]  276 	ld	(hl+), a
    00000138 13               [ 8]  277 	inc	de
    00000139 1A               [ 8]  278 	ld	a, (de)
    0000013A 77               [ 8]  279 	ld	(hl), a
    0000013B F8 01            [12]  280 	ldhl	sp,#1
    0000013D 2A               [ 8]  281 	ld	a, (hl+)
    0000013E 5F               [ 4]  282 	ld	e, a
    0000013F 56               [ 8]  283 	ld	d, (hl)
    00000140 1A               [ 8]  284 	ld	a, (de)
    00000141 F8 05            [12]  285 	ldhl	sp,	#5
    00000143 5E               [ 8]  286 	ld	e, (hl)
    00000144 23               [ 8]  287 	inc	hl
    00000145 56               [ 8]  288 	ld	d, (hl)
    00000146 D5               [16]  289 	push	de
    00000147 67               [ 4]  290 	ld	h, a
    00000148 2E 14            [ 8]  291 	ld	l, #0x14
    0000014A E5               [16]  292 	push	hl
    0000014B AF               [ 4]  293 	xor	a, a
    0000014C 0F               [ 4]  294 	rrca
    0000014D F5               [16]  295 	push	af
    0000014E CDr00r00         [24]  296 	call	_set_bkg_tiles
    00000151 E8 06            [16]  297 	add	sp, #6
                                    298 ;src/gbc_hicolor.c:149: VBK_REG = VBK_BANK_1;
    00000153 3E 01            [ 8]  299 	ld	a, #0x01
    00000155 E0r00            [12]  300 	ldh	(_VBK_REG + 0), a
                                    301 ;src/gbc_hicolor.c:150: if (p_hicolor->tile_count > 256) set_bkg_data(0u, (p_hicolor->tile_count - 256), p_hicolor->p_tiles + (256 * 16));
    00000157 59               [ 4]  302 	ld	e, c
    00000158 50               [ 4]  303 	ld	d, b
    00000159 1A               [ 8]  304 	ld	a, (de)
    0000015A F8 05            [12]  305 	ldhl	sp,	#5
    0000015C 22               [ 8]  306 	ld	(hl+), a
    0000015D 13               [ 8]  307 	inc	de
    0000015E 1A               [ 8]  308 	ld	a, (de)
    0000015F 32               [ 8]  309 	ld	(hl-), a
    00000160 2A               [ 8]  310 	ld	a, (hl+)
    00000161 5F               [ 4]  311 	ld	e, a
    00000162 56               [ 8]  312 	ld	d, (hl)
    00000163 AF               [ 4]  313 	xor	a, a
    00000164 BB               [ 4]  314 	cp	a, e
    00000165 3E 01            [ 8]  315 	ld	a, #0x01
    00000167 9A               [ 4]  316 	sbc	a, d
    00000168 30 1B            [12]  317 	jr	NC, 00106$
    0000016A 2B               [ 8]  318 	dec	hl
    0000016B 2B               [ 8]  319 	dec	hl
    0000016C 2B               [ 8]  320 	dec	hl
    0000016D 2A               [ 8]  321 	ld	a, (hl+)
    0000016E 5F               [ 4]  322 	ld	e, a
    0000016F 56               [ 8]  323 	ld	d, (hl)
    00000170 1A               [ 8]  324 	ld	a, (de)
    00000171 6F               [ 4]  325 	ld	l, a
                                    326 ;	spillPairReg hl
                                    327 ;	spillPairReg hl
    00000172 13               [ 8]  328 	inc	de
    00000173 1A               [ 8]  329 	ld	a, (de)
                                    330 ;	spillPairReg hl
                                    331 ;	spillPairReg hl
    00000174 5D               [ 4]  332 	ld	e, l
    00000175 C6 10            [ 8]  333 	add	a, #0x10
    00000177 57               [ 4]  334 	ld	d, a
    00000178 F8 05            [12]  335 	ldhl	sp,	#5
    0000017A 7E               [ 8]  336 	ld	a, (hl)
    0000017B D5               [16]  337 	push	de
    0000017C 67               [ 4]  338 	ld	h, a
    0000017D 2E 00            [ 8]  339 	ld	l, #0x00
    0000017F E5               [16]  340 	push	hl
    00000180 CDr00r00         [24]  341 	call	_set_bkg_data
    00000183 E8 04            [16]  342 	add	sp, #4
    00000185                        343 00106$:
                                    344 ;src/gbc_hicolor.c:151: set_bkg_tiles(0, 0, DEVICE_SCREEN_WIDTH, p_hicolor->height_in_tiles, p_hicolor->p_attribute_map);
    00000185 21 07 00         [12]  345 	ld	hl, #0x0007
    00000188 09               [ 8]  346 	add	hl, bc
    00000189 2A               [ 8]  347 	ld	a, (hl+)
    0000018A 4F               [ 4]  348 	ld	c, a
    0000018B 46               [ 8]  349 	ld	b, (hl)
    0000018C F8 01            [12]  350 	ldhl	sp,#1
    0000018E 2A               [ 8]  351 	ld	a, (hl+)
    0000018F 5F               [ 4]  352 	ld	e, a
    00000190 56               [ 8]  353 	ld	d, (hl)
    00000191 1A               [ 8]  354 	ld	a, (de)
    00000192 C5               [16]  355 	push	bc
    00000193 67               [ 4]  356 	ld	h, a
    00000194 2E 14            [ 8]  357 	ld	l, #0x14
    00000196 E5               [16]  358 	push	hl
    00000197 AF               [ 4]  359 	xor	a, a
    00000198 0F               [ 4]  360 	rrca
    00000199 F5               [16]  361 	push	af
    0000019A CDr00r00         [24]  362 	call	_set_bkg_tiles
    0000019D E8 06            [16]  363 	add	sp, #6
                                    364 ;src/gbc_hicolor.c:152: VBK_REG = VBK_BANK_0;
    0000019F AF               [ 4]  365 	xor	a, a
    000001A0 E0r00            [12]  366 	ldh	(_VBK_REG + 0), a
                                    367 ;src/gbc_hicolor.c:154: SWITCH_ROM(bank_save);
    000001A2 F8 00            [12]  368 	ldhl	sp,	#0
    000001A4 7E               [ 8]  369 	ld	a, (hl)
    000001A5 E0r00            [12]  370 	ldh	(__current_bank + 0), a
    000001A7 7E               [ 8]  371 	ld	a, (hl)
    000001A8 EAr00r00         [16]  372 	ld	(#_rROMB0),a
                                    373 ;src/gbc_hicolor.c:162: }
    000001AB F3               [ 4]  374 	di
                                    375 ;src/gbc_hicolor.c:158: LYC_REG = 152;
    000001AC 3E 98            [ 8]  376 	ld	a, #0x98
    000001AE E0r00            [12]  377 	ldh	(_LYC_REG + 0), a
                                    378 ;src/gbc_hicolor.c:159: STAT_REG = STATF_LYC;
    000001B0 3E 40            [ 8]  379 	ld	a, #0x40
    000001B2 E0r00            [12]  380 	ldh	(_STAT_REG + 0), a
                                    381 ;src/gbc_hicolor.c:161: add_LCD(hicolor_palette_isr);
    000001B4 11r00r00         [12]  382 	ld	de, #_hicolor_palette_isr
    000001B7 CDr00r00         [24]  383 	call	_add_LCD
    000001BA FB               [ 4]  384 	ei
                                    385 ;src/gbc_hicolor.c:163: set_interrupts(IE_REG | LCD_IFLAG);
    000001BB F0r00            [12]  386 	ldh	a, (_IE_REG + 0)
    000001BD 4F               [ 4]  387 	ld	c, a
    000001BE CB C9            [ 8]  388 	set	1, c
    000001C0 79               [ 4]  389 	ld	a, c
    000001C1 CDr00r00         [24]  390 	call	_set_interrupts
    000001C4                        391 00107$:
                                    392 ;src/gbc_hicolor.c:164: }
    000001C4 E8 07            [16]  393 	add	sp, #7
    000001C6 C9               [16]  394 	ret
                                    395 	.area _HOME
                                    396 ;--------------------------------------------------------
                                    397 ; code
                                    398 ;--------------------------------------------------------
                                    399 	.area _CODE
                                    400 	.area _CODE
                                    401 	.area _INITIALIZER
                                    402 	.area _CABS (ABS)
